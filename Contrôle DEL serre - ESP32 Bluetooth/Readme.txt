Explication du PCB de contrôle de lumière
Le relais choisit agit comme un interrupteur DPST qui change de pôle seulement lorsqu’on induit un courant dans sa bobine. Ainsi, le champ magnétique créé change le pôle de l’interrupteur. Donc, dans notre cas, la bobine est contrôlée un transistor qui l’active ou la désactive selon la plage d’heure choisit selon l’application Bluetooth. Lorsque la bobine n’est pas activée, l’interrupteur est connecté à un niveau flottant pour empêcher la connexion du 120V vers les lumières et lorsque la bobine est activée, l’interrupteur est connecté le 120V sur les lumières pour les allumées. Nous utilisons un transistor pour activer ou désactivé la bobine, car celle-ci a besoin d’une tension de 5V et les sorties du ESP32 sont seulement à 3.3V. Donc, c’est avec le 5V USB du ESP32 que l’on active ou désactive la bobine et avec une sortie 3.3V que nous désactivons et activons le transistor. La résistance de 100 ohms est mise puisque nous avons répété un montage fonctionnel que nous avons déjà fait. Alors, nous ne savons pas trop sa fonction dans le montage à part diminuer le courant. L’un des coté des lumières est toujours connecté sur le retour du 120V et le relais contrôle le vivant (live) du 120V. Les lumières et le 120V sont connectés sur des borniers séparés et il faut regarder les indications sur le PCB pour savoir ou brancher chaque fils.  

Explication du code de contrôle de lumière (Esp32)
Pour vérifier si les lumières de la serre doivent être allumés ou non, le Esp32 va chercher l’heure UTC grâce au protocole NTP (Network Time Protocol). Puisque que l’heure reçu est en UTC, il faut la convertir en heure de Montréal (UTC-5 :00). Une fois que l’heure est convertis, on la compare avec l’heure reçu par l’application Bluetooth. Si on est dans les limites définis, on allume les lumières sinon elles restent éteintes. 
**Erreur de fonctionnement** Lors de la vérification, une erreur nous est apparu dans le fonctionnement. Lorsque on met les heures de début et de fin respectivement à 20h et 3h par exemple, nous rencontrons une erreur. Car notre calcul se fait de la sorte :
	If (Moment début < heure actuelle <  Moment fin) allume;
	Else éteint;
Le problème quand l’heure de fin est plus petit que l’heure de début, fait en sorte que la condition n’est jamais vrai. Pour régler ce problème, il faudrait faire cette manipulation :
	If ((Moment début < heure actuelle < 23h59) ou (00h00 < heure actuelle < Moment fin)) allume;
	Else éteint;
