

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Nov 18 16:21:36 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,inline
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,inline
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,inline
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,inline
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1,inline
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1,inline
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1,inline
    75                           	psect	text62,global,reloc=2,class=CODE,delta=1
    76                           	psect	text63,global,reloc=2,class=CODE,delta=1
    77                           	psect	text64,global,reloc=2,class=CODE,delta=1,inline
    78                           	psect	text65,global,reloc=2,class=CODE,delta=1,inline
    79                           	psect	text66,global,reloc=2,class=CODE,delta=1,inline
    80                           	psect	text67,global,reloc=2,class=CODE,delta=1,inline
    81                           	psect	text68,global,reloc=2,class=CODE,delta=1,inline
    82                           	psect	text69,global,reloc=2,class=CODE,delta=1,inline
    83                           	psect	text70,global,reloc=2,class=CODE,delta=1
    84                           	psect	text71,global,reloc=2,class=CODE,delta=1
    85                           	psect	text72,global,reloc=2,class=CODE,delta=1,inline
    86                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    87                           	psect	text73,global,reloc=2,class=CODE,delta=1,inline
    88                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    89                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    90  0000                     
    91                           ; Version 2.10
    92                           ; Generated 31/07/2019 GMT
    93                           ; 
    94                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    95                           ; All rights reserved.
    96                           ; 
    97                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    98                           ; 
    99                           ; Redistribution and use in source and binary forms, with or without modification, are
   100                           ; permitted provided that the following conditions are met:
   101                           ; 
   102                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   103                           ;        conditions and the following disclaimer.
   104                           ; 
   105                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   106                           ;        of conditions and the following disclaimer in the documentation and/or other
   107                           ;        materials provided with the distribution.
   108                           ; 
   109                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   110                           ;        software without specific prior written permission.
   111                           ; 
   112                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   113                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   114                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   115                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   116                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   117                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   118                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   119                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   120                           ; 
   121                           ; 
   122                           ; Code-generator required, PIC18F25K80 Definitions
   123                           ; 
   124                           ; SFR Addresses
   125  0000                     
   126 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   127  0000                     
   128 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   129  0000                     
   130 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   131  0000                     
   132 ;; Function _I2C_SlaveDefBusColInterruptHandler is unused but had its address taken
   133  0000                     
   134                           	psect	nvBANK0
   135  0000EA                     __pnvBANK0:
   136                           	opt callstack 0
   137  0000EA                     _EUSART1_ErrorHandler:
   138                           	opt callstack 0
   139  0000EA                     	ds	2
   140  0000EC                     _EUSART1_OverrunErrorHandler:
   141                           	opt callstack 0
   142  0000EC                     	ds	2
   143  0000EE                     _EUSART1_FramingErrorHandler:
   144                           	opt callstack 0
   145  0000EE                     	ds	2
   146  0000                     _WPUB	set	3931
   147  0000                     _ANCON1	set	3932
   148  0000                     _ANCON0	set	3933
   149  0000                     _PIR2bits	set	4001
   150  0000                     _RCONbits	set	4048
   151  0000                     _PIE2bits	set	4000
   152  0000                     _SSPBUF	set	4041
   153  0000                     _SSPCON2bits	set	4037
   154  0000                     _SSPSTATbits	set	4039
   155  0000                     _PIE1bits	set	3997
   156  0000                     _SSPADD	set	4040
   157  0000                     _SSPCON1bits	set	4038
   158  0000                     _SSPCON2	set	4037
   159  0000                     _SSPCON1	set	4038
   160  0000                     _SSPSTAT	set	4039
   161  0000                     _INTCONbits	set	4082
   162  0000                     _INTCON2bits	set	4081
   163  0000                     _TRISC	set	3988
   164  0000                     _TRISB	set	3987
   165  0000                     _TRISA	set	3986
   166  0000                     _LATC	set	3979
   167  0000                     _LATB	set	3978
   168  0000                     _LATA	set	3977
   169  0000                     _REFOCON	set	3994
   170  0000                     _OSCTUNE	set	3995
   171  0000                     _OSCCON2	set	4050
   172  0000                     _OSCCON	set	4051
   173  0000                     _TXREG1	set	4013
   174  0000                     _RCREG1	set	4014
   175  0000                     _RCSTA1bits	set	4011
   176  0000                     _TXSTA1bits	set	4012
   177  0000                     _PIR1bits	set	3998
   178  0000                     _SPBRGH1	set	3965
   179  0000                     _SPBRG1	set	4015
   180  0000                     _TXSTA1	set	4012
   181  0000                     _RCSTA1	set	4011
   182  0000                     _BAUDCON1	set	4007
   183  0000                     _ADCON0bits	set	4034
   184  0000                     _ADRESL	set	4035
   185  0000                     _ADRESH	set	4036
   186  0000                     _ADCON2	set	4032
   187  0000                     _ADCON1	set	4033
   188  0000                     _ADCON0	set	4034
   189                           
   190                           	psect	smallconst
   191  000F00                     __psmallconst:
   192                           	opt callstack 0
   193  000F00  00                 	db	0
   194  000F01                     STR_2:
   195  000F01  64                 	db	100	;'d'
   196  000F02  61                 	db	97	;'a'
   197  000F03  74                 	db	116	;'t'
   198  000F04  6F                 	db	111	;'o'
   199  000F05  75                 	db	117	;'u'
   200  000F06  74                 	db	116	;'t'
   201  000F07  20                 	db	32
   202  000F08  3D                 	db	61	;'='
   203  000F09  20                 	db	32
   204  000F0A  25                 	db	37
   205  000F0B  64                 	db	100	;'d'
   206  000F0C  00                 	db	0
   207  000F0D                     STR_1:
   208  000F0D  1B                 	db	27
   209  000F0E  63                 	db	99	;'c'
   210  000F0F  00                 	db	0
   211                           
   212                           ; #config settings
   213  000F10  00                 	db	0	; dummy byte at the end
   214  0000                     
   215                           	psect	cinit
   216  002632                     __pcinit:
   217                           	opt callstack 0
   218  002632                     start_initialization:
   219                           	opt callstack 0
   220  002632                     __initialization:
   221                           	opt callstack 0
   222                           
   223                           ; Clear objects allocated to BANK1 (32 bytes)
   224  002632  EE01  F000         	lfsr	0,__pbssBANK1
   225  002636  0E20               	movlw	32
   226  002638                     clear_0:
   227  002638  6AEE               	clrf	postinc0,c
   228  00263A  06E8               	decf	wreg,f,c
   229  00263C  E1FD               	bnz	clear_0
   230                           
   231                           ; Clear objects allocated to BANK0 (29 bytes)
   232  00263E  EE00  F0CD         	lfsr	0,__pbssBANK0
   233  002642  0E1D               	movlw	29
   234  002644                     clear_1:
   235  002644  6AEE               	clrf	postinc0,c
   236  002646  06E8               	decf	wreg,f,c
   237  002648  E1FD               	bnz	clear_1
   238                           
   239                           ; Clear objects allocated to COMRAM (3 bytes)
   240  00264A  6A5E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   241  00264C  6A5D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   242  00264E  6A5C               	clrf	__pbssCOMRAM& (0+255),c
   243  002650                     end_of_initialization:
   244                           	opt callstack 0
   245  002650                     __end_of__initialization:
   246                           	opt callstack 0
   247  002650  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   248  002652  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   249  002654  0E00               	movlw	low (__Lmediumconst shr (0+16))
   250  002656  6EF8               	movwf	tblptru,c
   251  002658  0100               	movlb	0
   252  00265A  EF6B  F011         	goto	_main	;jump to C main() function
   253                           
   254                           	psect	bssCOMRAM
   255  00005C                     __pbssCOMRAM:
   256                           	opt callstack 0
   257  00005C                     _i2cWrData:
   258                           	opt callstack 0
   259  00005C                     	ds	1
   260  00005D                     _i2cNextState:
   261                           	opt callstack 0
   262  00005D                     	ds	1
   263  00005E                     _i2cState:
   264                           	opt callstack 0
   265  00005E                     	ds	1
   266                           
   267                           	psect	bssBANK0
   268  0000CD                     __pbssBANK0:
   269                           	opt callstack 0
   270  0000CD                     _data:
   271                           	opt callstack 0
   272  0000CD                     	ds	4
   273  0000D1                     _nout:
   274                           	opt callstack 0
   275  0000D1                     	ds	2
   276  0000D3                     _width:
   277                           	opt callstack 0
   278  0000D3                     	ds	2
   279  0000D5                     _prec:
   280                           	opt callstack 0
   281  0000D5                     	ds	2
   282  0000D7                     _flags:
   283                           	opt callstack 0
   284  0000D7                     	ds	2
   285  0000D9                     _I2C_SlaveWrColInterruptHandler:
   286                           	opt callstack 0
   287  0000D9                     	ds	2
   288  0000DB                     _I2C_SlaveBusColInterruptHandler:
   289                           	opt callstack 0
   290  0000DB                     	ds	2
   291  0000DD                     _I2C_SlaveAddrInterruptHandler:
   292                           	opt callstack 0
   293  0000DD                     	ds	2
   294  0000DF                     _I2C_SlaveWrInterruptHandler:
   295                           	opt callstack 0
   296  0000DF                     	ds	2
   297  0000E1                     _I2C_SlaveRdInterruptHandler:
   298                           	opt callstack 0
   299  0000E1                     	ds	2
   300  0000E3                     _MSSP_InterruptHandler:
   301                           	opt callstack 0
   302  0000E3                     	ds	2
   303  0000E5                     _ADC_InterruptHandler:
   304                           	opt callstack 0
   305  0000E5                     	ds	2
   306  0000E7                     _i2cSlaveAddr:
   307                           	opt callstack 0
   308  0000E7                     	ds	1
   309  0000E8                     _i2cRdData:
   310                           	opt callstack 0
   311  0000E8                     	ds	1
   312  0000E9                     _eusart1RxLastError:
   313                           	opt callstack 0
   314  0000E9                     	ds	1
   315                           
   316                           	psect	bssBANK1
   317  000100                     __pbssBANK1:
   318                           	opt callstack 0
   319  000100                     _dbuf:
   320                           	opt callstack 0
   321  000100                     	ds	32
   322                           
   323                           	psect	cstackBANK0
   324  000060                     __pcstackBANK0:
   325                           	opt callstack 0
   326  000060                     	ds	2
   327  000062                     i2printf@ap:
   328                           	opt callstack 0
   329                           
   330                           ; 2 bytes @ 0x2
   331  000062                     	ds	2
   332  000064                     ??_INTERRUPT_InterruptManager:
   333                           
   334                           ; 1 bytes @ 0x4
   335  000064                     	ds	10
   336  00006E                     ?_strlen:
   337                           	opt callstack 0
   338  00006E                     ?_ADC_GetConversion:
   339                           	opt callstack 0
   340  00006E                     ?___aodiv:
   341                           	opt callstack 0
   342  00006E                     ?___aomod:
   343                           	opt callstack 0
   344  00006E                     EUSART1_Write@txData:
   345                           	opt callstack 0
   346  00006E                     I2C_SlaveSetSlaveAddr@slaveAddr:
   347                           	opt callstack 0
   348  00006E                     I2C_SlaveSetSlaveMask@maskAddr:
   349                           	opt callstack 0
   350  00006E                     EUSART1_SetFramingErrorHandler@interruptHandler:
   351                           	opt callstack 0
   352  00006E                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   353                           	opt callstack 0
   354  00006E                     EUSART1_SetErrorHandler@interruptHandler:
   355                           	opt callstack 0
   356  00006E                     I2C_SlaveSetIsrHandler@handler:
   357                           	opt callstack 0
   358  00006E                     I2C_SlaveSetReadIntHandler@handler:
   359                           	opt callstack 0
   360  00006E                     I2C_SlaveSetWriteIntHandler@handler:
   361                           	opt callstack 0
   362  00006E                     I2C_SlaveSetAddrIntHandler@handler:
   363                           	opt callstack 0
   364  00006E                     I2C_SlaveSetWrColIntHandler@handler:
   365                           	opt callstack 0
   366  00006E                     I2C_SlaveSetBusColIntHandler@handler:
   367                           	opt callstack 0
   368  00006E                     strlen@s:
   369                           	opt callstack 0
   370  00006E                     ___aodiv@dividend:
   371                           	opt callstack 0
   372  00006E                     ___aomod@dividend:
   373                           	opt callstack 0
   374                           
   375                           ; 8 bytes @ 0xE
   376  00006E                     	ds	1
   377  00006F                     putch@txData:
   378                           	opt callstack 0
   379                           
   380                           ; 1 bytes @ 0xF
   381  00006F                     	ds	1
   382  000070                     ??_ADC_GetConversion:
   383  000070                     fputc@c:
   384                           	opt callstack 0
   385  000070                     strlen@a:
   386                           	opt callstack 0
   387                           
   388                           ; 2 bytes @ 0x10
   389  000070                     	ds	2
   390  000072                     ADC_GetConversion@channel:
   391                           	opt callstack 0
   392  000072                     fputc@fp:
   393                           	opt callstack 0
   394                           
   395                           ; 2 bytes @ 0x12
   396  000072                     	ds	2
   397  000074                     ??_fputc:
   398                           
   399                           ; 1 bytes @ 0x14
   400  000074                     	ds	2
   401  000076                     ___aodiv@divisor:
   402                           	opt callstack 0
   403  000076                     ___aomod@divisor:
   404                           	opt callstack 0
   405                           
   406                           ; 8 bytes @ 0x16
   407  000076                     	ds	3
   408  000079                     fputs@s:
   409                           	opt callstack 0
   410                           
   411                           ; 2 bytes @ 0x19
   412  000079                     	ds	2
   413  00007B                     fputs@fp:
   414                           	opt callstack 0
   415                           
   416                           ; 2 bytes @ 0x1B
   417  00007B                     	ds	2
   418  00007D                     fputs@c:
   419                           	opt callstack 0
   420                           
   421                           ; 1 bytes @ 0x1D
   422  00007D                     	ds	1
   423  00007E                     ___aodiv@counter:
   424                           	opt callstack 0
   425  00007E                     ___aomod@counter:
   426                           	opt callstack 0
   427  00007E                     fputs@i:
   428                           	opt callstack 0
   429                           
   430                           ; 2 bytes @ 0x1E
   431  00007E                     	ds	1
   432  00007F                     ___aodiv@sign:
   433                           	opt callstack 0
   434  00007F                     ___aomod@sign:
   435                           	opt callstack 0
   436                           
   437                           ; 1 bytes @ 0x1F
   438  00007F                     	ds	1
   439  000080                     ?_abs:
   440                           	opt callstack 0
   441  000080                     ?_pad:
   442                           	opt callstack 0
   443  000080                     pad@fp:
   444                           	opt callstack 0
   445  000080                     abs@a:
   446                           	opt callstack 0
   447  000080                     ___aodiv@quotient:
   448                           	opt callstack 0
   449                           
   450                           ; 8 bytes @ 0x20
   451  000080                     	ds	2
   452  000082                     ??_abs:
   453  000082                     pad@buf:
   454                           	opt callstack 0
   455                           
   456                           ; 2 bytes @ 0x22
   457  000082                     	ds	2
   458  000084                     pad@p:
   459                           	opt callstack 0
   460                           
   461                           ; 2 bytes @ 0x24
   462  000084                     	ds	2
   463  000086                     ??_pad:
   464                           
   465                           ; 1 bytes @ 0x26
   466  000086                     	ds	1
   467  000087                     pad@i:
   468                           	opt callstack 0
   469                           
   470                           ; 2 bytes @ 0x27
   471  000087                     	ds	2
   472  000089                     pad@w:
   473                           	opt callstack 0
   474                           
   475                           ; 2 bytes @ 0x29
   476  000089                     	ds	2
   477  00008B                     ?_dtoa:
   478                           	opt callstack 0
   479  00008B                     dtoa@fp:
   480                           	opt callstack 0
   481                           
   482                           ; 2 bytes @ 0x2B
   483  00008B                     	ds	2
   484  00008D                     dtoa@d:
   485                           	opt callstack 0
   486                           
   487                           ; 8 bytes @ 0x2D
   488  00008D                     	ds	8
   489  000095                     ??_dtoa:
   490                           
   491                           ; 1 bytes @ 0x35
   492  000095                     	ds	8
   493  00009D                     _dtoa$1498:
   494                           	opt callstack 0
   495                           
   496                           ; 2 bytes @ 0x3D
   497  00009D                     	ds	2
   498  00009F                     dtoa@p:
   499                           	opt callstack 0
   500                           
   501                           ; 2 bytes @ 0x3F
   502  00009F                     	ds	2
   503  0000A1                     dtoa@w:
   504                           	opt callstack 0
   505                           
   506                           ; 2 bytes @ 0x41
   507  0000A1                     	ds	2
   508  0000A3                     dtoa@s:
   509                           	opt callstack 0
   510                           
   511                           ; 2 bytes @ 0x43
   512  0000A3                     	ds	2
   513  0000A5                     dtoa@n:
   514                           	opt callstack 0
   515                           
   516                           ; 8 bytes @ 0x45
   517  0000A5                     	ds	8
   518  0000AD                     dtoa@i:
   519                           	opt callstack 0
   520                           
   521                           ; 2 bytes @ 0x4D
   522  0000AD                     	ds	2
   523  0000AF                     ?_vfpfcnvrt:
   524                           	opt callstack 0
   525  0000AF                     vfpfcnvrt@fp:
   526                           	opt callstack 0
   527                           
   528                           ; 2 bytes @ 0x4F
   529  0000AF                     	ds	2
   530  0000B1                     vfpfcnvrt@fmt:
   531                           	opt callstack 0
   532                           
   533                           ; 2 bytes @ 0x51
   534  0000B1                     	ds	2
   535  0000B3                     vfpfcnvrt@ap:
   536                           	opt callstack 0
   537                           
   538                           ; 2 bytes @ 0x53
   539  0000B3                     	ds	2
   540  0000B5                     ??_vfpfcnvrt:
   541                           
   542                           ; 1 bytes @ 0x55
   543  0000B5                     	ds	2
   544  0000B7                     vfpfcnvrt@ll:
   545                           	opt callstack 0
   546                           
   547                           ; 8 bytes @ 0x57
   548  0000B7                     	ds	8
   549  0000BF                     ?_vfprintf:
   550                           	opt callstack 0
   551  0000BF                     vfprintf@fp:
   552                           	opt callstack 0
   553                           
   554                           ; 2 bytes @ 0x5F
   555  0000BF                     	ds	2
   556  0000C1                     vfprintf@fmt:
   557                           	opt callstack 0
   558                           
   559                           ; 2 bytes @ 0x61
   560  0000C1                     	ds	2
   561  0000C3                     vfprintf@ap:
   562                           	opt callstack 0
   563                           
   564                           ; 2 bytes @ 0x63
   565  0000C3                     	ds	2
   566  0000C5                     vfprintf@cfmt:
   567                           	opt callstack 0
   568                           
   569                           ; 2 bytes @ 0x65
   570  0000C5                     	ds	2
   571  0000C7                     ?_printf:
   572                           	opt callstack 0
   573  0000C7                     printf@fmt:
   574                           	opt callstack 0
   575                           
   576                           ; 2 bytes @ 0x67
   577  0000C7                     	ds	2
   578  0000C9                     
   579                           ; 1 bytes @ 0x69
   580  0000C9                     	ds	2
   581  0000CB                     printf@ap:
   582                           	opt callstack 0
   583                           
   584                           ; 2 bytes @ 0x6B
   585  0000CB                     	ds	2
   586  0000CD                     
   587                           ; 1 bytes @ 0x6D
   588                           
   589                           	psect	cstackCOMRAM
   590  000001                     __pcstackCOMRAM:
   591                           	opt callstack 0
   592  000001                     ?i2_strlen:
   593                           	opt callstack 0
   594  000001                     ?i2___aodiv:
   595                           	opt callstack 0
   596  000001                     ?i2___aomod:
   597                           	opt callstack 0
   598  000001                     I2C_SlaveSendTxData@data:
   599                           	opt callstack 0
   600  000001                     i2EUSART1_Write@txData:
   601                           	opt callstack 0
   602  000001                     i2strlen@s:
   603                           	opt callstack 0
   604  000001                     i2___aodiv@dividend:
   605                           	opt callstack 0
   606  000001                     i2___aomod@dividend:
   607                           	opt callstack 0
   608                           
   609                           ; 8 bytes @ 0x0
   610  000001                     	ds	1
   611  000002                     ??_I2C_Isr:
   612  000002                     I2C_Write@data:
   613                           	opt callstack 0
   614  000002                     i2putch@txData:
   615                           	opt callstack 0
   616                           
   617                           ; 1 bytes @ 0x1
   618  000002                     	ds	1
   619  000003                     i2fputc@c:
   620                           	opt callstack 0
   621  000003                     i2strlen@a:
   622                           	opt callstack 0
   623                           
   624                           ; 2 bytes @ 0x2
   625  000003                     	ds	2
   626  000005                     i2fputc@fp:
   627                           	opt callstack 0
   628                           
   629                           ; 2 bytes @ 0x4
   630  000005                     	ds	2
   631  000007                     ??i2_fputc:
   632                           
   633                           ; 1 bytes @ 0x6
   634  000007                     	ds	2
   635  000009                     i2___aodiv@divisor:
   636                           	opt callstack 0
   637  000009                     i2___aomod@divisor:
   638                           	opt callstack 0
   639                           
   640                           ; 8 bytes @ 0x8
   641  000009                     	ds	3
   642  00000C                     i2fputs@s:
   643                           	opt callstack 0
   644                           
   645                           ; 2 bytes @ 0xB
   646  00000C                     	ds	2
   647  00000E                     i2fputs@fp:
   648                           	opt callstack 0
   649                           
   650                           ; 2 bytes @ 0xD
   651  00000E                     	ds	2
   652  000010                     i2fputs@c:
   653                           	opt callstack 0
   654                           
   655                           ; 1 bytes @ 0xF
   656  000010                     	ds	1
   657  000011                     i2___aodiv@counter:
   658                           	opt callstack 0
   659  000011                     i2___aomod@counter:
   660                           	opt callstack 0
   661  000011                     i2fputs@i:
   662                           	opt callstack 0
   663                           
   664                           ; 2 bytes @ 0x10
   665  000011                     	ds	1
   666  000012                     i2___aodiv@sign:
   667                           	opt callstack 0
   668  000012                     i2___aomod@sign:
   669                           	opt callstack 0
   670                           
   671                           ; 1 bytes @ 0x11
   672  000012                     	ds	1
   673  000013                     ?i2_pad:
   674                           	opt callstack 0
   675  000013                     ?i2_abs:
   676                           	opt callstack 0
   677  000013                     i2pad@fp:
   678                           	opt callstack 0
   679  000013                     i2abs@a:
   680                           	opt callstack 0
   681  000013                     i2___aodiv@quotient:
   682                           	opt callstack 0
   683                           
   684                           ; 8 bytes @ 0x12
   685  000013                     	ds	2
   686  000015                     ??i2_abs:
   687  000015                     i2pad@buf:
   688                           	opt callstack 0
   689                           
   690                           ; 2 bytes @ 0x14
   691  000015                     	ds	2
   692  000017                     i2pad@p:
   693                           	opt callstack 0
   694                           
   695                           ; 2 bytes @ 0x16
   696  000017                     	ds	2
   697  000019                     ??i2_pad:
   698                           
   699                           ; 1 bytes @ 0x18
   700  000019                     	ds	1
   701  00001A                     i2pad@i:
   702                           	opt callstack 0
   703                           
   704                           ; 2 bytes @ 0x19
   705  00001A                     	ds	2
   706  00001C                     i2pad@w:
   707                           	opt callstack 0
   708                           
   709                           ; 2 bytes @ 0x1B
   710  00001C                     	ds	2
   711  00001E                     ?i2_dtoa:
   712                           	opt callstack 0
   713  00001E                     i2dtoa@fp:
   714                           	opt callstack 0
   715                           
   716                           ; 2 bytes @ 0x1D
   717  00001E                     	ds	2
   718  000020                     i2dtoa@d:
   719                           	opt callstack 0
   720                           
   721                           ; 8 bytes @ 0x1F
   722  000020                     	ds	8
   723  000028                     ??i2_dtoa:
   724                           
   725                           ; 1 bytes @ 0x27
   726  000028                     	ds	8
   727  000030                     i2_dtoa$1498:
   728                           	opt callstack 0
   729                           
   730                           ; 2 bytes @ 0x2F
   731  000030                     	ds	2
   732  000032                     i2dtoa@p:
   733                           	opt callstack 0
   734                           
   735                           ; 2 bytes @ 0x31
   736  000032                     	ds	2
   737  000034                     i2dtoa@w:
   738                           	opt callstack 0
   739                           
   740                           ; 2 bytes @ 0x33
   741  000034                     	ds	2
   742  000036                     i2dtoa@s:
   743                           	opt callstack 0
   744                           
   745                           ; 2 bytes @ 0x35
   746  000036                     	ds	2
   747  000038                     i2dtoa@n:
   748                           	opt callstack 0
   749                           
   750                           ; 8 bytes @ 0x37
   751  000038                     	ds	8
   752  000040                     i2dtoa@i:
   753                           	opt callstack 0
   754                           
   755                           ; 2 bytes @ 0x3F
   756  000040                     	ds	2
   757  000042                     ?i2_vfpfcnvrt:
   758                           	opt callstack 0
   759  000042                     i2vfpfcnvrt@fp:
   760                           	opt callstack 0
   761                           
   762                           ; 2 bytes @ 0x41
   763  000042                     	ds	2
   764  000044                     i2vfpfcnvrt@fmt:
   765                           	opt callstack 0
   766                           
   767                           ; 2 bytes @ 0x43
   768  000044                     	ds	2
   769  000046                     i2vfpfcnvrt@ap:
   770                           	opt callstack 0
   771                           
   772                           ; 2 bytes @ 0x45
   773  000046                     	ds	2
   774  000048                     ??i2_vfpfcnvrt:
   775                           
   776                           ; 1 bytes @ 0x47
   777  000048                     	ds	2
   778  00004A                     i2vfpfcnvrt@ll:
   779                           	opt callstack 0
   780                           
   781                           ; 8 bytes @ 0x49
   782  00004A                     	ds	8
   783  000052                     ?i2_vfprintf:
   784                           	opt callstack 0
   785  000052                     i2vfprintf@fp:
   786                           	opt callstack 0
   787                           
   788                           ; 2 bytes @ 0x51
   789  000052                     	ds	2
   790  000054                     i2vfprintf@fmt:
   791                           	opt callstack 0
   792                           
   793                           ; 2 bytes @ 0x53
   794  000054                     	ds	2
   795  000056                     i2vfprintf@ap:
   796                           	opt callstack 0
   797                           
   798                           ; 2 bytes @ 0x55
   799  000056                     	ds	2
   800  000058                     i2vfprintf@cfmt:
   801                           	opt callstack 0
   802                           
   803                           ; 2 bytes @ 0x57
   804  000058                     	ds	2
   805  00005A                     ?i2_printf:
   806                           	opt callstack 0
   807  00005A                     i2printf@fmt:
   808                           	opt callstack 0
   809                           
   810                           ; 2 bytes @ 0x59
   811  00005A                     	ds	2
   812  00005C                     
   813                           ; 1 bytes @ 0x5B
   814 ;;
   815 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   816 ;;
   817 ;; *************** function _main *****************
   818 ;; Defined at:
   819 ;;		line 51 in file "main.c"
   820 ;; Parameters:    Size  Location     Type
   821 ;;		None
   822 ;; Auto vars:     Size  Location     Type
   823 ;;		None
   824 ;; Return value:  Size  Location     Type
   825 ;;                  1    wreg      void 
   826 ;; Registers used:
   827 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   828 ;; Tracked objects:
   829 ;;		On entry : 0/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   837 ;;Total ram usage:        0 bytes
   838 ;; Hardware stack levels required when called:   20
   839 ;; This function calls:
   840 ;;		_ADC_GetConversion
   841 ;;		_I2C_Enable
   842 ;;		_I2C_Open
   843 ;;		_I2C_SlaveSetIsrHandler
   844 ;;		_SYSTEM_Initialize
   845 ;;		_printf
   846 ;; This function is called by:
   847 ;;		Startup code after reset
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851                           	psect	text0
   852  0022D6                     __ptext0:
   853                           	opt callstack 0
   854  0022D6                     _main:
   855                           	opt callstack 11
   856  0022D6                     
   857                           ;main.c: 54:     SYSTEM_Initialize();
   858  0022D6  EC7A  F013         	call	_SYSTEM_Initialize	;wreg free
   859  0022DA                     
   860                           ;main.c: 55:     PIE2bits.BCLIE = 1;
   861  0022DA  86A0               	bsf	160,3,c	;volatile
   862  0022DC                     
   863                           ;main.c: 56:     PIE1bits.SSPIE = 1;
   864  0022DC  869D               	bsf	157,3,c	;volatile
   865                           
   866                           ;main.c: 57:     I2C_Enable();
   867  0022DE  EC3C  F014         	call	_I2C_Enable	;wreg free
   868                           
   869                           ;main.c: 58:     I2C_Open();
   870  0022E2  ECD4  F010         	call	_I2C_Open	;wreg free
   871                           
   872                           ;main.c: 59:     I2C_SlaveSetIsrHandler(myInt);
   873  0022E6  0E22               	movlw	low _myInt
   874  0022E8  0100               	movlb	0	; () banked
   875  0022EA  6F6E               	movwf	I2C_SlaveSetIsrHandler@handler& (0+255),b
   876  0022EC  0E23               	movlw	high _myInt
   877  0022EE  6F6F               	movwf	(I2C_SlaveSetIsrHandler@handler+1)& (0+255),b
   878  0022F0  EC11  F014         	call	_I2C_SlaveSetIsrHandler	;wreg free
   879  0022F4                     
   880                           ;main.c: 60:     printf("\033c");
   881  0022F4  0E0D               	movlw	low STR_1
   882  0022F6  0100               	movlb	0	; () banked
   883  0022F8  6FC7               	movwf	printf@fmt& (0+255),b
   884  0022FA  0E0F               	movlw	high STR_1
   885  0022FC  6FC8               	movwf	(printf@fmt+1)& (0+255),b
   886  0022FE  EC2F  F013         	call	_printf	;wreg free
   887  002302                     
   888                           ;main.c: 62:     (INTCONbits.GIE = 1);
   889  002302  8EF2               	bsf	242,7,c	;volatile
   890  002304                     
   891                           ;main.c: 64:     (INTCONbits.PEIE = 1);
   892  002304  8CF2               	bsf	242,6,c	;volatile
   893  002306                     l2952:
   894                           
   895                           ;main.c: 70:     {;main.c: 72:         data = ADC_GetConversion(0);
   896  002306  0E00               	movlw	0
   897  002308  EC41  F012         	call	_ADC_GetConversion
   898  00230C  0100               	movlb	0	; () banked
   899  00230E  C06E  F0CD         	movff	?_ADC_GetConversion,_data
   900  002312  C06F  F0CE         	movff	?_ADC_GetConversion+1,_data+1
   901  002316  6BCF               	clrf	(_data+2)& (0+255),b
   902  002318  6BD0               	clrf	(_data+3)& (0+255),b
   903  00231A  EF83  F011         	goto	l2952
   904  00231E  EF64  F000         	goto	start
   905  002322                     __end_of_main:
   906                           	opt callstack 0
   907                           
   908 ;; *************** function _printf *****************
   909 ;; Defined at:
   910 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
   911 ;; Parameters:    Size  Location     Type
   912 ;;  fmt             2  103[BANK0 ] PTR const unsigned char 
   913 ;;		 -> STR_2(12), STR_1(3), 
   914 ;; Auto vars:     Size  Location     Type
   915 ;;  ap              2  107[BANK0 ] PTR void [1]
   916 ;;		 -> ?_printf(2), 
   917 ;;  ret             2    0        int 
   918 ;; Return value:  Size  Location     Type
   919 ;;                  2  103[BANK0 ] int 
   920 ;; Registers used:
   921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   922 ;; Tracked objects:
   923 ;;		On entry : 0/0
   924 ;;		On exit  : 0/0
   925 ;;		Unchanged: 0/0
   926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   927 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   928 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   930 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   931 ;;Total ram usage:        6 bytes
   932 ;; Hardware stack levels used:    1
   933 ;; Hardware stack levels required when called:   19
   934 ;; This function calls:
   935 ;;		_vfprintf
   936 ;; This function is called by:
   937 ;;		_main
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           
   941                           	psect	text1
   942  00265E                     __ptext1:
   943                           	opt callstack 0
   944  00265E                     _printf:
   945                           	opt callstack 11
   946  00265E  0EC9               	movlw	low (?_printf+2)
   947  002660  0100               	movlb	0	; () banked
   948  002662  6FCB               	movwf	printf@ap& (0+255),b
   949  002664  0E00               	movlw	high (?_printf+2)
   950  002666  6FCC               	movwf	(printf@ap+1)& (0+255),b
   951  002668                     
   952                           ; BSR set to: 0
   953  002668  0E00               	movlw	0
   954  00266A  6FBF               	movwf	vfprintf@fp& (0+255),b
   955  00266C  0E00               	movlw	0
   956  00266E  6FC0               	movwf	(vfprintf@fp+1)& (0+255),b
   957  002670  C0C7  F0C1         	movff	printf@fmt,vfprintf@fmt
   958  002674  C0C8  F0C2         	movff	printf@fmt+1,vfprintf@fmt+1
   959  002678  0ECB               	movlw	low printf@ap
   960  00267A  6FC3               	movwf	vfprintf@ap& (0+255),b
   961  00267C  0E00               	movlw	high printf@ap
   962  00267E  6FC4               	movwf	(vfprintf@ap+1)& (0+255),b
   963  002680  EC09  F011         	call	_vfprintf	;wreg free
   964  002684  0012               	return		;funcret
   965  002686                     __end_of_printf:
   966                           	opt callstack 0
   967                           
   968 ;; *************** function _vfprintf *****************
   969 ;; Defined at:
   970 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
   971 ;; Parameters:    Size  Location     Type
   972 ;;  fp              2   95[BANK0 ] PTR struct _IO_FILE
   973 ;;		 -> NULL(0), 
   974 ;;  fmt             2   97[BANK0 ] PTR const unsigned char 
   975 ;;		 -> STR_2(12), STR_1(3), 
   976 ;;  ap              2   99[BANK0 ] PTR PTR void 
   977 ;;		 -> printf@ap(2), 
   978 ;; Auto vars:     Size  Location     Type
   979 ;;  cfmt            2  101[BANK0 ] PTR unsigned char 
   980 ;;		 -> STR_2(12), STR_1(3), 
   981 ;; Return value:  Size  Location     Type
   982 ;;                  2   95[BANK0 ] int 
   983 ;; Registers used:
   984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   985 ;; Tracked objects:
   986 ;;		On entry : 0/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   990 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   991 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   993 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   994 ;;Total ram usage:        8 bytes
   995 ;; Hardware stack levels used:    1
   996 ;; Hardware stack levels required when called:   18
   997 ;; This function calls:
   998 ;;		_vfpfcnvrt
   999 ;; This function is called by:
  1000 ;;		_printf
  1001 ;; This function uses a non-reentrant model
  1002 ;;
  1003                           
  1004                           	psect	text2
  1005  002212                     __ptext2:
  1006                           	opt callstack 0
  1007  002212                     _vfprintf:
  1008                           	opt callstack 11
  1009  002212                     
  1010                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1011  002212  C0C1  F0C5         	movff	vfprintf@fmt,vfprintf@cfmt
  1012  002216  C0C2  F0C6         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1013  00221A                     
  1014                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1015  00221A  0E00               	movlw	0
  1016  00221C  0100               	movlb	0	; () banked
  1017  00221E  6FD2               	movwf	(_nout+1)& (0+255),b
  1018  002220  0E00               	movlw	0
  1019  002222  6FD1               	movwf	_nout& (0+255),b
  1020                           
  1021                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1022  002224  EF27  F011         	goto	l2826
  1023  002228                     l2824:
  1024                           
  1025                           ; BSR set to: 0
  1026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1027  002228  C0BF  F0AF         	movff	vfprintf@fp,vfpfcnvrt@fp
  1028  00222C  C0C0  F0B0         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1029  002230  0EC5               	movlw	low vfprintf@cfmt
  1030  002232  6FB1               	movwf	vfpfcnvrt@fmt& (0+255),b
  1031  002234  0E00               	movlw	high vfprintf@cfmt
  1032  002236  6FB2               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1033  002238  C0C3  F0B3         	movff	vfprintf@ap,vfpfcnvrt@ap
  1034  00223C  C0C4  F0B4         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1035  002240  EC6D  F00A         	call	_vfpfcnvrt	;wreg free
  1036  002244  0100               	movlb	0	; () banked
  1037  002246  51AF               	movf	?_vfpfcnvrt& (0+255),w,b
  1038  002248  27D1               	addwf	_nout& (0+255),f,b
  1039  00224A  51B0               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1040  00224C  23D2               	addwfc	(_nout+1)& (0+255),f,b
  1041  00224E                     l2826:
  1042                           
  1043                           ; BSR set to: 0
  1044                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1045  00224E  C0C5  FFF6         	movff	vfprintf@cfmt,tblptrl
  1046  002252  C0C6  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1047  002256                     	if	0	;tblptru may be non-zero
  1048  002256                     	endif
  1049  002256                     	if	0	;tblptru may be non-zero
  1050  002256                     	endif
  1051  002256  0008               	tblrd		*
  1052  002258  50F5               	movf	tablat,w,c
  1053  00225A  0900               	iorlw	0
  1054  00225C  A4D8               	btfss	status,2,c
  1055  00225E  EF33  F011         	goto	u2251
  1056  002262  EF35  F011         	goto	u2250
  1057  002266                     u2251:
  1058  002266  EF14  F011         	goto	l2824
  1059  00226A                     u2250:
  1060  00226A                     
  1061                           ; BSR set to: 0
  1062                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1063  00226A  C0D1  F0BF         	movff	_nout,?_vfprintf
  1064  00226E  C0D2  F0C0         	movff	_nout+1,?_vfprintf+1
  1065  002272                     
  1066                           ; BSR set to: 0
  1067  002272  0012               	return		;funcret
  1068  002274                     __end_of_vfprintf:
  1069                           	opt callstack 0
  1070                           
  1071 ;; *************** function _vfpfcnvrt *****************
  1072 ;; Defined at:
  1073 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;  fp              2   79[BANK0 ] PTR struct _IO_FILE
  1076 ;;		 -> NULL(0), 
  1077 ;;  fmt             2   81[BANK0 ] PTR PTR unsigned char 
  1078 ;;		 -> vfprintf@cfmt(2), 
  1079 ;;  ap              2   83[BANK0 ] PTR PTR void 
  1080 ;;		 -> printf@ap(2), 
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;  ll              8   87[BANK0 ] long long 
  1083 ;;  llu             8    0        unsigned long long 
  1084 ;;  f               4    0        unsigned long long 
  1085 ;;  vp              3    0        PTR void 
  1086 ;;  ct              3    0        unsigned char [3]
  1087 ;;  cp              3    0        PTR unsigned char 
  1088 ;;  i               2    0        int 
  1089 ;;  done            2    0        int 
  1090 ;;  c               1    0        unsigned char 
  1091 ;; Return value:  Size  Location     Type
  1092 ;;                  2   79[BANK0 ] int 
  1093 ;; Registers used:
  1094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1095 ;; Tracked objects:
  1096 ;;		On entry : 0/0
  1097 ;;		On exit  : 0/0
  1098 ;;		Unchanged: 0/0
  1099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1100 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1101 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1102 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1103 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1104 ;;Total ram usage:       16 bytes
  1105 ;; Hardware stack levels used:    1
  1106 ;; Hardware stack levels required when called:   17
  1107 ;; This function calls:
  1108 ;;		_dtoa
  1109 ;;		_fputc
  1110 ;; This function is called by:
  1111 ;;		_vfprintf
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115                           	psect	text3
  1116  0014DA                     __ptext3:
  1117                           	opt callstack 0
  1118  0014DA                     _vfpfcnvrt:
  1119                           	opt callstack 11
  1120  0014DA                     
  1121                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1122  0014DA  C0B1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1123  0014DE  C0B2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1124  0014E2  CFDE FFF6          	movff	postinc2,tblptrl
  1125  0014E6  CFDD FFF7          	movff	postdec2,tblptrh
  1126  0014EA                     	if	0	;tblptru may be non-zero
  1127  0014EA                     	endif
  1128  0014EA                     	if	0	;tblptru may be non-zero
  1129  0014EA                     	endif
  1130  0014EA  0008               	tblrd		*
  1131  0014EC  50F5               	movf	tablat,w,c
  1132  0014EE  0A25               	xorlw	37
  1133  0014F0  A4D8               	btfss	status,2,c
  1134  0014F2  EF7D  F00A         	goto	u2071
  1135  0014F6  EF7F  F00A         	goto	u2070
  1136  0014FA                     u2071:
  1137  0014FA  EF2C  F00B         	goto	l2700
  1138  0014FE                     u2070:
  1139  0014FE                     
  1140                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1141  0014FE  C0B1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1142  001502  C0B2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1143  001506  2ADE               	incf	postinc2,f,c
  1144  001508  0E00               	movlw	0
  1145  00150A  22DD               	addwfc	postdec2,f,c
  1146  00150C                     
  1147                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1148  00150C  0E00               	movlw	0
  1149  00150E  0100               	movlb	0	; () banked
  1150  001510  6FD4               	movwf	(_width+1)& (0+255),b
  1151  001512  0E00               	movlw	0
  1152  001514  6FD3               	movwf	_width& (0+255),b
  1153  001516  C0D3  F0D7         	movff	_width,_flags
  1154  00151A  C0D4  F0D8         	movff	_width+1,_flags+1
  1155  00151E                     
  1156                           ; BSR set to: 0
  1157                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1158  00151E  69D5               	setf	_prec& (0+255),b
  1159  001520  69D6               	setf	(_prec+1)& (0+255),b
  1160  001522                     
  1161                           ; BSR set to: 0
  1162                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1163  001522  C0B1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1164  001526  C0B2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1165  00152A  CFDE FFF6          	movff	postinc2,tblptrl
  1166  00152E  CFDD FFF7          	movff	postdec2,tblptrh
  1167  001532                     	if	0	;tblptru may be non-zero
  1168  001532                     	endif
  1169  001532                     	if	0	;tblptru may be non-zero
  1170  001532                     	endif
  1171  001532  0008               	tblrd		*
  1172  001534  50F5               	movf	tablat,w,c
  1173  001536  0A64               	xorlw	100
  1174  001538  B4D8               	btfsc	status,2,c
  1175  00153A  EFA1  F00A         	goto	u2081
  1176  00153E  EFA3  F00A         	goto	u2080
  1177  001542                     u2081:
  1178  001542  EFB5  F00A         	goto	l2678
  1179  001546                     u2080:
  1180  001546                     
  1181                           ; BSR set to: 0
  1182  001546  C0B1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1183  00154A  C0B2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1184  00154E  CFDE FFF6          	movff	postinc2,tblptrl
  1185  001552  CFDD FFF7          	movff	postdec2,tblptrh
  1186  001556                     	if	0	;tblptru may be non-zero
  1187  001556                     	endif
  1188  001556                     	if	0	;tblptru may be non-zero
  1189  001556                     	endif
  1190  001556  0008               	tblrd		*
  1191  001558  50F5               	movf	tablat,w,c
  1192  00155A  0A69               	xorlw	105
  1193  00155C  A4D8               	btfss	status,2,c
  1194  00155E  EFB3  F00A         	goto	u2091
  1195  001562  EFB5  F00A         	goto	u2090
  1196  001566                     u2091:
  1197  001566  EFF5  F00A         	goto	l2684
  1198  00156A                     u2090:
  1199  00156A                     l2678:
  1200                           
  1201                           ; BSR set to: 0
  1202                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  1203  00156A  C0B1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1204  00156E  C0B2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1205  001572  2ADE               	incf	postinc2,f,c
  1206  001574  0E00               	movlw	0
  1207  001576  22DD               	addwfc	postdec2,f,c
  1208                           
  1209                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1210  001578  C0B3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1211  00157C  C0B4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1212  001580  CFDF F0B5          	movff	indf2,??_vfpfcnvrt
  1213  001584  0E02               	movlw	2
  1214  001586  26DE               	addwf	postinc2,f,c
  1215  001588  CFDF F0B6          	movff	indf2,??_vfpfcnvrt+1
  1216  00158C  0E00               	movlw	0
  1217  00158E  22DD               	addwfc	postdec2,f,c
  1218  001590  C0B5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1219  001594  C0B6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1220  001598  CFDE F0B7          	movff	postinc2,vfpfcnvrt@ll
  1221  00159C  CFDD F0B8          	movff	postdec2,vfpfcnvrt@ll+1
  1222  0015A0  0E00               	movlw	0
  1223  0015A2  BFB8               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  1224  0015A4  0EFF               	movlw	-1
  1225  0015A6  6FB9               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  1226  0015A8  6FBA               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  1227  0015AA  6FBB               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  1228  0015AC  6FBC               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  1229  0015AE  6FBD               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  1230  0015B0  6FBE               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  1231  0015B2                     
  1232                           ; BSR set to: 0
  1233                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  1234  0015B2  C0AF  F08B         	movff	vfpfcnvrt@fp,dtoa@fp
  1235  0015B6  C0B0  F08C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1236  0015BA  C0B7  F08D         	movff	vfpfcnvrt@ll,dtoa@d
  1237  0015BE  C0B8  F08E         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1238  0015C2  C0B9  F08F         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1239  0015C6  C0BA  F090         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1240  0015CA  C0BB  F091         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1241  0015CE  C0BC  F092         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1242  0015D2  C0BD  F093         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1243  0015D6  C0BE  F094         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1244  0015DA  EC89  F007         	call	_dtoa	;wreg free
  1245  0015DE  C08B  F0AF         	movff	?_dtoa,?_vfpfcnvrt
  1246  0015E2  C08C  F0B0         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1247  0015E6  EF48  F00B         	goto	l609
  1248  0015EA                     l2684:
  1249                           
  1250                           ; BSR set to: 0
  1251                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1252  0015EA  C0B1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1253  0015EE  C0B2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1254  0015F2  CFDE FFF6          	movff	postinc2,tblptrl
  1255  0015F6  CFDD FFF7          	movff	postdec2,tblptrh
  1256  0015FA                     	if	0	;tblptru may be non-zero
  1257  0015FA                     	endif
  1258  0015FA                     	if	0	;tblptru may be non-zero
  1259  0015FA                     	endif
  1260  0015FA  0008               	tblrd		*
  1261  0015FC  50F5               	movf	tablat,w,c
  1262  0015FE  0A25               	xorlw	37
  1263  001600  A4D8               	btfss	status,2,c
  1264  001602  EF05  F00B         	goto	u2101
  1265  001606  EF07  F00B         	goto	u2100
  1266  00160A                     u2101:
  1267  00160A  EF1F  F00B         	goto	l2694
  1268  00160E                     u2100:
  1269  00160E                     
  1270                           ; BSR set to: 0
  1271                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1272  00160E  C0B1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1273  001612  C0B2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1274  001616  2ADE               	incf	postinc2,f,c
  1275  001618  0E00               	movlw	0
  1276  00161A  22DD               	addwfc	postdec2,f,c
  1277  00161C                     
  1278                           ; BSR set to: 0
  1279                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1280  00161C  0E00               	movlw	0
  1281  00161E  6F71               	movwf	(fputc@c+1)& (0+255),b
  1282  001620  0E25               	movlw	37
  1283  001622  6F70               	movwf	fputc@c& (0+255),b
  1284  001624  C0AF  F072         	movff	vfpfcnvrt@fp,fputc@fp
  1285  001628  C0B0  F073         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1286  00162C  EC3D  F010         	call	_fputc	;wreg free
  1287  001630                     l2690:
  1288                           
  1289                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1290  001630  0E00               	movlw	0
  1291  001632  0100               	movlb	0	; () banked
  1292  001634  6FB0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1293  001636  0E01               	movlw	1
  1294  001638  6FAF               	movwf	?_vfpfcnvrt& (0+255),b
  1295  00163A  EF48  F00B         	goto	l609
  1296  00163E                     l2694:
  1297                           
  1298                           ; BSR set to: 0
  1299                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1300  00163E  C0B1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1301  001642  C0B2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1302  001646  2ADE               	incf	postinc2,f,c
  1303  001648  0E00               	movlw	0
  1304  00164A  22DD               	addwfc	postdec2,f,c
  1305  00164C                     
  1306                           ; BSR set to: 0
  1307                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1308  00164C  0E00               	movlw	0
  1309  00164E  6FB0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1310  001650  0E00               	movlw	0
  1311  001652  6FAF               	movwf	?_vfpfcnvrt& (0+255),b
  1312  001654  EF48  F00B         	goto	l609
  1313  001658                     l2700:
  1314                           
  1315                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1316  001658  C0B1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1317  00165C  C0B2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1318  001660  CFDE FFF6          	movff	postinc2,tblptrl
  1319  001664  CFDD FFF7          	movff	postdec2,tblptrh
  1320  001668                     	if	0	;tblptru may be non-zero
  1321  001668                     	endif
  1322  001668                     	if	0	;tblptru may be non-zero
  1323  001668                     	endif
  1324  001668  0008               	tblrd		*
  1325  00166A  50F5               	movf	tablat,w,c
  1326  00166C  0100               	movlb	0	; () banked
  1327  00166E  6F70               	movwf	fputc@c& (0+255),b
  1328  001670  6B71               	clrf	(fputc@c+1)& (0+255),b
  1329  001672  C0AF  F072         	movff	vfpfcnvrt@fp,fputc@fp
  1330  001676  C0B0  F073         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1331  00167A  EC3D  F010         	call	_fputc	;wreg free
  1332  00167E                     
  1333                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1334  00167E  C0B1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1335  001682  C0B2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1336  001686  2ADE               	incf	postinc2,f,c
  1337  001688  0E00               	movlw	0
  1338  00168A  22DD               	addwfc	postdec2,f,c
  1339  00168C  EF18  F00B         	goto	l2690
  1340  001690                     l609:
  1341  001690  0012               	return		;funcret
  1342  001692                     __end_of_vfpfcnvrt:
  1343                           	opt callstack 0
  1344                           
  1345 ;; *************** function _dtoa *****************
  1346 ;; Defined at:
  1347 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;  fp              2   43[BANK0 ] PTR struct _IO_FILE
  1350 ;;		 -> NULL(0), 
  1351 ;;  d               8   45[BANK0 ] long long 
  1352 ;; Auto vars:     Size  Location     Type
  1353 ;;  n               8   69[BANK0 ] long long 
  1354 ;;  i               2   77[BANK0 ] int 
  1355 ;;  s               2   67[BANK0 ] int 
  1356 ;;  w               2   65[BANK0 ] int 
  1357 ;;  p               2   63[BANK0 ] int 
  1358 ;; Return value:  Size  Location     Type
  1359 ;;                  2   43[BANK0 ] int 
  1360 ;; Registers used:
  1361 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1362 ;; Tracked objects:
  1363 ;;		On entry : 0/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1367 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1368 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1369 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1370 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1371 ;;Total ram usage:       36 bytes
  1372 ;; Hardware stack levels used:    1
  1373 ;; Hardware stack levels required when called:   16
  1374 ;; This function calls:
  1375 ;;		___aodiv
  1376 ;;		___aomod
  1377 ;;		_abs
  1378 ;;		_pad
  1379 ;; This function is called by:
  1380 ;;		_vfpfcnvrt
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384                           	psect	text4
  1385  000F12                     __ptext4:
  1386                           	opt callstack 0
  1387  000F12                     _dtoa:
  1388                           	opt callstack 11
  1389  000F12                     
  1390                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  1391  000F12  C08D  F0A5         	movff	dtoa@d,dtoa@n
  1392  000F16  C08E  F0A6         	movff	dtoa@d+1,dtoa@n+1
  1393  000F1A  C08F  F0A7         	movff	dtoa@d+2,dtoa@n+2
  1394  000F1E  C090  F0A8         	movff	dtoa@d+3,dtoa@n+3
  1395  000F22  C091  F0A9         	movff	dtoa@d+4,dtoa@n+4
  1396  000F26  C092  F0AA         	movff	dtoa@d+5,dtoa@n+5
  1397  000F2A  C093  F0AB         	movff	dtoa@d+6,dtoa@n+6
  1398  000F2E  C094  F0AC         	movff	dtoa@d+7,dtoa@n+7
  1399  000F32                     
  1400                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  1401  000F32  0100               	movlb	0	; () banked
  1402  000F34  BFAC               	btfsc	(dtoa@n+7)& (0+255),7,b
  1403  000F36  EF9F  F007         	goto	u1881
  1404  000F3A  EFA2  F007         	goto	u1880
  1405  000F3E                     u1881:
  1406  000F3E  0E01               	movlw	1
  1407  000F40  EFA3  F007         	goto	u1890
  1408  000F44                     u1880:
  1409  000F44  0E00               	movlw	0
  1410  000F46                     u1890:
  1411  000F46  6FA3               	movwf	dtoa@s& (0+255),b
  1412  000F48  6BA4               	clrf	(dtoa@s+1)& (0+255),b
  1413                           
  1414                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  1415  000F4A  51A3               	movf	dtoa@s& (0+255),w,b
  1416  000F4C  11A4               	iorwf	(dtoa@s+1)& (0+255),w,b
  1417  000F4E  B4D8               	btfsc	status,2,c
  1418  000F50  EFAC  F007         	goto	u1901
  1419  000F54  EFAE  F007         	goto	u1900
  1420  000F58                     u1901:
  1421  000F58  EFBE  F007         	goto	l2556
  1422  000F5C                     u1900:
  1423  000F5C                     
  1424                           ; BSR set to: 0
  1425                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  1426  000F5C  1FAC               	comf	(dtoa@n+7)& (0+255),f,b
  1427  000F5E  1FAB               	comf	(dtoa@n+6)& (0+255),f,b
  1428  000F60  1FAA               	comf	(dtoa@n+5)& (0+255),f,b
  1429  000F62  1FA9               	comf	(dtoa@n+4)& (0+255),f,b
  1430  000F64  1FA8               	comf	(dtoa@n+3)& (0+255),f,b
  1431  000F66  1FA7               	comf	(dtoa@n+2)& (0+255),f,b
  1432  000F68  1FA6               	comf	(dtoa@n+1)& (0+255),f,b
  1433  000F6A  6DA5               	negf	dtoa@n& (0+255),b
  1434  000F6C  0E00               	movlw	0
  1435  000F6E  23A6               	addwfc	(dtoa@n+1)& (0+255),f,b
  1436  000F70  23A7               	addwfc	(dtoa@n+2)& (0+255),f,b
  1437  000F72  23A8               	addwfc	(dtoa@n+3)& (0+255),f,b
  1438  000F74  23A9               	addwfc	(dtoa@n+4)& (0+255),f,b
  1439  000F76  23AA               	addwfc	(dtoa@n+5)& (0+255),f,b
  1440  000F78  23AB               	addwfc	(dtoa@n+6)& (0+255),f,b
  1441  000F7A  23AC               	addwfc	(dtoa@n+7)& (0+255),f,b
  1442  000F7C                     l2556:
  1443                           
  1444                           ; BSR set to: 0
  1445                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  1446  000F7C  BFD6               	btfsc	(_prec+1)& (0+255),7,b
  1447  000F7E  EFC3  F007         	goto	u1911
  1448  000F82  EFC5  F007         	goto	u1910
  1449  000F86                     u1911:
  1450  000F86  EFC6  F007         	goto	l2560
  1451  000F8A                     u1910:
  1452  000F8A                     
  1453                           ; BSR set to: 0
  1454                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  1455  000F8A  93D7               	bcf	_flags& (0+255),1,b
  1456  000F8C                     l2560:
  1457                           
  1458                           ; BSR set to: 0
  1459                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  1460  000F8C  BFD6               	btfsc	(_prec+1)& (0+255),7,b
  1461  000F8E  EFD3  F007         	goto	u1920
  1462  000F92  51D6               	movf	(_prec+1)& (0+255),w,b
  1463  000F94  E106               	bnz	u1921
  1464  000F96  05D5               	decf	_prec& (0+255),w,b
  1465  000F98  B0D8               	btfsc	status,0,c
  1466  000F9A  EFD1  F007         	goto	u1921
  1467  000F9E  EFD3  F007         	goto	u1920
  1468  000FA2                     u1921:
  1469  000FA2  EFD9  F007         	goto	l582
  1470  000FA6                     u1920:
  1471  000FA6                     
  1472                           ; BSR set to: 0
  1473  000FA6  0E00               	movlw	0
  1474  000FA8  6FA0               	movwf	(dtoa@p+1)& (0+255),b
  1475  000FAA  0E01               	movlw	1
  1476  000FAC  6F9F               	movwf	dtoa@p& (0+255),b
  1477  000FAE  EFDD  F007         	goto	l584
  1478  000FB2                     l582:
  1479                           
  1480                           ; BSR set to: 0
  1481  000FB2  C0D5  F09F         	movff	_prec,dtoa@p
  1482  000FB6  C0D6  F0A0         	movff	_prec+1,dtoa@p+1
  1483  000FBA                     l584:
  1484                           
  1485                           ; BSR set to: 0
  1486                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  1487  000FBA  C0D3  F0A1         	movff	_width,dtoa@w
  1488  000FBE  C0D4  F0A2         	movff	_width+1,dtoa@w+1
  1489  000FC2                     
  1490                           ; BSR set to: 0
  1491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  1492  000FC2  51A3               	movf	dtoa@s& (0+255),w,b
  1493  000FC4  11A4               	iorwf	(dtoa@s+1)& (0+255),w,b
  1494  000FC6  A4D8               	btfss	status,2,c
  1495  000FC8  EFE8  F007         	goto	u1931
  1496  000FCC  EFEA  F007         	goto	u1930
  1497  000FD0                     u1931:
  1498  000FD0  EFF1  F007         	goto	l2568
  1499  000FD4                     u1930:
  1500  000FD4                     
  1501                           ; BSR set to: 0
  1502  000FD4  A5D7               	btfss	_flags& (0+255),2,b
  1503  000FD6  EFEF  F007         	goto	u1941
  1504  000FDA  EFF1  F007         	goto	u1940
  1505  000FDE                     u1941:
  1506  000FDE  EFF4  F007         	goto	l2570
  1507  000FE2                     u1940:
  1508  000FE2                     l2568:
  1509                           
  1510                           ; BSR set to: 0
  1511                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  1512  000FE2  07A1               	decf	dtoa@w& (0+255),f,b
  1513  000FE4  A0D8               	btfss	status,0,c
  1514  000FE6  07A2               	decf	(dtoa@w+1)& (0+255),f,b
  1515  000FE8                     l2570:
  1516                           
  1517                           ; BSR set to: 0
  1518                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  1519  000FE8  0E00               	movlw	0
  1520  000FEA  6FAE               	movwf	(dtoa@i+1)& (0+255),b
  1521  000FEC  0E1F               	movlw	31
  1522  000FEE  6FAD               	movwf	dtoa@i& (0+255),b
  1523  000FF0                     
  1524                           ; BSR set to: 0
  1525                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  1526  000FF0  0E00               	movlw	0
  1527  000FF2  0101               	movlb	1	; () banked
  1528  000FF4  6F1F               	movwf	(_dbuf+31)& (0+255),b
  1529                           
  1530                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1531  000FF6  EF7A  F008         	goto	l2584
  1532  000FFA                     l2574:
  1533                           
  1534                           ; BSR set to: 0
  1535                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  1536  000FFA  07AD               	decf	dtoa@i& (0+255),f,b
  1537  000FFC  A0D8               	btfss	status,0,c
  1538  000FFE  07AE               	decf	(dtoa@i+1)& (0+255),f,b
  1539  001000                     
  1540                           ; BSR set to: 0
  1541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  1542  001000  0E00               	movlw	low _dbuf
  1543  001002  25AD               	addwf	dtoa@i& (0+255),w,b
  1544  001004  6ED9               	movwf	fsr2l,c
  1545  001006  0E01               	movlw	high _dbuf
  1546  001008  21AE               	addwfc	(dtoa@i+1)& (0+255),w,b
  1547  00100A  6EDA               	movwf	fsr2h,c
  1548  00100C  C0A5  F06E         	movff	dtoa@n,___aomod@dividend
  1549  001010  C0A6  F06F         	movff	dtoa@n+1,___aomod@dividend+1
  1550  001014  C0A7  F070         	movff	dtoa@n+2,___aomod@dividend+2
  1551  001018  C0A8  F071         	movff	dtoa@n+3,___aomod@dividend+3
  1552  00101C  C0A9  F072         	movff	dtoa@n+4,___aomod@dividend+4
  1553  001020  C0AA  F073         	movff	dtoa@n+5,___aomod@dividend+5
  1554  001024  C0AB  F074         	movff	dtoa@n+6,___aomod@dividend+6
  1555  001028  C0AC  F075         	movff	dtoa@n+7,___aomod@dividend+7
  1556  00102C  0E0A               	movlw	10
  1557  00102E  6F76               	movwf	___aomod@divisor& (0+255),b
  1558  001030  0E00               	movlw	0
  1559  001032  6F77               	movwf	(___aomod@divisor+1)& (0+255),b
  1560  001034  0E00               	movlw	0
  1561  001036  6F78               	movwf	(___aomod@divisor+2)& (0+255),b
  1562  001038  0E00               	movlw	0
  1563  00103A  6F79               	movwf	(___aomod@divisor+3)& (0+255),b
  1564  00103C  0E00               	movlw	0
  1565  00103E  6F7A               	movwf	(___aomod@divisor+4)& (0+255),b
  1566  001040  0E00               	movlw	0
  1567  001042  6F7B               	movwf	(___aomod@divisor+5)& (0+255),b
  1568  001044  0E00               	movlw	0
  1569  001046  6F7C               	movwf	(___aomod@divisor+6)& (0+255),b
  1570  001048  0E00               	movlw	0
  1571  00104A  6F7D               	movwf	(___aomod@divisor+7)& (0+255),b
  1572  00104C  ECAC  F00D         	call	___aomod	;wreg free
  1573  001050  C06E  F095         	movff	?___aomod,??_dtoa
  1574  001054  C06F  F096         	movff	?___aomod+1,??_dtoa+1
  1575  001058  C070  F097         	movff	?___aomod+2,??_dtoa+2
  1576  00105C  C071  F098         	movff	?___aomod+3,??_dtoa+3
  1577  001060  C072  F099         	movff	?___aomod+4,??_dtoa+4
  1578  001064  C073  F09A         	movff	?___aomod+5,??_dtoa+5
  1579  001068  C074  F09B         	movff	?___aomod+6,??_dtoa+6
  1580  00106C  C075  F09C         	movff	?___aomod+7,??_dtoa+7
  1581  001070  C095  F080         	movff	??_dtoa,abs@a
  1582  001074  C097  F081         	movff	??_dtoa+2,abs@a+1
  1583  001078  EC20  F012         	call	_abs	;wreg free
  1584  00107C  0100               	movlb	0	; () banked
  1585  00107E  5180               	movf	?_abs& (0+255),w,b
  1586  001080  0F30               	addlw	48
  1587  001082  6EDF               	movwf	indf2,c
  1588  001084                     
  1589                           ; BSR set to: 0
  1590                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  1591  001084  079F               	decf	dtoa@p& (0+255),f,b
  1592  001086  A0D8               	btfss	status,0,c
  1593  001088  07A0               	decf	(dtoa@p+1)& (0+255),f,b
  1594  00108A                     
  1595                           ; BSR set to: 0
  1596                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  1597  00108A  07A1               	decf	dtoa@w& (0+255),f,b
  1598  00108C  A0D8               	btfss	status,0,c
  1599  00108E  07A2               	decf	(dtoa@w+1)& (0+255),f,b
  1600  001090                     
  1601                           ; BSR set to: 0
  1602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  1603  001090  C0A5  F06E         	movff	dtoa@n,___aodiv@dividend
  1604  001094  C0A6  F06F         	movff	dtoa@n+1,___aodiv@dividend+1
  1605  001098  C0A7  F070         	movff	dtoa@n+2,___aodiv@dividend+2
  1606  00109C  C0A8  F071         	movff	dtoa@n+3,___aodiv@dividend+3
  1607  0010A0  C0A9  F072         	movff	dtoa@n+4,___aodiv@dividend+4
  1608  0010A4  C0AA  F073         	movff	dtoa@n+5,___aodiv@dividend+5
  1609  0010A8  C0AB  F074         	movff	dtoa@n+6,___aodiv@dividend+6
  1610  0010AC  C0AC  F075         	movff	dtoa@n+7,___aodiv@dividend+7
  1611  0010B0  0E0A               	movlw	10
  1612  0010B2  6F76               	movwf	___aodiv@divisor& (0+255),b
  1613  0010B4  0E00               	movlw	0
  1614  0010B6  6F77               	movwf	(___aodiv@divisor+1)& (0+255),b
  1615  0010B8  0E00               	movlw	0
  1616  0010BA  6F78               	movwf	(___aodiv@divisor+2)& (0+255),b
  1617  0010BC  0E00               	movlw	0
  1618  0010BE  6F79               	movwf	(___aodiv@divisor+3)& (0+255),b
  1619  0010C0  0E00               	movlw	0
  1620  0010C2  6F7A               	movwf	(___aodiv@divisor+4)& (0+255),b
  1621  0010C4  0E00               	movlw	0
  1622  0010C6  6F7B               	movwf	(___aodiv@divisor+5)& (0+255),b
  1623  0010C8  0E00               	movlw	0
  1624  0010CA  6F7C               	movwf	(___aodiv@divisor+6)& (0+255),b
  1625  0010CC  0E00               	movlw	0
  1626  0010CE  6F7D               	movwf	(___aodiv@divisor+7)& (0+255),b
  1627  0010D0  EC23  F00C         	call	___aodiv	;wreg free
  1628  0010D4  C06E  F0A5         	movff	?___aodiv,dtoa@n
  1629  0010D8  C06F  F0A6         	movff	?___aodiv+1,dtoa@n+1
  1630  0010DC  C070  F0A7         	movff	?___aodiv+2,dtoa@n+2
  1631  0010E0  C071  F0A8         	movff	?___aodiv+3,dtoa@n+3
  1632  0010E4  C072  F0A9         	movff	?___aodiv+4,dtoa@n+4
  1633  0010E8  C073  F0AA         	movff	?___aodiv+5,dtoa@n+5
  1634  0010EC  C074  F0AB         	movff	?___aodiv+6,dtoa@n+6
  1635  0010F0  C075  F0AC         	movff	?___aodiv+7,dtoa@n+7
  1636  0010F4                     l2584:
  1637                           
  1638                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1639  0010F4  0100               	movlb	0	; () banked
  1640  0010F6  BFAE               	btfsc	(dtoa@i+1)& (0+255),7,b
  1641  0010F8  EF86  F008         	goto	u1951
  1642  0010FC  51AE               	movf	(dtoa@i+1)& (0+255),w,b
  1643  0010FE  E108               	bnz	u1950
  1644  001100  05AD               	decf	dtoa@i& (0+255),w,b
  1645  001102  A0D8               	btfss	status,0,c
  1646  001104  EF86  F008         	goto	u1951
  1647  001108  EF88  F008         	goto	u1950
  1648  00110C                     u1951:
  1649  00110C  EFB8  F008         	goto	l2594
  1650  001110                     u1950:
  1651  001110                     
  1652                           ; BSR set to: 0
  1653  001110  51A5               	movf	dtoa@n& (0+255),w,b
  1654  001112  11A6               	iorwf	(dtoa@n+1)& (0+255),w,b
  1655  001114  11A7               	iorwf	(dtoa@n+2)& (0+255),w,b
  1656  001116  11A8               	iorwf	(dtoa@n+3)& (0+255),w,b
  1657  001118  11A9               	iorwf	(dtoa@n+4)& (0+255),w,b
  1658  00111A  11AA               	iorwf	(dtoa@n+5)& (0+255),w,b
  1659  00111C  11AB               	iorwf	(dtoa@n+6)& (0+255),w,b
  1660  00111E  11AC               	iorwf	(dtoa@n+7)& (0+255),w,b
  1661  001120  A4D8               	btfss	status,2,c
  1662  001122  EF95  F008         	goto	u1961
  1663  001126  EF97  F008         	goto	u1960
  1664  00112A                     u1961:
  1665  00112A  EFFD  F007         	goto	l2574
  1666  00112E                     u1960:
  1667  00112E                     
  1668                           ; BSR set to: 0
  1669  00112E  BFA0               	btfsc	(dtoa@p+1)& (0+255),7,b
  1670  001130  EFA4  F008         	goto	u1970
  1671  001134  51A0               	movf	(dtoa@p+1)& (0+255),w,b
  1672  001136  E106               	bnz	u1971
  1673  001138  059F               	decf	dtoa@p& (0+255),w,b
  1674  00113A  B0D8               	btfsc	status,0,c
  1675  00113C  EFA2  F008         	goto	u1971
  1676  001140  EFA4  F008         	goto	u1970
  1677  001144                     u1971:
  1678  001144  EFFD  F007         	goto	l2574
  1679  001148                     u1970:
  1680  001148                     
  1681                           ; BSR set to: 0
  1682  001148  BFA2               	btfsc	(dtoa@w+1)& (0+255),7,b
  1683  00114A  EFAF  F008         	goto	u1981
  1684  00114E  51A2               	movf	(dtoa@w+1)& (0+255),w,b
  1685  001150  E108               	bnz	u1980
  1686  001152  05A1               	decf	dtoa@w& (0+255),w,b
  1687  001154  A0D8               	btfss	status,0,c
  1688  001156  EFAF  F008         	goto	u1981
  1689  00115A  EFB1  F008         	goto	u1980
  1690  00115E                     u1981:
  1691  00115E  EFB8  F008         	goto	l2594
  1692  001162                     u1980:
  1693  001162                     
  1694                           ; BSR set to: 0
  1695  001162  B3D7               	btfsc	_flags& (0+255),1,b
  1696  001164  EFB6  F008         	goto	u1991
  1697  001168  EFB8  F008         	goto	u1990
  1698  00116C                     u1991:
  1699  00116C  EFFD  F007         	goto	l2574
  1700  001170                     u1990:
  1701  001170                     l2594:
  1702                           
  1703                           ; BSR set to: 0
  1704                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  1705  001170  51A3               	movf	dtoa@s& (0+255),w,b
  1706  001172  11A4               	iorwf	(dtoa@s+1)& (0+255),w,b
  1707  001174  A4D8               	btfss	status,2,c
  1708  001176  EFBF  F008         	goto	u2001
  1709  00117A  EFC1  F008         	goto	u2000
  1710  00117E                     u2001:
  1711  00117E  EFC8  F008         	goto	l2598
  1712  001182                     u2000:
  1713  001182                     
  1714                           ; BSR set to: 0
  1715  001182  A5D7               	btfss	_flags& (0+255),2,b
  1716  001184  EFC6  F008         	goto	u2011
  1717  001188  EFC8  F008         	goto	u2010
  1718  00118C                     u2011:
  1719  00118C  EFE6  F008         	goto	l2608
  1720  001190                     u2010:
  1721  001190                     l2598:
  1722                           
  1723                           ; BSR set to: 0
  1724                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  1725  001190  07AD               	decf	dtoa@i& (0+255),f,b
  1726  001192  A0D8               	btfss	status,0,c
  1727  001194  07AE               	decf	(dtoa@i+1)& (0+255),f,b
  1728  001196                     
  1729                           ; BSR set to: 0
  1730                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  1731  001196  51A3               	movf	dtoa@s& (0+255),w,b
  1732  001198  11A4               	iorwf	(dtoa@s+1)& (0+255),w,b
  1733  00119A  A4D8               	btfss	status,2,c
  1734  00119C  EFD2  F008         	goto	u2021
  1735  0011A0  EFD4  F008         	goto	u2020
  1736  0011A4                     u2021:
  1737  0011A4  EFDA  F008         	goto	l2604
  1738  0011A8                     u2020:
  1739  0011A8                     
  1740                           ; BSR set to: 0
  1741  0011A8  0E00               	movlw	0
  1742  0011AA  6F9E               	movwf	(_dtoa$1498+1)& (0+255),b
  1743  0011AC  0E2B               	movlw	43
  1744  0011AE  6F9D               	movwf	_dtoa$1498& (0+255),b
  1745  0011B0  EFDE  F008         	goto	l2606
  1746  0011B4                     l2604:
  1747                           
  1748                           ; BSR set to: 0
  1749  0011B4  0E00               	movlw	0
  1750  0011B6  6F9E               	movwf	(_dtoa$1498+1)& (0+255),b
  1751  0011B8  0E2D               	movlw	45
  1752  0011BA  6F9D               	movwf	_dtoa$1498& (0+255),b
  1753  0011BC                     l2606:
  1754                           
  1755                           ; BSR set to: 0
  1756  0011BC  0E00               	movlw	low _dbuf
  1757  0011BE  25AD               	addwf	dtoa@i& (0+255),w,b
  1758  0011C0  6ED9               	movwf	fsr2l,c
  1759  0011C2  0E01               	movlw	high _dbuf
  1760  0011C4  21AE               	addwfc	(dtoa@i+1)& (0+255),w,b
  1761  0011C6  6EDA               	movwf	fsr2h,c
  1762  0011C8  C09D  FFDF         	movff	_dtoa$1498,indf2
  1763  0011CC                     l2608:
  1764                           
  1765                           ; BSR set to: 0
  1766                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  1767  0011CC  C08B  F080         	movff	dtoa@fp,pad@fp
  1768  0011D0  C08C  F081         	movff	dtoa@fp+1,pad@fp+1
  1769  0011D4  0E00               	movlw	low _dbuf
  1770  0011D6  25AD               	addwf	dtoa@i& (0+255),w,b
  1771  0011D8  6F82               	movwf	pad@buf& (0+255),b
  1772  0011DA  0E01               	movlw	high _dbuf
  1773  0011DC  21AE               	addwfc	(dtoa@i+1)& (0+255),w,b
  1774  0011DE  6F83               	movwf	(pad@buf+1)& (0+255),b
  1775  0011E0  C0A1  F084         	movff	dtoa@w,pad@p
  1776  0011E4  C0A2  F085         	movff	dtoa@w+1,pad@p+1
  1777  0011E8  EC11  F00F         	call	_pad	;wreg free
  1778  0011EC  C080  F08B         	movff	?_pad,?_dtoa
  1779  0011F0  C081  F08C         	movff	?_pad+1,?_dtoa+1
  1780  0011F4  0012               	return		;funcret
  1781  0011F6                     __end_of_dtoa:
  1782                           	opt callstack 0
  1783                           
  1784 ;; *************** function _pad *****************
  1785 ;; Defined at:
  1786 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;  fp              2   32[BANK0 ] PTR struct _IO_FILE
  1789 ;;		 -> NULL(0), 
  1790 ;;  buf             2   34[BANK0 ] PTR unsigned char 
  1791 ;;		 -> dbuf(32), 
  1792 ;;  p               2   36[BANK0 ] int 
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;  w               2   41[BANK0 ] int 
  1795 ;;  i               2   39[BANK0 ] int 
  1796 ;; Return value:  Size  Location     Type
  1797 ;;                  2   32[BANK0 ] int 
  1798 ;; Registers used:
  1799 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1800 ;; Tracked objects:
  1801 ;;		On entry : 0/0
  1802 ;;		On exit  : 0/0
  1803 ;;		Unchanged: 0/0
  1804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1805 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1806 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1807 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1808 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1809 ;;Total ram usage:       11 bytes
  1810 ;; Hardware stack levels used:    1
  1811 ;; Hardware stack levels required when called:   15
  1812 ;; This function calls:
  1813 ;;		_fputc
  1814 ;;		_fputs
  1815 ;;		_strlen
  1816 ;; This function is called by:
  1817 ;;		_dtoa
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821                           	psect	text5
  1822  001E22                     __ptext5:
  1823                           	opt callstack 0
  1824  001E22                     _pad:
  1825                           	opt callstack 11
  1826  001E22                     
  1827                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  1828  001E22  0100               	movlb	0	; () banked
  1829  001E24  A1D7               	btfss	_flags& (0+255),0,b
  1830  001E26  EF17  F00F         	goto	u1551
  1831  001E2A  EF19  F00F         	goto	u1550
  1832  001E2E                     u1551:
  1833  001E2E  EF23  F00F         	goto	l2376
  1834  001E32                     u1550:
  1835  001E32                     
  1836                           ; BSR set to: 0
  1837                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  1838  001E32  C082  F079         	movff	pad@buf,fputs@s
  1839  001E36  C083  F07A         	movff	pad@buf+1,fputs@s+1
  1840  001E3A  C080  F07B         	movff	pad@fp,fputs@fp
  1841  001E3E  C081  F07C         	movff	pad@fp+1,fputs@fp+1
  1842  001E42  ECB7  F011         	call	_fputs	;wreg free
  1843  001E46                     l2376:
  1844                           
  1845                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  1846  001E46  0100               	movlb	0	; () banked
  1847  001E48  BF85               	btfsc	(pad@p+1)& (0+255),7,b
  1848  001E4A  EF29  F00F         	goto	u1561
  1849  001E4E  EF2B  F00F         	goto	u1560
  1850  001E52                     u1561:
  1851  001E52  EF31  F00F         	goto	l2380
  1852  001E56                     u1560:
  1853  001E56                     
  1854                           ; BSR set to: 0
  1855  001E56  C084  F089         	movff	pad@p,pad@w
  1856  001E5A  C085  F08A         	movff	pad@p+1,pad@w+1
  1857  001E5E  EF35  F00F         	goto	l571
  1858  001E62                     l2380:
  1859                           
  1860                           ; BSR set to: 0
  1861  001E62  0E00               	movlw	0
  1862  001E64  6F8A               	movwf	(pad@w+1)& (0+255),b
  1863  001E66  0E00               	movlw	0
  1864  001E68  6F89               	movwf	pad@w& (0+255),b
  1865  001E6A                     l571:
  1866                           
  1867                           ; BSR set to: 0
  1868                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  1869  001E6A  0E00               	movlw	0
  1870  001E6C  6F88               	movwf	(pad@i+1)& (0+255),b
  1871  001E6E  0E00               	movlw	0
  1872  001E70  6F87               	movwf	pad@i& (0+255),b
  1873                           
  1874                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1875  001E72  EF48  F00F         	goto	l2386
  1876  001E76                     l2382:
  1877                           
  1878                           ; BSR set to: 0
  1879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  1880  001E76  0E00               	movlw	0
  1881  001E78  6F71               	movwf	(fputc@c+1)& (0+255),b
  1882  001E7A  0E20               	movlw	32
  1883  001E7C  6F70               	movwf	fputc@c& (0+255),b
  1884  001E7E  C080  F072         	movff	pad@fp,fputc@fp
  1885  001E82  C081  F073         	movff	pad@fp+1,fputc@fp+1
  1886  001E86  EC3D  F010         	call	_fputc	;wreg free
  1887  001E8A                     
  1888                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  1889  001E8A  0100               	movlb	0	; () banked
  1890  001E8C  4B87               	infsnz	pad@i& (0+255),f,b
  1891  001E8E  2B88               	incf	(pad@i+1)& (0+255),f,b
  1892  001E90                     l2386:
  1893                           
  1894                           ; BSR set to: 0
  1895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1896  001E90  5189               	movf	pad@w& (0+255),w,b
  1897  001E92  5D87               	subwf	pad@i& (0+255),w,b
  1898  001E94  5188               	movf	(pad@i+1)& (0+255),w,b
  1899  001E96  0A80               	xorlw	128
  1900  001E98  6F86               	movwf	??_pad& (0+255),b
  1901  001E9A  518A               	movf	(pad@w+1)& (0+255),w,b
  1902  001E9C  0A80               	xorlw	128
  1903  001E9E  5986               	subwfb	??_pad& (0+255),w,b
  1904  001EA0  A0D8               	btfss	status,0,c
  1905  001EA2  EF55  F00F         	goto	u1571
  1906  001EA6  EF57  F00F         	goto	u1570
  1907  001EAA                     u1571:
  1908  001EAA  EF3B  F00F         	goto	l2382
  1909  001EAE                     u1570:
  1910  001EAE                     
  1911                           ; BSR set to: 0
  1912                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  1913  001EAE  B1D7               	btfsc	_flags& (0+255),0,b
  1914  001EB0  EF5C  F00F         	goto	u1581
  1915  001EB4  EF5E  F00F         	goto	u1580
  1916  001EB8                     u1581:
  1917  001EB8  EF68  F00F         	goto	l2390
  1918  001EBC                     u1580:
  1919  001EBC                     
  1920                           ; BSR set to: 0
  1921                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  1922  001EBC  C082  F079         	movff	pad@buf,fputs@s
  1923  001EC0  C083  F07A         	movff	pad@buf+1,fputs@s+1
  1924  001EC4  C080  F07B         	movff	pad@fp,fputs@fp
  1925  001EC8  C081  F07C         	movff	pad@fp+1,fputs@fp+1
  1926  001ECC  ECB7  F011         	call	_fputs	;wreg free
  1927  001ED0                     l2390:
  1928                           
  1929                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  1930  001ED0  C082  F06E         	movff	pad@buf,strlen@s
  1931  001ED4  C083  F06F         	movff	pad@buf+1,strlen@s+1
  1932  001ED8  EC81  F012         	call	_strlen	;wreg free
  1933  001EDC  0100               	movlb	0	; () banked
  1934  001EDE  5189               	movf	pad@w& (0+255),w,b
  1935  001EE0  256E               	addwf	?_strlen& (0+255),w,b
  1936  001EE2  6F80               	movwf	?_pad& (0+255),b
  1937  001EE4  518A               	movf	(pad@w+1)& (0+255),w,b
  1938  001EE6  216F               	addwfc	(?_strlen+1)& (0+255),w,b
  1939  001EE8  6F81               	movwf	(?_pad+1)& (0+255),b
  1940  001EEA                     
  1941                           ; BSR set to: 0
  1942  001EEA  0012               	return		;funcret
  1943  001EEC                     __end_of_pad:
  1944                           	opt callstack 0
  1945                           
  1946 ;; *************** function _strlen *****************
  1947 ;; Defined at:
  1948 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;  s               2   14[BANK0 ] PTR const unsigned char 
  1951 ;;		 -> dbuf(32), 
  1952 ;; Auto vars:     Size  Location     Type
  1953 ;;  a               2   16[BANK0 ] PTR const unsigned char 
  1954 ;;		 -> dbuf(32), 
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  2   14[BANK0 ] unsigned int 
  1957 ;; Registers used:
  1958 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1964 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1965 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1967 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1968 ;;Total ram usage:        4 bytes
  1969 ;; Hardware stack levels used:    1
  1970 ;; Hardware stack levels required when called:   11
  1971 ;; This function calls:
  1972 ;;		Nothing
  1973 ;; This function is called by:
  1974 ;;		_pad
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           	psect	text6
  1979  002502                     __ptext6:
  1980                           	opt callstack 0
  1981  002502                     _strlen:
  1982                           	opt callstack 14
  1983  002502  C06E  F070         	movff	strlen@s,strlen@a
  1984  002506  C06F  F071         	movff	strlen@s+1,strlen@a+1
  1985  00250A  EF8A  F012         	goto	l2260
  1986  00250E                     l2258:
  1987  00250E  0100               	movlb	0	; () banked
  1988  002510  4B6E               	infsnz	strlen@s& (0+255),f,b
  1989  002512  2B6F               	incf	(strlen@s+1)& (0+255),f,b
  1990  002514                     l2260:
  1991  002514  C06E  FFD9         	movff	strlen@s,fsr2l
  1992  002518  C06F  FFDA         	movff	strlen@s+1,fsr2h
  1993  00251C  50DF               	movf	indf2,w,c
  1994  00251E  A4D8               	btfss	status,2,c
  1995  002520  EF94  F012         	goto	u1361
  1996  002524  EF96  F012         	goto	u1360
  1997  002528                     u1361:
  1998  002528  EF87  F012         	goto	l2258
  1999  00252C                     u1360:
  2000  00252C  0100               	movlb	0	; () banked
  2001  00252E  5170               	movf	strlen@a& (0+255),w,b
  2002  002530  5D6E               	subwf	strlen@s& (0+255),w,b
  2003  002532  6F6E               	movwf	?_strlen& (0+255),b
  2004  002534  5171               	movf	(strlen@a+1)& (0+255),w,b
  2005  002536  596F               	subwfb	(strlen@s+1)& (0+255),w,b
  2006  002538  6F6F               	movwf	(?_strlen+1)& (0+255),b
  2007  00253A                     
  2008                           ; BSR set to: 0
  2009  00253A  0012               	return		;funcret
  2010  00253C                     __end_of_strlen:
  2011                           	opt callstack 0
  2012                           
  2013 ;; *************** function _fputs *****************
  2014 ;; Defined at:
  2015 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;  s               2   25[BANK0 ] PTR const unsigned char 
  2018 ;;		 -> dbuf(32), 
  2019 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  2020 ;;		 -> NULL(0), 
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;  i               2   30[BANK0 ] int 
  2023 ;;  c               1   29[BANK0 ] unsigned char 
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  2   25[BANK0 ] int 
  2026 ;; Registers used:
  2027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2033 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2034 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2036 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2037 ;;Total ram usage:        7 bytes
  2038 ;; Hardware stack levels used:    1
  2039 ;; Hardware stack levels required when called:   14
  2040 ;; This function calls:
  2041 ;;		_fputc
  2042 ;; This function is called by:
  2043 ;;		_pad
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           	psect	text7
  2048  00236E                     __ptext7:
  2049                           	opt callstack 0
  2050  00236E                     _fputs:
  2051                           	opt callstack 11
  2052  00236E  0E00               	movlw	0
  2053  002370  0100               	movlb	0	; () banked
  2054  002372  6F7F               	movwf	(fputs@i+1)& (0+255),b
  2055  002374  0E00               	movlw	0
  2056  002376  6F7E               	movwf	fputs@i& (0+255),b
  2057  002378  EFCA  F011         	goto	l2254
  2058  00237C                     l2250:
  2059                           
  2060                           ; BSR set to: 0
  2061  00237C  C07D  F070         	movff	fputs@c,fputc@c
  2062  002380  6B71               	clrf	(fputc@c+1)& (0+255),b
  2063  002382  C07B  F072         	movff	fputs@fp,fputc@fp
  2064  002386  C07C  F073         	movff	fputs@fp+1,fputc@fp+1
  2065  00238A  EC3D  F010         	call	_fputc	;wreg free
  2066  00238E  0100               	movlb	0	; () banked
  2067  002390  4B7E               	infsnz	fputs@i& (0+255),f,b
  2068  002392  2B7F               	incf	(fputs@i+1)& (0+255),f,b
  2069  002394                     l2254:
  2070                           
  2071                           ; BSR set to: 0
  2072  002394  517E               	movf	fputs@i& (0+255),w,b
  2073  002396  2579               	addwf	fputs@s& (0+255),w,b
  2074  002398  6ED9               	movwf	fsr2l,c
  2075  00239A  517F               	movf	(fputs@i+1)& (0+255),w,b
  2076  00239C  217A               	addwfc	(fputs@s+1)& (0+255),w,b
  2077  00239E  6EDA               	movwf	fsr2h,c
  2078  0023A0  50DF               	movf	indf2,w,c
  2079  0023A2  6F7D               	movwf	fputs@c& (0+255),b
  2080  0023A4  517D               	movf	fputs@c& (0+255),w,b
  2081  0023A6  A4D8               	btfss	status,2,c
  2082  0023A8  EFD8  F011         	goto	u1351
  2083  0023AC  EFDA  F011         	goto	u1350
  2084  0023B0                     u1351:
  2085  0023B0  EFBE  F011         	goto	l2250
  2086  0023B4                     u1350:
  2087  0023B4                     
  2088                           ; BSR set to: 0
  2089  0023B4  0012               	return		;funcret
  2090  0023B6                     __end_of_fputs:
  2091                           	opt callstack 0
  2092                           
  2093 ;; *************** function _fputc *****************
  2094 ;; Defined at:
  2095 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;  c               2   16[BANK0 ] int 
  2098 ;;  fp              2   18[BANK0 ] PTR struct _IO_FILE
  2099 ;;		 -> NULL(0), 
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;		None
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  2   16[BANK0 ] int 
  2104 ;; Registers used:
  2105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2111 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2113 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2114 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2115 ;;Total ram usage:        9 bytes
  2116 ;; Hardware stack levels used:    1
  2117 ;; Hardware stack levels required when called:   13
  2118 ;; This function calls:
  2119 ;;		_putch
  2120 ;; This function is called by:
  2121 ;;		_pad
  2122 ;;		_vfpfcnvrt
  2123 ;;		_fputs
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           	psect	text8
  2128  00207A                     __ptext8:
  2129                           	opt callstack 0
  2130  00207A                     _fputc:
  2131                           	opt callstack 14
  2132  00207A  0100               	movlb	0	; () banked
  2133  00207C  5172               	movf	fputc@fp& (0+255),w,b
  2134  00207E  1173               	iorwf	(fputc@fp+1)& (0+255),w,b
  2135  002080  B4D8               	btfsc	status,2,c
  2136  002082  EF45  F010         	goto	u1291
  2137  002086  EF47  F010         	goto	u1290
  2138  00208A                     u1291:
  2139  00208A  EF50  F010         	goto	l2220
  2140  00208E                     u1290:
  2141  00208E                     
  2142                           ; BSR set to: 0
  2143  00208E  5172               	movf	fputc@fp& (0+255),w,b
  2144  002090  1173               	iorwf	(fputc@fp+1)& (0+255),w,b
  2145  002092  A4D8               	btfss	status,2,c
  2146  002094  EF4E  F010         	goto	u1301
  2147  002098  EF50  F010         	goto	u1300
  2148  00209C                     u1301:
  2149  00209C  EF55  F010         	goto	l2222
  2150  0020A0                     u1300:
  2151  0020A0                     l2220:
  2152                           
  2153                           ; BSR set to: 0
  2154  0020A0  5170               	movf	fputc@c& (0+255),w,b
  2155  0020A2  ECE2  F013         	call	_putch
  2156  0020A6  EF88  F010         	goto	l1309
  2157  0020AA                     l2222:
  2158                           
  2159                           ; BSR set to: 0
  2160  0020AA  EE20 F004          	lfsr	2,4
  2161  0020AE  5172               	movf	fputc@fp& (0+255),w,b
  2162  0020B0  26D9               	addwf	fsr2l,f,c
  2163  0020B2  5173               	movf	(fputc@fp+1)& (0+255),w,b
  2164  0020B4  22DA               	addwfc	fsr2h,f,c
  2165  0020B6  50DE               	movf	postinc2,w,c
  2166  0020B8  10DE               	iorwf	postinc2,w,c
  2167  0020BA  B4D8               	btfsc	status,2,c
  2168  0020BC  EF62  F010         	goto	u1311
  2169  0020C0  EF64  F010         	goto	u1310
  2170  0020C4                     u1311:
  2171  0020C4  EF7F  F010         	goto	l2226
  2172  0020C8                     u1310:
  2173  0020C8                     
  2174                           ; BSR set to: 0
  2175  0020C8  EE20 F004          	lfsr	2,4
  2176  0020CC  5172               	movf	fputc@fp& (0+255),w,b
  2177  0020CE  26D9               	addwf	fsr2l,f,c
  2178  0020D0  5173               	movf	(fputc@fp+1)& (0+255),w,b
  2179  0020D2  22DA               	addwfc	fsr2h,f,c
  2180  0020D4  EE10 F002          	lfsr	1,2
  2181  0020D8  5172               	movf	fputc@fp& (0+255),w,b
  2182  0020DA  26E1               	addwf	fsr1l,f,c
  2183  0020DC  5173               	movf	(fputc@fp+1)& (0+255),w,b
  2184  0020DE  22E2               	addwfc	fsr1h,f,c
  2185  0020E0  50DE               	movf	postinc2,w,c
  2186  0020E2  5CE6               	subwf	postinc1,w,c
  2187  0020E4  50E6               	movf	postinc1,w,c
  2188  0020E6  0A80               	xorlw	128
  2189  0020E8  6F78               	movwf	(??_fputc+4)& (0+255),b
  2190  0020EA  50DE               	movf	postinc2,w,c
  2191  0020EC  0A80               	xorlw	128
  2192  0020EE  5978               	subwfb	(??_fputc+4)& (0+255),w,b
  2193  0020F0  B0D8               	btfsc	status,0,c
  2194  0020F2  EF7D  F010         	goto	u1321
  2195  0020F6  EF7F  F010         	goto	u1320
  2196  0020FA                     u1321:
  2197  0020FA  EF88  F010         	goto	l1309
  2198  0020FE                     u1320:
  2199  0020FE                     l2226:
  2200                           
  2201                           ; BSR set to: 0
  2202  0020FE  EE20 F002          	lfsr	2,2
  2203  002102  5172               	movf	fputc@fp& (0+255),w,b
  2204  002104  26D9               	addwf	fsr2l,f,c
  2205  002106  5173               	movf	(fputc@fp+1)& (0+255),w,b
  2206  002108  22DA               	addwfc	fsr2h,f,c
  2207  00210A  2ADE               	incf	postinc2,f,c
  2208  00210C  0E00               	movlw	0
  2209  00210E  22DD               	addwfc	postdec2,f,c
  2210  002110                     l1309:
  2211  002110  0012               	return		;funcret
  2212  002112                     __end_of_fputc:
  2213                           	opt callstack 0
  2214                           
  2215 ;; *************** function _putch *****************
  2216 ;; Defined at:
  2217 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;  txData          1    wreg     unsigned char 
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;  txData          1   15[BANK0 ] unsigned char 
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      void 
  2224 ;; Registers used:
  2225 ;;		wreg, status,2, cstack
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2232 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2234 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2235 ;;Total ram usage:        1 bytes
  2236 ;; Hardware stack levels used:    1
  2237 ;; Hardware stack levels required when called:   12
  2238 ;; This function calls:
  2239 ;;		_EUSART1_Write
  2240 ;; This function is called by:
  2241 ;;		_fputc
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245                           	psect	text9
  2246  0027C4                     __ptext9:
  2247                           	opt callstack 0
  2248  0027C4                     _putch:
  2249                           	opt callstack 14
  2250                           
  2251                           ;incstack = 0
  2252                           ;putch@txData stored from wreg
  2253  0027C4  0100               	movlb	0	; () banked
  2254  0027C6  6F6F               	movwf	putch@txData& (0+255),b
  2255  0027C8                     
  2256                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  2257  0027C8  0100               	movlb	0	; () banked
  2258  0027CA  516F               	movf	putch@txData& (0+255),w,b
  2259  0027CC  EC87  F013         	call	_EUSART1_Write
  2260  0027D0  0012               	return		;funcret
  2261  0027D2                     __end_of_putch:
  2262                           	opt callstack 0
  2263                           
  2264 ;; *************** function _EUSART1_Write *****************
  2265 ;; Defined at:
  2266 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;  txData          1    wreg     unsigned char 
  2269 ;; Auto vars:     Size  Location     Type
  2270 ;;  txData          1   14[BANK0 ] unsigned char 
  2271 ;; Return value:  Size  Location     Type
  2272 ;;                  1    wreg      void 
  2273 ;; Registers used:
  2274 ;;		wreg
  2275 ;; Tracked objects:
  2276 ;;		On entry : 0/0
  2277 ;;		On exit  : 0/0
  2278 ;;		Unchanged: 0/0
  2279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2281 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2283 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2284 ;;Total ram usage:        1 bytes
  2285 ;; Hardware stack levels used:    1
  2286 ;; Hardware stack levels required when called:   11
  2287 ;; This function calls:
  2288 ;;		Nothing
  2289 ;; This function is called by:
  2290 ;;		_putch
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           
  2294                           	psect	text10
  2295  00270E                     __ptext10:
  2296                           	opt callstack 0
  2297  00270E                     _EUSART1_Write:
  2298                           	opt callstack 14
  2299                           
  2300                           ;incstack = 0
  2301                           ;EUSART1_Write@txData stored from wreg
  2302  00270E  0100               	movlb	0	; () banked
  2303  002710  6F6E               	movwf	EUSART1_Write@txData& (0+255),b
  2304  002712                     l104:
  2305                           
  2306                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  2307  002712  A89E               	btfss	158,4,c	;volatile
  2308  002714  EF8E  F013         	goto	u1241
  2309  002718  EF90  F013         	goto	u1240
  2310  00271C                     u1241:
  2311  00271C  EF89  F013         	goto	l104
  2312  002720                     u1240:
  2313  002720                     
  2314                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  2315  002720  C06E  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  2316  002724  0012               	return		;funcret
  2317  002726                     __end_of_EUSART1_Write:
  2318                           	opt callstack 0
  2319                           
  2320 ;; *************** function _abs *****************
  2321 ;; Defined at:
  2322 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;  a               2   32[BANK0 ] int 
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;		None
  2327 ;; Return value:  Size  Location     Type
  2328 ;;                  2   32[BANK0 ] int 
  2329 ;; Registers used:
  2330 ;;		wreg, status,2, status,0
  2331 ;; Tracked objects:
  2332 ;;		On entry : 0/0
  2333 ;;		On exit  : 0/0
  2334 ;;		Unchanged: 0/0
  2335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2336 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2338 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2339 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2340 ;;Total ram usage:        4 bytes
  2341 ;; Hardware stack levels used:    1
  2342 ;; Hardware stack levels required when called:   11
  2343 ;; This function calls:
  2344 ;;		Nothing
  2345 ;; This function is called by:
  2346 ;;		_dtoa
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350                           	psect	text11
  2351  002440                     __ptext11:
  2352                           	opt callstack 0
  2353  002440                     _abs:
  2354                           	opt callstack 15
  2355  002440  0100               	movlb	0	; () banked
  2356  002442  BF81               	btfsc	(abs@a+1)& (0+255),7,b
  2357  002444  EF2E  F012         	goto	u1590
  2358  002448  5181               	movf	(abs@a+1)& (0+255),w,b
  2359  00244A  E106               	bnz	u1591
  2360  00244C  0580               	decf	abs@a& (0+255),w,b
  2361  00244E  B0D8               	btfsc	status,0,c
  2362  002450  EF2C  F012         	goto	u1591
  2363  002454  EF2E  F012         	goto	u1590
  2364  002458                     u1591:
  2365  002458  EF3C  F012         	goto	l1294
  2366  00245C                     u1590:
  2367  00245C                     
  2368                           ; BSR set to: 0
  2369  00245C  C080  F082         	movff	abs@a,??_abs
  2370  002460  C081  F083         	movff	abs@a+1,??_abs+1
  2371  002464  1F82               	comf	??_abs& (0+255),f,b
  2372  002466  1F83               	comf	(??_abs+1)& (0+255),f,b
  2373  002468  4B82               	infsnz	??_abs& (0+255),f,b
  2374  00246A  2B83               	incf	(??_abs+1)& (0+255),f,b
  2375  00246C  C082  F080         	movff	??_abs,?_abs
  2376  002470  C083  F081         	movff	??_abs+1,?_abs+1
  2377  002474  EF40  F012         	goto	l1297
  2378  002478                     l1294:
  2379                           
  2380                           ; BSR set to: 0
  2381  002478  C080  F080         	movff	abs@a,?_abs
  2382  00247C  C081  F081         	movff	abs@a+1,?_abs+1
  2383  002480                     l1297:
  2384                           
  2385                           ; BSR set to: 0
  2386  002480  0012               	return		;funcret
  2387  002482                     __end_of_abs:
  2388                           	opt callstack 0
  2389                           
  2390 ;; *************** function ___aomod *****************
  2391 ;; Defined at:
  2392 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  2393 ;; Parameters:    Size  Location     Type
  2394 ;;  dividend        8   14[BANK0 ] long long 
  2395 ;;  divisor         8   22[BANK0 ] long long 
  2396 ;; Auto vars:     Size  Location     Type
  2397 ;;  sign            1   31[BANK0 ] unsigned char 
  2398 ;;  counter         1   30[BANK0 ] unsigned char 
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  8   14[BANK0 ] long long 
  2401 ;; Registers used:
  2402 ;;		wreg, status,2, status,0
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2408 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2409 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2411 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2412 ;;Total ram usage:       18 bytes
  2413 ;; Hardware stack levels used:    1
  2414 ;; Hardware stack levels required when called:   11
  2415 ;; This function calls:
  2416 ;;		Nothing
  2417 ;; This function is called by:
  2418 ;;		_dtoa
  2419 ;; This function uses a non-reentrant model
  2420 ;;
  2421                           
  2422                           	psect	text12
  2423  001B58                     __ptext12:
  2424                           	opt callstack 0
  2425  001B58                     ___aomod:
  2426                           	opt callstack 15
  2427  001B58  0E00               	movlw	0
  2428  001B5A  0100               	movlb	0	; () banked
  2429  001B5C  6F7F               	movwf	___aomod@sign& (0+255),b
  2430  001B5E                     
  2431                           ; BSR set to: 0
  2432  001B5E  BF75               	btfsc	(___aomod@dividend+7)& (0+255),7,b
  2433  001B60  EFB6  F00D         	goto	u1670
  2434  001B64  EFB4  F00D         	goto	u1671
  2435  001B68                     u1671:
  2436  001B68  EFC8  F00D         	goto	l2450
  2437  001B6C                     u1670:
  2438  001B6C                     
  2439                           ; BSR set to: 0
  2440  001B6C  1F75               	comf	(___aomod@dividend+7)& (0+255),f,b
  2441  001B6E  1F74               	comf	(___aomod@dividend+6)& (0+255),f,b
  2442  001B70  1F73               	comf	(___aomod@dividend+5)& (0+255),f,b
  2443  001B72  1F72               	comf	(___aomod@dividend+4)& (0+255),f,b
  2444  001B74  1F71               	comf	(___aomod@dividend+3)& (0+255),f,b
  2445  001B76  1F70               	comf	(___aomod@dividend+2)& (0+255),f,b
  2446  001B78  1F6F               	comf	(___aomod@dividend+1)& (0+255),f,b
  2447  001B7A  6D6E               	negf	___aomod@dividend& (0+255),b
  2448  001B7C  0E00               	movlw	0
  2449  001B7E  236F               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  2450  001B80  2370               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  2451  001B82  2371               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  2452  001B84  2372               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  2453  001B86  2373               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  2454  001B88  2374               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  2455  001B8A  2375               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  2456  001B8C                     
  2457                           ; BSR set to: 0
  2458  001B8C  0E01               	movlw	1
  2459  001B8E  6F7F               	movwf	___aomod@sign& (0+255),b
  2460  001B90                     l2450:
  2461                           
  2462                           ; BSR set to: 0
  2463  001B90  BF7D               	btfsc	(___aomod@divisor+7)& (0+255),7,b
  2464  001B92  EFCF  F00D         	goto	u1680
  2465  001B96  EFCD  F00D         	goto	u1681
  2466  001B9A                     u1681:
  2467  001B9A  EFDF  F00D         	goto	l2454
  2468  001B9E                     u1680:
  2469  001B9E                     
  2470                           ; BSR set to: 0
  2471  001B9E  1F7D               	comf	(___aomod@divisor+7)& (0+255),f,b
  2472  001BA0  1F7C               	comf	(___aomod@divisor+6)& (0+255),f,b
  2473  001BA2  1F7B               	comf	(___aomod@divisor+5)& (0+255),f,b
  2474  001BA4  1F7A               	comf	(___aomod@divisor+4)& (0+255),f,b
  2475  001BA6  1F79               	comf	(___aomod@divisor+3)& (0+255),f,b
  2476  001BA8  1F78               	comf	(___aomod@divisor+2)& (0+255),f,b
  2477  001BAA  1F77               	comf	(___aomod@divisor+1)& (0+255),f,b
  2478  001BAC  6D76               	negf	___aomod@divisor& (0+255),b
  2479  001BAE  0E00               	movlw	0
  2480  001BB0  2377               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  2481  001BB2  2378               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  2482  001BB4  2379               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  2483  001BB6  237A               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  2484  001BB8  237B               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  2485  001BBA  237C               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  2486  001BBC  237D               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  2487  001BBE                     l2454:
  2488                           
  2489                           ; BSR set to: 0
  2490  001BBE  5176               	movf	___aomod@divisor& (0+255),w,b
  2491  001BC0  1177               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  2492  001BC2  1178               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  2493  001BC4  1179               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  2494  001BC6  117A               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  2495  001BC8  117B               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  2496  001BCA  117C               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  2497  001BCC  117D               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  2498  001BCE  B4D8               	btfsc	status,2,c
  2499  001BD0  EFEC  F00D         	goto	u1691
  2500  001BD4  EFEE  F00D         	goto	u1690
  2501  001BD8                     u1691:
  2502  001BD8  EF36  F00E         	goto	l2470
  2503  001BDC                     u1690:
  2504  001BDC                     
  2505                           ; BSR set to: 0
  2506  001BDC  0E01               	movlw	1
  2507  001BDE  6F7E               	movwf	___aomod@counter& (0+255),b
  2508  001BE0  EFFC  F00D         	goto	l2460
  2509  001BE4                     l2458:
  2510                           
  2511                           ; BSR set to: 0
  2512  001BE4  90D8               	bcf	status,0,c
  2513  001BE6  3776               	rlcf	___aomod@divisor& (0+255),f,b
  2514  001BE8  3777               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  2515  001BEA  3778               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  2516  001BEC  3779               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  2517  001BEE  377A               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  2518  001BF0  377B               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  2519  001BF2  377C               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  2520  001BF4  377D               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  2521  001BF6  2B7E               	incf	___aomod@counter& (0+255),f,b
  2522  001BF8                     l2460:
  2523                           
  2524                           ; BSR set to: 0
  2525  001BF8  AF7D               	btfss	(___aomod@divisor+7)& (0+255),7,b
  2526  001BFA  EF01  F00E         	goto	u1701
  2527  001BFE  EF03  F00E         	goto	u1700
  2528  001C02                     u1701:
  2529  001C02  EFF2  F00D         	goto	l2458
  2530  001C06                     u1700:
  2531  001C06                     l2462:
  2532                           
  2533                           ; BSR set to: 0
  2534  001C06  5176               	movf	___aomod@divisor& (0+255),w,b
  2535  001C08  5D6E               	subwf	___aomod@dividend& (0+255),w,b
  2536  001C0A  5177               	movf	(___aomod@divisor+1)& (0+255),w,b
  2537  001C0C  596F               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  2538  001C0E  5178               	movf	(___aomod@divisor+2)& (0+255),w,b
  2539  001C10  5970               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  2540  001C12  5179               	movf	(___aomod@divisor+3)& (0+255),w,b
  2541  001C14  5971               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  2542  001C16  517A               	movf	(___aomod@divisor+4)& (0+255),w,b
  2543  001C18  5972               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  2544  001C1A  517B               	movf	(___aomod@divisor+5)& (0+255),w,b
  2545  001C1C  5973               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  2546  001C1E  517C               	movf	(___aomod@divisor+6)& (0+255),w,b
  2547  001C20  5974               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  2548  001C22  517D               	movf	(___aomod@divisor+7)& (0+255),w,b
  2549  001C24  5975               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  2550  001C26  A0D8               	btfss	status,0,c
  2551  001C28  EF18  F00E         	goto	u1711
  2552  001C2C  EF1A  F00E         	goto	u1710
  2553  001C30                     u1711:
  2554  001C30  EF2A  F00E         	goto	l2466
  2555  001C34                     u1710:
  2556  001C34                     
  2557                           ; BSR set to: 0
  2558  001C34  5176               	movf	___aomod@divisor& (0+255),w,b
  2559  001C36  5F6E               	subwf	___aomod@dividend& (0+255),f,b
  2560  001C38  5177               	movf	(___aomod@divisor+1)& (0+255),w,b
  2561  001C3A  5B6F               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  2562  001C3C  5178               	movf	(___aomod@divisor+2)& (0+255),w,b
  2563  001C3E  5B70               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  2564  001C40  5179               	movf	(___aomod@divisor+3)& (0+255),w,b
  2565  001C42  5B71               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  2566  001C44  517A               	movf	(___aomod@divisor+4)& (0+255),w,b
  2567  001C46  5B72               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  2568  001C48  517B               	movf	(___aomod@divisor+5)& (0+255),w,b
  2569  001C4A  5B73               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  2570  001C4C  517C               	movf	(___aomod@divisor+6)& (0+255),w,b
  2571  001C4E  5B74               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  2572  001C50  517D               	movf	(___aomod@divisor+7)& (0+255),w,b
  2573  001C52  5B75               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  2574  001C54                     l2466:
  2575                           
  2576                           ; BSR set to: 0
  2577  001C54  90D8               	bcf	status,0,c
  2578  001C56  337D               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  2579  001C58  337C               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  2580  001C5A  337B               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  2581  001C5C  337A               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  2582  001C5E  3379               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  2583  001C60  3378               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  2584  001C62  3377               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  2585  001C64  3376               	rrcf	___aomod@divisor& (0+255),f,b
  2586  001C66                     
  2587                           ; BSR set to: 0
  2588  001C66  2F7E               	decfsz	___aomod@counter& (0+255),f,b
  2589  001C68  EF03  F00E         	goto	l2462
  2590  001C6C                     l2470:
  2591                           
  2592                           ; BSR set to: 0
  2593  001C6C  517F               	movf	___aomod@sign& (0+255),w,b
  2594  001C6E  B4D8               	btfsc	status,2,c
  2595  001C70  EF3C  F00E         	goto	u1721
  2596  001C74  EF3E  F00E         	goto	u1720
  2597  001C78                     u1721:
  2598  001C78  EF4E  F00E         	goto	l2474
  2599  001C7C                     u1720:
  2600  001C7C                     
  2601                           ; BSR set to: 0
  2602  001C7C  1F75               	comf	(___aomod@dividend+7)& (0+255),f,b
  2603  001C7E  1F74               	comf	(___aomod@dividend+6)& (0+255),f,b
  2604  001C80  1F73               	comf	(___aomod@dividend+5)& (0+255),f,b
  2605  001C82  1F72               	comf	(___aomod@dividend+4)& (0+255),f,b
  2606  001C84  1F71               	comf	(___aomod@dividend+3)& (0+255),f,b
  2607  001C86  1F70               	comf	(___aomod@dividend+2)& (0+255),f,b
  2608  001C88  1F6F               	comf	(___aomod@dividend+1)& (0+255),f,b
  2609  001C8A  6D6E               	negf	___aomod@dividend& (0+255),b
  2610  001C8C  0E00               	movlw	0
  2611  001C8E  236F               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  2612  001C90  2370               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  2613  001C92  2371               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  2614  001C94  2372               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  2615  001C96  2373               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  2616  001C98  2374               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  2617  001C9A  2375               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  2618  001C9C                     l2474:
  2619                           
  2620                           ; BSR set to: 0
  2621  001C9C  C06E  F06E         	movff	___aomod@dividend,?___aomod
  2622  001CA0  C06F  F06F         	movff	___aomod@dividend+1,?___aomod+1
  2623  001CA4  C070  F070         	movff	___aomod@dividend+2,?___aomod+2
  2624  001CA8  C071  F071         	movff	___aomod@dividend+3,?___aomod+3
  2625  001CAC  C072  F072         	movff	___aomod@dividend+4,?___aomod+4
  2626  001CB0  C073  F073         	movff	___aomod@dividend+5,?___aomod+5
  2627  001CB4  C074  F074         	movff	___aomod@dividend+6,?___aomod+6
  2628  001CB8  C075  F075         	movff	___aomod@dividend+7,?___aomod+7
  2629  001CBC                     
  2630                           ; BSR set to: 0
  2631  001CBC  0012               	return		;funcret
  2632  001CBE                     __end_of___aomod:
  2633                           	opt callstack 0
  2634                           
  2635 ;; *************** function ___aodiv *****************
  2636 ;; Defined at:
  2637 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;  dividend        8   14[BANK0 ] long long 
  2640 ;;  divisor         8   22[BANK0 ] long long 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  quotient        8   32[BANK0 ] long long 
  2643 ;;  sign            1   31[BANK0 ] unsigned char 
  2644 ;;  counter         1   30[BANK0 ] unsigned char 
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  8   14[BANK0 ] long long 
  2647 ;; Registers used:
  2648 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2654 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2655 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2657 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2658 ;;Total ram usage:       26 bytes
  2659 ;; Hardware stack levels used:    1
  2660 ;; Hardware stack levels required when called:   11
  2661 ;; This function calls:
  2662 ;;		Nothing
  2663 ;; This function is called by:
  2664 ;;		_dtoa
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           	psect	text13
  2669  001846                     __ptext13:
  2670                           	opt callstack 0
  2671  001846                     ___aodiv:
  2672                           	opt callstack 15
  2673  001846  0E00               	movlw	0
  2674  001848  0100               	movlb	0	; () banked
  2675  00184A  6F7F               	movwf	___aodiv@sign& (0+255),b
  2676  00184C                     
  2677                           ; BSR set to: 0
  2678  00184C  BF7D               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
  2679  00184E  EF2D  F00C         	goto	u1600
  2680  001852  EF2B  F00C         	goto	u1601
  2681  001856                     u1601:
  2682  001856  EF3F  F00C         	goto	l2406
  2683  00185A                     u1600:
  2684  00185A                     
  2685                           ; BSR set to: 0
  2686  00185A  1F7D               	comf	(___aodiv@divisor+7)& (0+255),f,b
  2687  00185C  1F7C               	comf	(___aodiv@divisor+6)& (0+255),f,b
  2688  00185E  1F7B               	comf	(___aodiv@divisor+5)& (0+255),f,b
  2689  001860  1F7A               	comf	(___aodiv@divisor+4)& (0+255),f,b
  2690  001862  1F79               	comf	(___aodiv@divisor+3)& (0+255),f,b
  2691  001864  1F78               	comf	(___aodiv@divisor+2)& (0+255),f,b
  2692  001866  1F77               	comf	(___aodiv@divisor+1)& (0+255),f,b
  2693  001868  6D76               	negf	___aodiv@divisor& (0+255),b
  2694  00186A  0E00               	movlw	0
  2695  00186C  2377               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  2696  00186E  2378               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  2697  001870  2379               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  2698  001872  237A               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  2699  001874  237B               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  2700  001876  237C               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  2701  001878  237D               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  2702  00187A                     
  2703                           ; BSR set to: 0
  2704  00187A  0E01               	movlw	1
  2705  00187C  6F7F               	movwf	___aodiv@sign& (0+255),b
  2706  00187E                     l2406:
  2707                           
  2708                           ; BSR set to: 0
  2709  00187E  BF75               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
  2710  001880  EF46  F00C         	goto	u1610
  2711  001884  EF44  F00C         	goto	u1611
  2712  001888                     u1611:
  2713  001888  EF58  F00C         	goto	l2412
  2714  00188C                     u1610:
  2715  00188C                     
  2716                           ; BSR set to: 0
  2717  00188C  1F75               	comf	(___aodiv@dividend+7)& (0+255),f,b
  2718  00188E  1F74               	comf	(___aodiv@dividend+6)& (0+255),f,b
  2719  001890  1F73               	comf	(___aodiv@dividend+5)& (0+255),f,b
  2720  001892  1F72               	comf	(___aodiv@dividend+4)& (0+255),f,b
  2721  001894  1F71               	comf	(___aodiv@dividend+3)& (0+255),f,b
  2722  001896  1F70               	comf	(___aodiv@dividend+2)& (0+255),f,b
  2723  001898  1F6F               	comf	(___aodiv@dividend+1)& (0+255),f,b
  2724  00189A  6D6E               	negf	___aodiv@dividend& (0+255),b
  2725  00189C  0E00               	movlw	0
  2726  00189E  236F               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  2727  0018A0  2370               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  2728  0018A2  2371               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  2729  0018A4  2372               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  2730  0018A6  2373               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  2731  0018A8  2374               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  2732  0018AA  2375               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  2733  0018AC                     
  2734                           ; BSR set to: 0
  2735  0018AC  0E01               	movlw	1
  2736  0018AE  1B7F               	xorwf	___aodiv@sign& (0+255),f,b
  2737  0018B0                     l2412:
  2738                           
  2739                           ; BSR set to: 0
  2740  0018B0  EE20  F080         	lfsr	2,___aodiv@quotient
  2741  0018B4  0E07               	movlw	7
  2742  0018B6                     u1621:
  2743  0018B6  6ADE               	clrf	postinc2,c
  2744  0018B8  06E8               	decf	wreg,f,c
  2745  0018BA  E2FD               	bc	u1621
  2746  0018BC                     
  2747                           ; BSR set to: 0
  2748  0018BC  5176               	movf	___aodiv@divisor& (0+255),w,b
  2749  0018BE  1177               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  2750  0018C0  1178               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  2751  0018C2  1179               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  2752  0018C4  117A               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  2753  0018C6  117B               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  2754  0018C8  117C               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  2755  0018CA  117D               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  2756  0018CC  B4D8               	btfsc	status,2,c
  2757  0018CE  EF6B  F00C         	goto	u1631
  2758  0018D2  EF6D  F00C         	goto	u1630
  2759  0018D6                     u1631:
  2760  0018D6  EFBF  F00C         	goto	l2434
  2761  0018DA                     u1630:
  2762  0018DA                     
  2763                           ; BSR set to: 0
  2764  0018DA  0E01               	movlw	1
  2765  0018DC  6F7E               	movwf	___aodiv@counter& (0+255),b
  2766  0018DE  EF7B  F00C         	goto	l2420
  2767  0018E2                     l2418:
  2768                           
  2769                           ; BSR set to: 0
  2770  0018E2  90D8               	bcf	status,0,c
  2771  0018E4  3776               	rlcf	___aodiv@divisor& (0+255),f,b
  2772  0018E6  3777               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  2773  0018E8  3778               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  2774  0018EA  3779               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  2775  0018EC  377A               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  2776  0018EE  377B               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  2777  0018F0  377C               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  2778  0018F2  377D               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  2779  0018F4  2B7E               	incf	___aodiv@counter& (0+255),f,b
  2780  0018F6                     l2420:
  2781                           
  2782                           ; BSR set to: 0
  2783  0018F6  AF7D               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  2784  0018F8  EF80  F00C         	goto	u1641
  2785  0018FC  EF82  F00C         	goto	u1640
  2786  001900                     u1641:
  2787  001900  EF71  F00C         	goto	l2418
  2788  001904                     u1640:
  2789  001904                     l2422:
  2790                           
  2791                           ; BSR set to: 0
  2792  001904  90D8               	bcf	status,0,c
  2793  001906  3780               	rlcf	___aodiv@quotient& (0+255),f,b
  2794  001908  3781               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  2795  00190A  3782               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  2796  00190C  3783               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  2797  00190E  3784               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  2798  001910  3785               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  2799  001912  3786               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  2800  001914  3787               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  2801  001916                     
  2802                           ; BSR set to: 0
  2803  001916  5176               	movf	___aodiv@divisor& (0+255),w,b
  2804  001918  5D6E               	subwf	___aodiv@dividend& (0+255),w,b
  2805  00191A  5177               	movf	(___aodiv@divisor+1)& (0+255),w,b
  2806  00191C  596F               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  2807  00191E  5178               	movf	(___aodiv@divisor+2)& (0+255),w,b
  2808  001920  5970               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  2809  001922  5179               	movf	(___aodiv@divisor+3)& (0+255),w,b
  2810  001924  5971               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  2811  001926  517A               	movf	(___aodiv@divisor+4)& (0+255),w,b
  2812  001928  5972               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  2813  00192A  517B               	movf	(___aodiv@divisor+5)& (0+255),w,b
  2814  00192C  5973               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  2815  00192E  517C               	movf	(___aodiv@divisor+6)& (0+255),w,b
  2816  001930  5974               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  2817  001932  517D               	movf	(___aodiv@divisor+7)& (0+255),w,b
  2818  001934  5975               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  2819  001936  A0D8               	btfss	status,0,c
  2820  001938  EFA0  F00C         	goto	u1651
  2821  00193C  EFA2  F00C         	goto	u1650
  2822  001940                     u1651:
  2823  001940  EFB3  F00C         	goto	l2430
  2824  001944                     u1650:
  2825  001944                     
  2826                           ; BSR set to: 0
  2827  001944  5176               	movf	___aodiv@divisor& (0+255),w,b
  2828  001946  5F6E               	subwf	___aodiv@dividend& (0+255),f,b
  2829  001948  5177               	movf	(___aodiv@divisor+1)& (0+255),w,b
  2830  00194A  5B6F               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  2831  00194C  5178               	movf	(___aodiv@divisor+2)& (0+255),w,b
  2832  00194E  5B70               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  2833  001950  5179               	movf	(___aodiv@divisor+3)& (0+255),w,b
  2834  001952  5B71               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  2835  001954  517A               	movf	(___aodiv@divisor+4)& (0+255),w,b
  2836  001956  5B72               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  2837  001958  517B               	movf	(___aodiv@divisor+5)& (0+255),w,b
  2838  00195A  5B73               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  2839  00195C  517C               	movf	(___aodiv@divisor+6)& (0+255),w,b
  2840  00195E  5B74               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  2841  001960  517D               	movf	(___aodiv@divisor+7)& (0+255),w,b
  2842  001962  5B75               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  2843  001964                     
  2844                           ; BSR set to: 0
  2845  001964  8180               	bsf	___aodiv@quotient& (0+255),0,b
  2846  001966                     l2430:
  2847                           
  2848                           ; BSR set to: 0
  2849  001966  90D8               	bcf	status,0,c
  2850  001968  337D               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  2851  00196A  337C               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  2852  00196C  337B               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  2853  00196E  337A               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  2854  001970  3379               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  2855  001972  3378               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  2856  001974  3377               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  2857  001976  3376               	rrcf	___aodiv@divisor& (0+255),f,b
  2858  001978                     
  2859                           ; BSR set to: 0
  2860  001978  2F7E               	decfsz	___aodiv@counter& (0+255),f,b
  2861  00197A  EF82  F00C         	goto	l2422
  2862  00197E                     l2434:
  2863                           
  2864                           ; BSR set to: 0
  2865  00197E  517F               	movf	___aodiv@sign& (0+255),w,b
  2866  001980  B4D8               	btfsc	status,2,c
  2867  001982  EFC5  F00C         	goto	u1661
  2868  001986  EFC7  F00C         	goto	u1660
  2869  00198A                     u1661:
  2870  00198A  EFD7  F00C         	goto	l2438
  2871  00198E                     u1660:
  2872  00198E                     
  2873                           ; BSR set to: 0
  2874  00198E  1F87               	comf	(___aodiv@quotient+7)& (0+255),f,b
  2875  001990  1F86               	comf	(___aodiv@quotient+6)& (0+255),f,b
  2876  001992  1F85               	comf	(___aodiv@quotient+5)& (0+255),f,b
  2877  001994  1F84               	comf	(___aodiv@quotient+4)& (0+255),f,b
  2878  001996  1F83               	comf	(___aodiv@quotient+3)& (0+255),f,b
  2879  001998  1F82               	comf	(___aodiv@quotient+2)& (0+255),f,b
  2880  00199A  1F81               	comf	(___aodiv@quotient+1)& (0+255),f,b
  2881  00199C  6D80               	negf	___aodiv@quotient& (0+255),b
  2882  00199E  0E00               	movlw	0
  2883  0019A0  2381               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  2884  0019A2  2382               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  2885  0019A4  2383               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  2886  0019A6  2384               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  2887  0019A8  2385               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  2888  0019AA  2386               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  2889  0019AC  2387               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  2890  0019AE                     l2438:
  2891                           
  2892                           ; BSR set to: 0
  2893  0019AE  C080  F06E         	movff	___aodiv@quotient,?___aodiv
  2894  0019B2  C081  F06F         	movff	___aodiv@quotient+1,?___aodiv+1
  2895  0019B6  C082  F070         	movff	___aodiv@quotient+2,?___aodiv+2
  2896  0019BA  C083  F071         	movff	___aodiv@quotient+3,?___aodiv+3
  2897  0019BE  C084  F072         	movff	___aodiv@quotient+4,?___aodiv+4
  2898  0019C2  C085  F073         	movff	___aodiv@quotient+5,?___aodiv+5
  2899  0019C6  C086  F074         	movff	___aodiv@quotient+6,?___aodiv+6
  2900  0019CA  C087  F075         	movff	___aodiv@quotient+7,?___aodiv+7
  2901  0019CE                     
  2902                           ; BSR set to: 0
  2903  0019CE  0012               	return		;funcret
  2904  0019D0                     __end_of___aodiv:
  2905                           	opt callstack 0
  2906                           
  2907 ;; *************** function _SYSTEM_Initialize *****************
  2908 ;; Defined at:
  2909 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;		None
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;		None
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  1    wreg      void 
  2916 ;; Registers used:
  2917 ;;		wreg, status,2, status,0, cstack
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2927 ;;Total ram usage:        0 bytes
  2928 ;; Hardware stack levels used:    1
  2929 ;; Hardware stack levels required when called:   13
  2930 ;; This function calls:
  2931 ;;		_ADC_Initialize
  2932 ;;		_EUSART1_Initialize
  2933 ;;		_I2C_Initialize
  2934 ;;		_INTERRUPT_Initialize
  2935 ;;		_OSCILLATOR_Initialize
  2936 ;;		_PIN_MANAGER_Initialize
  2937 ;; This function is called by:
  2938 ;;		_main
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942                           	psect	text14
  2943  0026F4                     __ptext14:
  2944                           	opt callstack 0
  2945  0026F4                     _SYSTEM_Initialize:
  2946                           	opt callstack 17
  2947  0026F4                     
  2948                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  2949  0026F4  EC42  F014         	call	_INTERRUPT_Initialize	;wreg free
  2950  0026F8                     
  2951                           ;mcc_generated_files/mcc.c: 54:     I2C_Initialize();
  2952  0026F8  ECDA  F013         	call	_I2C_Initialize	;wreg free
  2953  0026FC                     
  2954                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  2955  0026FC  EC43  F013         	call	_PIN_MANAGER_Initialize	;wreg free
  2956  002700                     
  2957                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  2958  002700  ECD1  F013         	call	_OSCILLATOR_Initialize	;wreg free
  2959  002704                     
  2960                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  2961  002704  EC93  F013         	call	_ADC_Initialize	;wreg free
  2962  002708                     
  2963                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  2964  002708  ECDB  F011         	call	_EUSART1_Initialize	;wreg free
  2965  00270C  0012               	return		;funcret
  2966  00270E                     __end_of_SYSTEM_Initialize:
  2967                           	opt callstack 0
  2968                           
  2969 ;; *************** function _PIN_MANAGER_Initialize *****************
  2970 ;; Defined at:
  2971 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;		None
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;		None
  2976 ;; Return value:  Size  Location     Type
  2977 ;;                  1    wreg      void 
  2978 ;; Registers used:
  2979 ;;		wreg, status,2
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2989 ;;Total ram usage:        0 bytes
  2990 ;; Hardware stack levels used:    1
  2991 ;; Hardware stack levels required when called:   11
  2992 ;; This function calls:
  2993 ;;		Nothing
  2994 ;; This function is called by:
  2995 ;;		_SYSTEM_Initialize
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           	psect	text15
  3000  002686                     __ptext15:
  3001                           	opt callstack 0
  3002  002686                     _PIN_MANAGER_Initialize:
  3003                           	opt callstack 18
  3004  002686                     
  3005                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3006  002686  0E00               	movlw	0
  3007  002688  6E89               	movwf	137,c	;volatile
  3008                           
  3009                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3010  00268A  0E00               	movlw	0
  3011  00268C  6E8A               	movwf	138,c	;volatile
  3012                           
  3013                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  3014  00268E  0E00               	movlw	0
  3015  002690  6E8B               	movwf	139,c	;volatile
  3016                           
  3017                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xEF;
  3018  002692  0EEF               	movlw	239
  3019  002694  6E92               	movwf	146,c	;volatile
  3020  002696                     
  3021                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  3022  002696  6893               	setf	147,c	;volatile
  3023                           
  3024                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  3025  002698  0EBF               	movlw	191
  3026  00269A  6E94               	movwf	148,c	;volatile
  3027                           
  3028                           ;mcc_generated_files/pin_manager.c: 74:     ANCON0 = 0x1F;
  3029  00269C  0E1F               	movlw	31
  3030  00269E  010F               	movlb	15	; () banked
  3031  0026A0  6F5D               	movwf	93,b	;volatile
  3032                           
  3033                           ;mcc_generated_files/pin_manager.c: 75:     ANCON1 = 0x07;
  3034  0026A2  0E07               	movlw	7
  3035  0026A4  6F5C               	movwf	92,b	;volatile
  3036                           
  3037                           ;mcc_generated_files/pin_manager.c: 80:     WPUB = 0x00;
  3038  0026A6  0E00               	movlw	0
  3039  0026A8  6F5B               	movwf	91,b	;volatile
  3040  0026AA                     
  3041                           ; BSR set to: 15
  3042                           ;mcc_generated_files/pin_manager.c: 81:     INTCON2bits.nRBPU = 1;
  3043  0026AA  8EF1               	bsf	241,7,c	;volatile
  3044  0026AC                     
  3045                           ; BSR set to: 15
  3046  0026AC  0012               	return		;funcret
  3047  0026AE                     __end_of_PIN_MANAGER_Initialize:
  3048                           	opt callstack 0
  3049                           
  3050 ;; *************** function _OSCILLATOR_Initialize *****************
  3051 ;; Defined at:
  3052 ;;		line 61 in file "mcc_generated_files/mcc.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;		None
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;		None
  3057 ;; Return value:  Size  Location     Type
  3058 ;;                  1    wreg      void 
  3059 ;; Registers used:
  3060 ;;		wreg, status,2
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3070 ;;Total ram usage:        0 bytes
  3071 ;; Hardware stack levels used:    1
  3072 ;; Hardware stack levels required when called:   11
  3073 ;; This function calls:
  3074 ;;		Nothing
  3075 ;; This function is called by:
  3076 ;;		_SYSTEM_Initialize
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079                           
  3080                           	psect	text16
  3081  0027A2                     __ptext16:
  3082                           	opt callstack 0
  3083  0027A2                     _OSCILLATOR_Initialize:
  3084                           	opt callstack 18
  3085  0027A2                     
  3086                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x60;
  3087  0027A2  0E60               	movlw	96
  3088  0027A4  6ED3               	movwf	211,c	;volatile
  3089                           
  3090                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x00;
  3091  0027A6  0E00               	movlw	0
  3092  0027A8  6ED2               	movwf	210,c	;volatile
  3093                           
  3094                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
  3095  0027AA  0E00               	movlw	0
  3096  0027AC  6E9B               	movwf	155,c	;volatile
  3097                           
  3098                           ;mcc_generated_files/mcc.c: 70:     REFOCON = 0x00;
  3099  0027AE  0E00               	movlw	0
  3100  0027B0  6E9A               	movwf	154,c	;volatile
  3101  0027B2  0012               	return		;funcret
  3102  0027B4                     __end_of_OSCILLATOR_Initialize:
  3103                           	opt callstack 0
  3104                           
  3105 ;; *************** function _INTERRUPT_Initialize *****************
  3106 ;; Defined at:
  3107 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;		None
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;		None
  3112 ;; Return value:  Size  Location     Type
  3113 ;;                  1    wreg      void 
  3114 ;; Registers used:
  3115 ;;		None
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 0/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3125 ;;Total ram usage:        0 bytes
  3126 ;; Hardware stack levels used:    1
  3127 ;; Hardware stack levels required when called:   11
  3128 ;; This function calls:
  3129 ;;		Nothing
  3130 ;; This function is called by:
  3131 ;;		_SYSTEM_Initialize
  3132 ;; This function uses a non-reentrant model
  3133 ;;
  3134                           
  3135                           	psect	text17
  3136  002884                     __ptext17:
  3137                           	opt callstack 0
  3138  002884                     _INTERRUPT_Initialize:
  3139                           	opt callstack 18
  3140  002884                     
  3141                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  3142  002884  9ED0               	bcf	208,7,c	;volatile
  3143  002886  0012               	return		;funcret
  3144  002888                     __end_of_INTERRUPT_Initialize:
  3145                           	opt callstack 0
  3146                           
  3147 ;; *************** function _EUSART1_Initialize *****************
  3148 ;; Defined at:
  3149 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;		None
  3152 ;; Auto vars:     Size  Location     Type
  3153 ;;		None
  3154 ;; Return value:  Size  Location     Type
  3155 ;;                  1    wreg      void 
  3156 ;; Registers used:
  3157 ;;		wreg, status,2, status,0, cstack
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/0
  3160 ;;		On exit  : 0/0
  3161 ;;		Unchanged: 0/0
  3162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3167 ;;Total ram usage:        0 bytes
  3168 ;; Hardware stack levels used:    1
  3169 ;; Hardware stack levels required when called:   12
  3170 ;; This function calls:
  3171 ;;		_EUSART1_SetErrorHandler
  3172 ;;		_EUSART1_SetFramingErrorHandler
  3173 ;;		_EUSART1_SetOverrunErrorHandler
  3174 ;; This function is called by:
  3175 ;;		_SYSTEM_Initialize
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179                           	psect	text18
  3180  0023B6                     __ptext18:
  3181                           	opt callstack 0
  3182  0023B6                     _EUSART1_Initialize:
  3183                           	opt callstack 17
  3184  0023B6                     
  3185                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  3186  0023B6  0E08               	movlw	8
  3187  0023B8  6EA7               	movwf	167,c	;volatile
  3188                           
  3189                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  3190  0023BA  0E90               	movlw	144
  3191  0023BC  6EAB               	movwf	171,c	;volatile
  3192                           
  3193                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  3194  0023BE  0E24               	movlw	36
  3195  0023C0  6EAC               	movwf	172,c	;volatile
  3196                           
  3197                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x08;
  3198  0023C2  0E08               	movlw	8
  3199  0023C4  6EAF               	movwf	175,c	;volatile
  3200                           
  3201                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x02;
  3202  0023C6  0E02               	movlw	2
  3203  0023C8  6E7D               	movwf	125,c	;volatile
  3204  0023CA                     
  3205                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  3206  0023CA  0E00               	movlw	0
  3207  0023CC  0100               	movlb	0	; () banked
  3208  0023CE  6F6E               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
  3209  0023D0  0E00               	movlw	0
  3210  0023D2  6F6F               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  3211  0023D4  ECEE  F013         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  3212  0023D8                     
  3213                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  3214  0023D8  0E00               	movlw	0
  3215  0023DA  0100               	movlb	0	; () banked
  3216  0023DC  6F6E               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
  3217  0023DE  0E00               	movlw	0
  3218  0023E0  6F6F               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  3219  0023E2  ECE9  F013         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  3220  0023E6                     
  3221                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  3222  0023E6  0E00               	movlw	0
  3223  0023E8  0100               	movlb	0	; () banked
  3224  0023EA  6F6E               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
  3225  0023EC  0E00               	movlw	0
  3226  0023EE  6F6F               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
  3227  0023F0  ECF3  F013         	call	_EUSART1_SetErrorHandler	;wreg free
  3228  0023F4                     
  3229                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  3230  0023F4  0E00               	movlw	0
  3231  0023F6  0100               	movlb	0	; () banked
  3232  0023F8  6FE9               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  3233  0023FA                     
  3234                           ; BSR set to: 0
  3235  0023FA  0012               	return		;funcret
  3236  0023FC                     __end_of_EUSART1_Initialize:
  3237                           	opt callstack 0
  3238                           
  3239 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3240 ;; Defined at:
  3241 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;  interruptHan    2   14[BANK0 ] PTR FTN()void 
  3244 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;		None
  3247 ;; Return value:  Size  Location     Type
  3248 ;;                  1    wreg      void 
  3249 ;; Registers used:
  3250 ;;		wreg, status,2, status,0
  3251 ;; Tracked objects:
  3252 ;;		On entry : 0/0
  3253 ;;		On exit  : 0/0
  3254 ;;		Unchanged: 0/0
  3255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3256 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3259 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3260 ;;Total ram usage:        2 bytes
  3261 ;; Hardware stack levels used:    1
  3262 ;; Hardware stack levels required when called:   11
  3263 ;; This function calls:
  3264 ;;		Nothing
  3265 ;; This function is called by:
  3266 ;;		_EUSART1_Initialize
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270                           	psect	text19
  3271  0027D2                     __ptext19:
  3272                           	opt callstack 0
  3273  0027D2                     _EUSART1_SetOverrunErrorHandler:
  3274                           	opt callstack 17
  3275  0027D2                     
  3276                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  3277  0027D2  C06E  F0EC         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  3278  0027D6  C06F  F0ED         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  3279  0027DA  0012               	return		;funcret
  3280  0027DC                     __end_of_EUSART1_SetOverrunErrorHandler:
  3281                           	opt callstack 0
  3282                           
  3283 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3284 ;; Defined at:
  3285 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;  interruptHan    2   14[BANK0 ] PTR FTN()void 
  3288 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;		None
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  1    wreg      void 
  3293 ;; Registers used:
  3294 ;;		wreg, status,2, status,0
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3300 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3303 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3304 ;;Total ram usage:        2 bytes
  3305 ;; Hardware stack levels used:    1
  3306 ;; Hardware stack levels required when called:   11
  3307 ;; This function calls:
  3308 ;;		Nothing
  3309 ;; This function is called by:
  3310 ;;		_EUSART1_Initialize
  3311 ;; This function uses a non-reentrant model
  3312 ;;
  3313                           
  3314                           	psect	text20
  3315  0027DC                     __ptext20:
  3316                           	opt callstack 0
  3317  0027DC                     _EUSART1_SetFramingErrorHandler:
  3318                           	opt callstack 17
  3319  0027DC                     
  3320                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  3321  0027DC  C06E  F0EE         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  3322  0027E0  C06F  F0EF         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  3323  0027E4  0012               	return		;funcret
  3324  0027E6                     __end_of_EUSART1_SetFramingErrorHandler:
  3325                           	opt callstack 0
  3326                           
  3327 ;; *************** function _EUSART1_SetErrorHandler *****************
  3328 ;; Defined at:
  3329 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  3330 ;; Parameters:    Size  Location     Type
  3331 ;;  interruptHan    2   14[BANK0 ] PTR FTN()void 
  3332 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;		None
  3335 ;; Return value:  Size  Location     Type
  3336 ;;                  1    wreg      void 
  3337 ;; Registers used:
  3338 ;;		wreg, status,2, status,0
  3339 ;; Tracked objects:
  3340 ;;		On entry : 0/0
  3341 ;;		On exit  : 0/0
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3344 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3347 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3348 ;;Total ram usage:        2 bytes
  3349 ;; Hardware stack levels used:    1
  3350 ;; Hardware stack levels required when called:   11
  3351 ;; This function calls:
  3352 ;;		Nothing
  3353 ;; This function is called by:
  3354 ;;		_EUSART1_Initialize
  3355 ;; This function uses a non-reentrant model
  3356 ;;
  3357                           
  3358                           	psect	text21
  3359  0027E6                     __ptext21:
  3360                           	opt callstack 0
  3361  0027E6                     _EUSART1_SetErrorHandler:
  3362                           	opt callstack 17
  3363  0027E6                     
  3364                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  3365  0027E6  C06E  F0EA         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  3366  0027EA  C06F  F0EB         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  3367  0027EE  0012               	return		;funcret
  3368  0027F0                     __end_of_EUSART1_SetErrorHandler:
  3369                           	opt callstack 0
  3370                           
  3371 ;; *************** function _ADC_Initialize *****************
  3372 ;; Defined at:
  3373 ;;		line 62 in file "mcc_generated_files/adc.c"
  3374 ;; Parameters:    Size  Location     Type
  3375 ;;		None
  3376 ;; Auto vars:     Size  Location     Type
  3377 ;;		None
  3378 ;; Return value:  Size  Location     Type
  3379 ;;                  1    wreg      void 
  3380 ;; Registers used:
  3381 ;;		wreg, status,2
  3382 ;; Tracked objects:
  3383 ;;		On entry : 0/0
  3384 ;;		On exit  : 0/0
  3385 ;;		Unchanged: 0/0
  3386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3391 ;;Total ram usage:        0 bytes
  3392 ;; Hardware stack levels used:    1
  3393 ;; Hardware stack levels required when called:   11
  3394 ;; This function calls:
  3395 ;;		Nothing
  3396 ;; This function is called by:
  3397 ;;		_SYSTEM_Initialize
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           	psect	text22
  3402  002726                     __ptext22:
  3403                           	opt callstack 0
  3404  002726                     _ADC_Initialize:
  3405                           	opt callstack 18
  3406  002726                     
  3407                           ;mcc_generated_files/adc.c: 67:     ADCON0 = 0x01;
  3408  002726  0E01               	movlw	1
  3409  002728  6EC2               	movwf	194,c	;volatile
  3410                           
  3411                           ;mcc_generated_files/adc.c: 70:     ADCON1 = 0x10;
  3412  00272A  0E10               	movlw	16
  3413  00272C  6EC1               	movwf	193,c	;volatile
  3414                           
  3415                           ;mcc_generated_files/adc.c: 73:     ADCON2 = 0x80;
  3416  00272E  0E80               	movlw	128
  3417  002730  6EC0               	movwf	192,c	;volatile
  3418                           
  3419                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  3420  002732  0E00               	movlw	0
  3421  002734  6EC4               	movwf	196,c	;volatile
  3422                           
  3423                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
  3424  002736  0E00               	movlw	0
  3425  002738  6EC3               	movwf	195,c	;volatile
  3426  00273A  0012               	return		;funcret
  3427  00273C                     __end_of_ADC_Initialize:
  3428                           	opt callstack 0
  3429                           
  3430 ;; *************** function _I2C_Open *****************
  3431 ;; Defined at:
  3432 ;;		line 112 in file "mcc_generated_files/i2c_slave.c"
  3433 ;; Parameters:    Size  Location     Type
  3434 ;;		None
  3435 ;; Auto vars:     Size  Location     Type
  3436 ;;		None
  3437 ;; Return value:  Size  Location     Type
  3438 ;;                  1    wreg      void 
  3439 ;; Registers used:
  3440 ;;		wreg, status,2, status,0, cstack
  3441 ;; Tracked objects:
  3442 ;;		On entry : 0/0
  3443 ;;		On exit  : 0/0
  3444 ;;		Unchanged: 0/0
  3445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3450 ;;Total ram usage:        0 bytes
  3451 ;; Hardware stack levels used:    1
  3452 ;; Hardware stack levels required when called:   12
  3453 ;; This function calls:
  3454 ;;		_I2C_SlaveEnableIrq
  3455 ;;		_I2C_SlaveOpen
  3456 ;;		_I2C_SlaveSetAddrIntHandler
  3457 ;;		_I2C_SlaveSetBusColIntHandler
  3458 ;;		_I2C_SlaveSetIsrHandler
  3459 ;;		_I2C_SlaveSetReadIntHandler
  3460 ;;		_I2C_SlaveSetSlaveAddr
  3461 ;;		_I2C_SlaveSetSlaveMask
  3462 ;;		_I2C_SlaveSetWrColIntHandler
  3463 ;;		_I2C_SlaveSetWriteIntHandler
  3464 ;; This function is called by:
  3465 ;;		_main
  3466 ;; This function uses a non-reentrant model
  3467 ;;
  3468                           
  3469                           	psect	text23
  3470  0021A8                     __ptext23:
  3471                           	opt callstack 0
  3472  0021A8                     _I2C_Open:
  3473                           	opt callstack 18
  3474  0021A8                     
  3475                           ;mcc_generated_files/i2c_slave.c: 114:     I2C_SlaveOpen();
  3476  0021A8  EC6B  F013         	call	_I2C_SlaveOpen	;wreg free
  3477  0021AC                     
  3478                           ;mcc_generated_files/i2c_slave.c: 115:     I2C_SlaveSetSlaveAddr(5 << 1);
  3479  0021AC  0E0A               	movlw	10
  3480  0021AE  EC07  F014         	call	_I2C_SlaveSetSlaveAddr
  3481  0021B2                     
  3482                           ;mcc_generated_files/i2c_slave.c: 116:     I2C_SlaveSetSlaveMask(127);
  3483  0021B2  0E7F               	movlw	127
  3484  0021B4  EC02  F014         	call	_I2C_SlaveSetSlaveMask
  3485                           
  3486                           ;mcc_generated_files/i2c_slave.c: 117:     I2C_SlaveSetIsrHandler(I2C_Isr);
  3487  0021B8  0EEC               	movlw	low _I2C_Isr
  3488  0021BA  0100               	movlb	0	; () banked
  3489  0021BC  6F6E               	movwf	I2C_SlaveSetIsrHandler@handler& (0+255),b
  3490  0021BE  0E1E               	movlw	high _I2C_Isr
  3491  0021C0  6F6F               	movwf	(I2C_SlaveSetIsrHandler@handler+1)& (0+255),b
  3492  0021C2  EC11  F014         	call	_I2C_SlaveSetIsrHandler	;wreg free
  3493                           
  3494                           ;mcc_generated_files/i2c_slave.c: 118:     I2C_SlaveSetBusColIntHandler(I2C_SlaveDefBusC
      +                          olInterruptHandler);
  3495  0021C6  0E00               	movlw	0
  3496  0021C8  0100               	movlb	0	; () banked
  3497  0021CA  6F6E               	movwf	I2C_SlaveSetBusColIntHandler@handler& (0+255),b
  3498  0021CC  0E00               	movlw	0
  3499  0021CE  6F6F               	movwf	(I2C_SlaveSetBusColIntHandler@handler+1)& (0+255),b
  3500  0021D0  EC16  F014         	call	_I2C_SlaveSetBusColIntHandler	;wreg free
  3501                           
  3502                           ;mcc_generated_files/i2c_slave.c: 119:     I2C_SlaveSetWriteIntHandler(I2C_SlaveDefWrInt
      +                          erruptHandler);
  3503  0021D4  0E68               	movlw	low _I2C_SlaveDefWrInterruptHandler
  3504  0021D6  0100               	movlb	0	; () banked
  3505  0021D8  6F6E               	movwf	I2C_SlaveSetWriteIntHandler@handler& (0+255),b
  3506  0021DA  0E28               	movlw	high _I2C_SlaveDefWrInterruptHandler
  3507  0021DC  6F6F               	movwf	(I2C_SlaveSetWriteIntHandler@handler+1)& (0+255),b
  3508  0021DE  ECF8  F013         	call	_I2C_SlaveSetWriteIntHandler	;wreg free
  3509                           
  3510                           ;mcc_generated_files/i2c_slave.c: 120:     I2C_SlaveSetReadIntHandler(I2C_SlaveDefRdInte
      +                          rruptHandler);
  3511  0021E2  0E54               	movlw	low _I2C_SlaveDefRdInterruptHandler
  3512  0021E4  0100               	movlb	0	; () banked
  3513  0021E6  6F6E               	movwf	I2C_SlaveSetReadIntHandler@handler& (0+255),b
  3514  0021E8  0E28               	movlw	high _I2C_SlaveDefRdInterruptHandler
  3515  0021EA  6F6F               	movwf	(I2C_SlaveSetReadIntHandler@handler+1)& (0+255),b
  3516  0021EC  EC0C  F014         	call	_I2C_SlaveSetReadIntHandler	;wreg free
  3517                           
  3518                           ;mcc_generated_files/i2c_slave.c: 121:     I2C_SlaveSetAddrIntHandler(I2C_SlaveDefAddrIn
      +                          terruptHandler);
  3519  0021F0  0E5E               	movlw	low _I2C_SlaveDefAddrInterruptHandler
  3520  0021F2  0100               	movlb	0	; () banked
  3521  0021F4  6F6E               	movwf	I2C_SlaveSetAddrIntHandler@handler& (0+255),b
  3522  0021F6  0E28               	movlw	high _I2C_SlaveDefAddrInterruptHandler
  3523  0021F8  6F6F               	movwf	(I2C_SlaveSetAddrIntHandler@handler+1)& (0+255),b
  3524  0021FA  EC1B  F014         	call	_I2C_SlaveSetAddrIntHandler	;wreg free
  3525                           
  3526                           ;mcc_generated_files/i2c_slave.c: 122:     I2C_SlaveSetWrColIntHandler(I2C_SlaveDefWrCol
      +                          InterruptHandler);
  3527  0021FE  0EA0               	movlw	low _I2C_SlaveDefWrColInterruptHandler
  3528  002200  0100               	movlb	0	; () banked
  3529  002202  6F6E               	movwf	I2C_SlaveSetWrColIntHandler@handler& (0+255),b
  3530  002204  0E28               	movlw	high _I2C_SlaveDefWrColInterruptHandler
  3531  002206  6F6F               	movwf	(I2C_SlaveSetWrColIntHandler@handler+1)& (0+255),b
  3532  002208  ECFD  F013         	call	_I2C_SlaveSetWrColIntHandler	;wreg free
  3533  00220C                     
  3534                           ;mcc_generated_files/i2c_slave.c: 123:     I2C_SlaveEnableIrq();
  3535  00220C  EC44  F014         	call	_I2C_SlaveEnableIrq	;wreg free
  3536  002210  0012               	return		;funcret
  3537  002212                     __end_of_I2C_Open:
  3538                           	opt callstack 0
  3539                           
  3540 ;; *************** function _I2C_SlaveSetWriteIntHandler *****************
  3541 ;; Defined at:
  3542 ;;		line 232 in file "mcc_generated_files/i2c_slave.c"
  3543 ;; Parameters:    Size  Location     Type
  3544 ;;  handler         2   14[BANK0 ] PTR FTN()void 
  3545 ;;		 -> I2C_SlaveDefWrInterruptHandler(1), 
  3546 ;; Auto vars:     Size  Location     Type
  3547 ;;		None
  3548 ;; Return value:  Size  Location     Type
  3549 ;;                  1    wreg      void 
  3550 ;; Registers used:
  3551 ;;		wreg, status,2, status,0
  3552 ;; Tracked objects:
  3553 ;;		On entry : 0/0
  3554 ;;		On exit  : 0/0
  3555 ;;		Unchanged: 0/0
  3556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3557 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3560 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3561 ;;Total ram usage:        2 bytes
  3562 ;; Hardware stack levels used:    1
  3563 ;; Hardware stack levels required when called:   11
  3564 ;; This function calls:
  3565 ;;		Nothing
  3566 ;; This function is called by:
  3567 ;;		_I2C_Open
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570                           
  3571                           	psect	text24
  3572  0027F0                     __ptext24:
  3573                           	opt callstack 0
  3574  0027F0                     _I2C_SlaveSetWriteIntHandler:
  3575                           	opt callstack 18
  3576  0027F0                     
  3577                           ;mcc_generated_files/i2c_slave.c: 233:     I2C_SlaveWrInterruptHandler = handler;
  3578  0027F0  C06E  F0DF         	movff	I2C_SlaveSetWriteIntHandler@handler,_I2C_SlaveWrInterruptHandler
  3579  0027F4  C06F  F0E0         	movff	I2C_SlaveSetWriteIntHandler@handler+1,_I2C_SlaveWrInterruptHandler+1
  3580  0027F8  0012               	return		;funcret
  3581  0027FA                     __end_of_I2C_SlaveSetWriteIntHandler:
  3582                           	opt callstack 0
  3583                           
  3584 ;; *************** function _I2C_SlaveSetWrColIntHandler *****************
  3585 ;; Defined at:
  3586 ;;		line 265 in file "mcc_generated_files/i2c_slave.c"
  3587 ;; Parameters:    Size  Location     Type
  3588 ;;  handler         2   14[BANK0 ] PTR FTN()void 
  3589 ;;		 -> I2C_SlaveDefWrColInterruptHandler(1), 
  3590 ;; Auto vars:     Size  Location     Type
  3591 ;;		None
  3592 ;; Return value:  Size  Location     Type
  3593 ;;                  1    wreg      void 
  3594 ;; Registers used:
  3595 ;;		wreg, status,2, status,0
  3596 ;; Tracked objects:
  3597 ;;		On entry : 0/0
  3598 ;;		On exit  : 0/0
  3599 ;;		Unchanged: 0/0
  3600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3601 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3604 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3605 ;;Total ram usage:        2 bytes
  3606 ;; Hardware stack levels used:    1
  3607 ;; Hardware stack levels required when called:   11
  3608 ;; This function calls:
  3609 ;;		Nothing
  3610 ;; This function is called by:
  3611 ;;		_I2C_Open
  3612 ;; This function uses a non-reentrant model
  3613 ;;
  3614                           
  3615                           	psect	text25
  3616  0027FA                     __ptext25:
  3617                           	opt callstack 0
  3618  0027FA                     _I2C_SlaveSetWrColIntHandler:
  3619                           	opt callstack 18
  3620  0027FA                     
  3621                           ;mcc_generated_files/i2c_slave.c: 266:     I2C_SlaveWrColInterruptHandler = handler;
  3622  0027FA  C06E  F0D9         	movff	I2C_SlaveSetWrColIntHandler@handler,_I2C_SlaveWrColInterruptHandler
  3623  0027FE  C06F  F0DA         	movff	I2C_SlaveSetWrColIntHandler@handler+1,_I2C_SlaveWrColInterruptHandler+1
  3624  002802  0012               	return		;funcret
  3625  002804                     __end_of_I2C_SlaveSetWrColIntHandler:
  3626                           	opt callstack 0
  3627                           
  3628 ;; *************** function _I2C_SlaveSetSlaveMask *****************
  3629 ;; Defined at:
  3630 ;;		line 322 in file "mcc_generated_files/i2c_slave.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;  maskAddr        1    wreg     unsigned char 
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;  maskAddr        1   14[BANK0 ] unsigned char 
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  1    wreg      void 
  3637 ;; Registers used:
  3638 ;;		wreg
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3645 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3647 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3648 ;;Total ram usage:        1 bytes
  3649 ;; Hardware stack levels used:    1
  3650 ;; Hardware stack levels required when called:   11
  3651 ;; This function calls:
  3652 ;;		Nothing
  3653 ;; This function is called by:
  3654 ;;		_I2C_Open
  3655 ;; This function uses a non-reentrant model
  3656 ;;
  3657                           
  3658                           	psect	text26
  3659  002804                     __ptext26:
  3660                           	opt callstack 0
  3661  002804                     _I2C_SlaveSetSlaveMask:
  3662                           	opt callstack 18
  3663                           
  3664                           ;incstack = 0
  3665                           ;I2C_SlaveSetSlaveMask@maskAddr stored from wreg
  3666  002804  0100               	movlb	0	; () banked
  3667  002806  6F6E               	movwf	I2C_SlaveSetSlaveMask@maskAddr& (0+255),b
  3668  002808                     
  3669                           ;mcc_generated_files/i2c_slave.c: 322: static __attribute__((inline)) void I2C_SlaveSetS
      +                          laveMask(uint8_t maskAddr);mcc_generated_files/i2c_slave.c: 323: {;mcc_generated_files/i
      +                          2c_slave.c: 324:     SSPADD = maskAddr;
  3670  002808  C06E  FFC8         	movff	I2C_SlaveSetSlaveMask@maskAddr,4040	;volatile
  3671  00280C  0012               	return		;funcret
  3672  00280E                     __end_of_I2C_SlaveSetSlaveMask:
  3673                           	opt callstack 0
  3674                           
  3675 ;; *************** function _I2C_SlaveSetSlaveAddr *****************
  3676 ;; Defined at:
  3677 ;;		line 317 in file "mcc_generated_files/i2c_slave.c"
  3678 ;; Parameters:    Size  Location     Type
  3679 ;;  slaveAddr       1    wreg     unsigned char 
  3680 ;; Auto vars:     Size  Location     Type
  3681 ;;  slaveAddr       1   14[BANK0 ] unsigned char 
  3682 ;; Return value:  Size  Location     Type
  3683 ;;                  1    wreg      void 
  3684 ;; Registers used:
  3685 ;;		wreg
  3686 ;; Tracked objects:
  3687 ;;		On entry : 0/0
  3688 ;;		On exit  : 0/0
  3689 ;;		Unchanged: 0/0
  3690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3692 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3694 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3695 ;;Total ram usage:        1 bytes
  3696 ;; Hardware stack levels used:    1
  3697 ;; Hardware stack levels required when called:   11
  3698 ;; This function calls:
  3699 ;;		Nothing
  3700 ;; This function is called by:
  3701 ;;		_I2C_Open
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704                           
  3705                           	psect	text27
  3706  00280E                     __ptext27:
  3707                           	opt callstack 0
  3708  00280E                     _I2C_SlaveSetSlaveAddr:
  3709                           	opt callstack 18
  3710                           
  3711                           ;incstack = 0
  3712                           ;I2C_SlaveSetSlaveAddr@slaveAddr stored from wreg
  3713  00280E  0100               	movlb	0	; () banked
  3714  002810  6F6E               	movwf	I2C_SlaveSetSlaveAddr@slaveAddr& (0+255),b
  3715  002812                     
  3716                           ;mcc_generated_files/i2c_slave.c: 317: static __attribute__((inline)) void I2C_SlaveSetS
      +                          laveAddr(uint8_t slaveAddr);mcc_generated_files/i2c_slave.c: 318: {;mcc_generated_files/
      +                          i2c_slave.c: 319:     SSPADD = slaveAddr;
  3717  002812  C06E  FFC8         	movff	I2C_SlaveSetSlaveAddr@slaveAddr,4040	;volatile
  3718  002816  0012               	return		;funcret
  3719  002818                     __end_of_I2C_SlaveSetSlaveAddr:
  3720                           	opt callstack 0
  3721                           
  3722 ;; *************** function _I2C_SlaveSetReadIntHandler *****************
  3723 ;; Defined at:
  3724 ;;		line 215 in file "mcc_generated_files/i2c_slave.c"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;  handler         2   14[BANK0 ] PTR FTN()void 
  3727 ;;		 -> I2C_SlaveDefRdInterruptHandler(1), 
  3728 ;; Auto vars:     Size  Location     Type
  3729 ;;		None
  3730 ;; Return value:  Size  Location     Type
  3731 ;;                  1    wreg      void 
  3732 ;; Registers used:
  3733 ;;		wreg, status,2, status,0
  3734 ;; Tracked objects:
  3735 ;;		On entry : 0/0
  3736 ;;		On exit  : 0/0
  3737 ;;		Unchanged: 0/0
  3738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3739 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3742 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3743 ;;Total ram usage:        2 bytes
  3744 ;; Hardware stack levels used:    1
  3745 ;; Hardware stack levels required when called:   11
  3746 ;; This function calls:
  3747 ;;		Nothing
  3748 ;; This function is called by:
  3749 ;;		_I2C_Open
  3750 ;; This function uses a non-reentrant model
  3751 ;;
  3752                           
  3753                           	psect	text28
  3754  002818                     __ptext28:
  3755                           	opt callstack 0
  3756  002818                     _I2C_SlaveSetReadIntHandler:
  3757                           	opt callstack 18
  3758  002818                     
  3759                           ;mcc_generated_files/i2c_slave.c: 216:     I2C_SlaveRdInterruptHandler = handler;
  3760  002818  C06E  F0E1         	movff	I2C_SlaveSetReadIntHandler@handler,_I2C_SlaveRdInterruptHandler
  3761  00281C  C06F  F0E2         	movff	I2C_SlaveSetReadIntHandler@handler+1,_I2C_SlaveRdInterruptHandler+1
  3762  002820  0012               	return		;funcret
  3763  002822                     __end_of_I2C_SlaveSetReadIntHandler:
  3764                           	opt callstack 0
  3765                           
  3766 ;; *************** function _I2C_SlaveSetIsrHandler *****************
  3767 ;; Defined at:
  3768 ;;		line 209 in file "mcc_generated_files/i2c_slave.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;  handler         2   14[BANK0 ] PTR FTN()void 
  3771 ;;		 -> myInt(1), I2C_Isr(1), 
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;		None
  3774 ;; Return value:  Size  Location     Type
  3775 ;;                  1    wreg      void 
  3776 ;; Registers used:
  3777 ;;		wreg, status,2, status,0
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3783 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3786 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3787 ;;Total ram usage:        2 bytes
  3788 ;; Hardware stack levels used:    1
  3789 ;; Hardware stack levels required when called:   11
  3790 ;; This function calls:
  3791 ;;		Nothing
  3792 ;; This function is called by:
  3793 ;;		_I2C_Open
  3794 ;;		_main
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797                           
  3798                           	psect	text29
  3799  002822                     __ptext29:
  3800                           	opt callstack 0
  3801  002822                     _I2C_SlaveSetIsrHandler:
  3802                           	opt callstack 19
  3803  002822                     
  3804                           ;mcc_generated_files/i2c_slave.c: 209: void I2C_SlaveSetIsrHandler(interruptHandler hand
      +                          ler);mcc_generated_files/i2c_slave.c: 210: {;mcc_generated_files/i2c_slave.c: 211:     M
      +                          SSP_InterruptHandler = handler;
  3805  002822  C06E  F0E3         	movff	I2C_SlaveSetIsrHandler@handler,_MSSP_InterruptHandler
  3806  002826  C06F  F0E4         	movff	I2C_SlaveSetIsrHandler@handler+1,_MSSP_InterruptHandler+1
  3807  00282A  0012               	return		;funcret
  3808  00282C                     __end_of_I2C_SlaveSetIsrHandler:
  3809                           	opt callstack 0
  3810                           
  3811 ;; *************** function _I2C_SlaveSetBusColIntHandler *****************
  3812 ;; Defined at:
  3813 ;;		line 281 in file "mcc_generated_files/i2c_slave.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;  handler         2   14[BANK0 ] PTR FTN()void 
  3816 ;;		 -> I2C_SlaveDefBusColInterruptHandler(1), 
  3817 ;; Auto vars:     Size  Location     Type
  3818 ;;		None
  3819 ;; Return value:  Size  Location     Type
  3820 ;;                  1    wreg      void 
  3821 ;; Registers used:
  3822 ;;		wreg, status,2, status,0
  3823 ;; Tracked objects:
  3824 ;;		On entry : 0/0
  3825 ;;		On exit  : 0/0
  3826 ;;		Unchanged: 0/0
  3827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3828 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3831 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3832 ;;Total ram usage:        2 bytes
  3833 ;; Hardware stack levels used:    1
  3834 ;; Hardware stack levels required when called:   11
  3835 ;; This function calls:
  3836 ;;		Nothing
  3837 ;; This function is called by:
  3838 ;;		_I2C_Open
  3839 ;; This function uses a non-reentrant model
  3840 ;;
  3841                           
  3842                           	psect	text30
  3843  00282C                     __ptext30:
  3844                           	opt callstack 0
  3845  00282C                     _I2C_SlaveSetBusColIntHandler:
  3846                           	opt callstack 18
  3847  00282C                     
  3848                           ;mcc_generated_files/i2c_slave.c: 282:     I2C_SlaveBusColInterruptHandler = handler;
  3849  00282C  C06E  F0DB         	movff	I2C_SlaveSetBusColIntHandler@handler,_I2C_SlaveBusColInterruptHandler
  3850  002830  C06F  F0DC         	movff	I2C_SlaveSetBusColIntHandler@handler+1,_I2C_SlaveBusColInterruptHandler+1
  3851  002834  0012               	return		;funcret
  3852  002836                     __end_of_I2C_SlaveSetBusColIntHandler:
  3853                           	opt callstack 0
  3854                           
  3855 ;; *************** function _I2C_SlaveSetAddrIntHandler *****************
  3856 ;; Defined at:
  3857 ;;		line 249 in file "mcc_generated_files/i2c_slave.c"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;  handler         2   14[BANK0 ] PTR FTN()void 
  3860 ;;		 -> I2C_SlaveDefAddrInterruptHandler(1), 
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;		None
  3863 ;; Return value:  Size  Location     Type
  3864 ;;                  1    wreg      void 
  3865 ;; Registers used:
  3866 ;;		wreg, status,2, status,0
  3867 ;; Tracked objects:
  3868 ;;		On entry : 0/0
  3869 ;;		On exit  : 0/0
  3870 ;;		Unchanged: 0/0
  3871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3872 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3875 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3876 ;;Total ram usage:        2 bytes
  3877 ;; Hardware stack levels used:    1
  3878 ;; Hardware stack levels required when called:   11
  3879 ;; This function calls:
  3880 ;;		Nothing
  3881 ;; This function is called by:
  3882 ;;		_I2C_Open
  3883 ;; This function uses a non-reentrant model
  3884 ;;
  3885                           
  3886                           	psect	text31
  3887  002836                     __ptext31:
  3888                           	opt callstack 0
  3889  002836                     _I2C_SlaveSetAddrIntHandler:
  3890                           	opt callstack 18
  3891  002836                     
  3892                           ;mcc_generated_files/i2c_slave.c: 250:     I2C_SlaveAddrInterruptHandler = handler;
  3893  002836  C06E  F0DD         	movff	I2C_SlaveSetAddrIntHandler@handler,_I2C_SlaveAddrInterruptHandler
  3894  00283A  C06F  F0DE         	movff	I2C_SlaveSetAddrIntHandler@handler+1,_I2C_SlaveAddrInterruptHandler+1
  3895  00283E  0012               	return		;funcret
  3896  002840                     __end_of_I2C_SlaveSetAddrIntHandler:
  3897                           	opt callstack 0
  3898                           
  3899 ;; *************** function _I2C_SlaveOpen *****************
  3900 ;; Defined at:
  3901 ;;		line 296 in file "mcc_generated_files/i2c_slave.c"
  3902 ;; Parameters:    Size  Location     Type
  3903 ;;		None
  3904 ;; Auto vars:     Size  Location     Type
  3905 ;;		None
  3906 ;; Return value:  Size  Location     Type
  3907 ;;                  1    wreg      _Bool 
  3908 ;; Registers used:
  3909 ;;		wreg, status,2, status,0
  3910 ;; Tracked objects:
  3911 ;;		On entry : 0/0
  3912 ;;		On exit  : 0/0
  3913 ;;		Unchanged: 0/0
  3914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3919 ;;Total ram usage:        0 bytes
  3920 ;; Hardware stack levels used:    1
  3921 ;; Hardware stack levels required when called:   11
  3922 ;; This function calls:
  3923 ;;		Nothing
  3924 ;; This function is called by:
  3925 ;;		_I2C_Open
  3926 ;; This function uses a non-reentrant model
  3927 ;;
  3928                           
  3929                           	psect	text32
  3930  0026D6                     __ptext32:
  3931                           	opt callstack 0
  3932  0026D6                     _I2C_SlaveOpen:
  3933                           	opt callstack 18
  3934  0026D6                     
  3935                           ;mcc_generated_files/i2c_slave.c: 298:     if(!SSPCON1bits.SSPEN)
  3936  0026D6  BAC6               	btfsc	198,5,c	;volatile
  3937  0026D8  EF70  F013         	goto	u2121
  3938  0026DC  EF72  F013         	goto	u2120
  3939  0026E0                     u2121:
  3940  0026E0  EF79  F013         	goto	l401
  3941  0026E4                     u2120:
  3942  0026E4                     
  3943                           ;mcc_generated_files/i2c_slave.c: 299:     {;mcc_generated_files/i2c_slave.c: 300:      
      +                             SSPSTAT = 0x00;
  3944  0026E4  0E00               	movlw	0
  3945  0026E6  6EC7               	movwf	199,c	;volatile
  3946  0026E8                     
  3947                           ;mcc_generated_files/i2c_slave.c: 301:         SSPCON1 |= 0x06;
  3948  0026E8  0E06               	movlw	6
  3949  0026EA  12C6               	iorwf	198,f,c	;volatile
  3950  0026EC                     
  3951                           ;mcc_generated_files/i2c_slave.c: 302:         SSPCON2 = 0x00;
  3952  0026EC  0E00               	movlw	0
  3953  0026EE  6EC5               	movwf	197,c	;volatile
  3954  0026F0                     
  3955                           ;mcc_generated_files/i2c_slave.c: 303:         SSPCON1bits.SSPEN = 1;
  3956  0026F0  8AC6               	bsf	198,5,c	;volatile
  3957  0026F2                     l401:
  3958  0026F2  0012               	return		;funcret
  3959  0026F4                     __end_of_I2C_SlaveOpen:
  3960                           	opt callstack 0
  3961                           
  3962 ;; *************** function _I2C_SlaveEnableIrq *****************
  3963 ;; Defined at:
  3964 ;;		line 327 in file "mcc_generated_files/i2c_slave.c"
  3965 ;; Parameters:    Size  Location     Type
  3966 ;;		None
  3967 ;; Auto vars:     Size  Location     Type
  3968 ;;		None
  3969 ;; Return value:  Size  Location     Type
  3970 ;;                  1    wreg      void 
  3971 ;; Registers used:
  3972 ;;		None
  3973 ;; Tracked objects:
  3974 ;;		On entry : 0/0
  3975 ;;		On exit  : 0/0
  3976 ;;		Unchanged: 0/0
  3977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3982 ;;Total ram usage:        0 bytes
  3983 ;; Hardware stack levels used:    1
  3984 ;; Hardware stack levels required when called:   11
  3985 ;; This function calls:
  3986 ;;		Nothing
  3987 ;; This function is called by:
  3988 ;;		_I2C_Open
  3989 ;; This function uses a non-reentrant model
  3990 ;;
  3991                           
  3992                           	psect	text33
  3993  002888                     __ptext33:
  3994                           	opt callstack 0
  3995  002888                     _I2C_SlaveEnableIrq:
  3996                           	opt callstack 18
  3997  002888                     
  3998                           ;mcc_generated_files/i2c_slave.c: 329:     PIE1bits.SSPIE = 1;
  3999  002888  869D               	bsf	157,3,c	;volatile
  4000  00288A  0012               	return		;funcret
  4001  00288C                     __end_of_I2C_SlaveEnableIrq:
  4002                           	opt callstack 0
  4003                           
  4004 ;; *************** function _I2C_Enable *****************
  4005 ;; Defined at:
  4006 ;;		line 141 in file "mcc_generated_files/i2c_slave.c"
  4007 ;; Parameters:    Size  Location     Type
  4008 ;;		None
  4009 ;; Auto vars:     Size  Location     Type
  4010 ;;		None
  4011 ;; Return value:  Size  Location     Type
  4012 ;;                  1    wreg      void 
  4013 ;; Registers used:
  4014 ;;		wreg, status,2, status,0, cstack
  4015 ;; Tracked objects:
  4016 ;;		On entry : 0/0
  4017 ;;		On exit  : 0/0
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4024 ;;Total ram usage:        0 bytes
  4025 ;; Hardware stack levels used:    1
  4026 ;; Hardware stack levels required when called:   12
  4027 ;; This function calls:
  4028 ;;		_I2C_Initialize
  4029 ;; This function is called by:
  4030 ;;		_main
  4031 ;; This function uses a non-reentrant model
  4032 ;;
  4033                           
  4034                           	psect	text34
  4035  002878                     __ptext34:
  4036                           	opt callstack 0
  4037  002878                     _I2C_Enable:
  4038                           	opt callstack 18
  4039  002878                     
  4040                           ;mcc_generated_files/i2c_slave.c: 143:     I2C_Initialize();
  4041  002878  ECDA  F013         	call	_I2C_Initialize	;wreg free
  4042  00287C  0012               	return		;funcret
  4043  00287E                     __end_of_I2C_Enable:
  4044                           	opt callstack 0
  4045                           
  4046 ;; *************** function _I2C_Initialize *****************
  4047 ;; Defined at:
  4048 ;;		line 104 in file "mcc_generated_files/i2c_slave.c"
  4049 ;; Parameters:    Size  Location     Type
  4050 ;;		None
  4051 ;; Auto vars:     Size  Location     Type
  4052 ;;		None
  4053 ;; Return value:  Size  Location     Type
  4054 ;;                  1    wreg      void 
  4055 ;; Registers used:
  4056 ;;		wreg, status,2, status,0
  4057 ;; Tracked objects:
  4058 ;;		On entry : 0/0
  4059 ;;		On exit  : 0/0
  4060 ;;		Unchanged: 0/0
  4061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4066 ;;Total ram usage:        0 bytes
  4067 ;; Hardware stack levels used:    1
  4068 ;; Hardware stack levels required when called:   11
  4069 ;; This function calls:
  4070 ;;		Nothing
  4071 ;; This function is called by:
  4072 ;;		_SYSTEM_Initialize
  4073 ;;		_I2C_Enable
  4074 ;; This function uses a non-reentrant model
  4075 ;;
  4076                           
  4077                           	psect	text35
  4078  0027B4                     __ptext35:
  4079                           	opt callstack 0
  4080  0027B4                     _I2C_Initialize:
  4081                           	opt callstack 18
  4082  0027B4                     
  4083                           ;mcc_generated_files/i2c_slave.c: 106:     SSPSTAT = 0x80;
  4084  0027B4  0E80               	movlw	128
  4085  0027B6  6EC7               	movwf	199,c	;volatile
  4086  0027B8                     
  4087                           ;mcc_generated_files/i2c_slave.c: 107:     SSPCON1 |= 0x36;
  4088  0027B8  0E36               	movlw	54
  4089  0027BA  12C6               	iorwf	198,f,c	;volatile
  4090  0027BC                     
  4091                           ;mcc_generated_files/i2c_slave.c: 108:     SSPCON2 = 0x01;
  4092  0027BC  0E01               	movlw	1
  4093  0027BE  6EC5               	movwf	197,c	;volatile
  4094  0027C0                     
  4095                           ;mcc_generated_files/i2c_slave.c: 109:     SSPCON1bits.SSPEN = 0;
  4096  0027C0  9AC6               	bcf	198,5,c	;volatile
  4097  0027C2  0012               	return		;funcret
  4098  0027C4                     __end_of_I2C_Initialize:
  4099                           	opt callstack 0
  4100                           
  4101 ;; *************** function _ADC_GetConversion *****************
  4102 ;; Defined at:
  4103 ;;		line 108 in file "mcc_generated_files/adc.c"
  4104 ;; Parameters:    Size  Location     Type
  4105 ;;  channel         1    wreg     enum E12186
  4106 ;; Auto vars:     Size  Location     Type
  4107 ;;  channel         1   18[BANK0 ] enum E12186
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  2   14[BANK0 ] unsigned short 
  4110 ;; Registers used:
  4111 ;;		wreg, status,2, status,0
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4117 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4118 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4119 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4120 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4121 ;;Total ram usage:        5 bytes
  4122 ;; Hardware stack levels used:    1
  4123 ;; Hardware stack levels required when called:   11
  4124 ;; This function calls:
  4125 ;;		Nothing
  4126 ;; This function is called by:
  4127 ;;		_main
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131                           	psect	text36
  4132  002482                     __ptext36:
  4133                           	opt callstack 0
  4134  002482                     _ADC_GetConversion:
  4135                           	opt callstack 19
  4136                           
  4137                           ;incstack = 0
  4138                           ;ADC_GetConversion@channel stored from wreg
  4139  002482  0100               	movlb	0	; () banked
  4140  002484  6F72               	movwf	ADC_GetConversion@channel& (0+255),b
  4141  002486                     
  4142                           ;mcc_generated_files/adc.c: 108: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 109: {;mcc_generated_files/adc.c: 111:     ADCON0bits.CHS = ch
      +                          annel;
  4143  002486  C072  F070         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  4144  00248A  0100               	movlb	0	; () banked
  4145  00248C  4770               	rlncf	??_ADC_GetConversion& (0+255),f,b
  4146  00248E  4770               	rlncf	??_ADC_GetConversion& (0+255),f,b
  4147  002490  50C2               	movf	194,w,c	;volatile
  4148  002492  1970               	xorwf	??_ADC_GetConversion& (0+255),w,b
  4149  002494  0B83               	andlw	-125
  4150  002496  1970               	xorwf	??_ADC_GetConversion& (0+255),w,b
  4151  002498  6EC2               	movwf	194,c	;volatile
  4152  00249A                     
  4153                           ; BSR set to: 0
  4154                           ;mcc_generated_files/adc.c: 114:     ADCON0bits.ADON = 1;
  4155  00249A  80C2               	bsf	194,0,c	;volatile
  4156  00249C                     
  4157                           ; BSR set to: 0
  4158                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.GO_nDONE = 1;
  4159  00249C  82C2               	bsf	194,1,c	;volatile
  4160  00249E                     l31:
  4161                           
  4162                           ;mcc_generated_files/adc.c: 121:     while (ADCON0bits.GO_nDONE)
  4163  00249E  B2C2               	btfsc	194,1,c	;volatile
  4164  0024A0  EF54  F012         	goto	u2261
  4165  0024A4  EF56  F012         	goto	u2260
  4166  0024A8                     u2261:
  4167  0024A8  EF4F  F012         	goto	l31
  4168  0024AC                     u2260:
  4169  0024AC                     
  4170                           ;mcc_generated_files/adc.c: 126:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  4171  0024AC  50C4               	movf	196,w,c	;volatile
  4172  0024AE  0100               	movlb	0	; () banked
  4173  0024B0  6F71               	movwf	(??_ADC_GetConversion+1)& (0+255),b
  4174  0024B2  6B70               	clrf	??_ADC_GetConversion& (0+255),b
  4175  0024B4  50C3               	movf	195,w,c	;volatile
  4176  0024B6  2570               	addwf	??_ADC_GetConversion& (0+255),w,b
  4177  0024B8  6F6E               	movwf	?_ADC_GetConversion& (0+255),b
  4178  0024BA  0E00               	movlw	0
  4179  0024BC  2171               	addwfc	(??_ADC_GetConversion+1)& (0+255),w,b
  4180  0024BE  6F6F               	movwf	(?_ADC_GetConversion+1)& (0+255),b
  4181  0024C0                     
  4182                           ; BSR set to: 0
  4183  0024C0  0012               	return		;funcret
  4184  0024C2                     __end_of_ADC_GetConversion:
  4185                           	opt callstack 0
  4186                           
  4187 ;; *************** function _INTERRUPT_InterruptManager *****************
  4188 ;; Defined at:
  4189 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  4190 ;; Parameters:    Size  Location     Type
  4191 ;;		None
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;		None
  4194 ;; Return value:  Size  Location     Type
  4195 ;;                  1    wreg      void 
  4196 ;; Registers used:
  4197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/0
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4205 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4206 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4207 ;;Total ram usage:       10 bytes
  4208 ;; Hardware stack levels used:    1
  4209 ;; Hardware stack levels required when called:   10
  4210 ;; This function calls:
  4211 ;;		Absolute function
  4212 ;;		_I2C_Isr
  4213 ;;		_myInt
  4214 ;; This function is called by:
  4215 ;;		Interrupt level 2
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           	psect	intcode
  4220  000008                     __pintcode:
  4221                           	opt callstack 0
  4222  000008                     _INTERRUPT_InterruptManager:
  4223                           	opt callstack 11
  4224                           
  4225                           ; BSR set to: 0
  4226                           ;incstack = 0
  4227  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4228  00000A  CFFA F064          	movff	pclath,??_INTERRUPT_InterruptManager
  4229  00000E  CFFB F065          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4230  000012  CFE1 F066          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
  4231  000016  CFE2 F067          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
  4232  00001A  CFD9 F068          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
  4233  00001E  CFDA F069          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
  4234  000022  CFF6 F06A          	movff	tblptrl,??_INTERRUPT_InterruptManager+6
  4235  000026  CFF7 F06B          	movff	tblptrh,??_INTERRUPT_InterruptManager+7
  4236  00002A  CFF8 F06C          	movff	tblptru,??_INTERRUPT_InterruptManager+8
  4237  00002E  CFF5 F06D          	movff	tablat,??_INTERRUPT_InterruptManager+9
  4238  000032                     
  4239                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  4240  000032  ACF2               	btfss	242,6,c	;volatile
  4241  000034  EF1E  F000         	goto	i2u237_41
  4242  000038  EF20  F000         	goto	i2u237_40
  4243  00003C                     i2u237_41:
  4244  00003C  EF4E  F000         	goto	i2l544
  4245  000040                     i2u237_40:
  4246  000040                     
  4247                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE2bits.BCLIE == 1 && PIR2bits.BCLIF == 1)
  4248  000040  A6A0               	btfss	160,3,c	;volatile
  4249  000042  EF25  F000         	goto	i2u238_41
  4250  000046  EF27  F000         	goto	i2u238_40
  4251  00004A                     i2u238_41:
  4252  00004A  EF3E  F000         	goto	i2l539
  4253  00004E                     i2u238_40:
  4254  00004E  A6A1               	btfss	161,3,c	;volatile
  4255  000050  EF2C  F000         	goto	i2u239_41
  4256  000054  EF2E  F000         	goto	i2u239_40
  4257  000058                     i2u239_41:
  4258  000058  EF3E  F000         	goto	i2l539
  4259  00005C                     i2u239_40:
  4260  00005C                     i2l2960:
  4261                           
  4262                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             MSSP_InterruptHandler();
  4263  00005C  D802               	call	i2u240_48
  4264  00005E  EF3C  F000         	goto	i2u240_49
  4265  000062                     i2u240_48:
  4266  000062  0005               	push	
  4267  000064  0100               	movlb	0	; () banked
  4268  000066  6EFA               	movwf	pclath,c
  4269  000068  51E3               	movf	_MSSP_InterruptHandler& (0+255),w,b
  4270  00006A  6EFD               	movwf	tosl,c
  4271  00006C  51E4               	movf	(_MSSP_InterruptHandler+1)& (0+255),w,b
  4272  00006E  6EFE               	movwf	tosh,c
  4273  000070  50F8               	movf	tblptru,w,c
  4274  000072  6EFF               	movwf	tosu,c
  4275  000074  50FA               	movf	pclath,w,c
  4276  000076  0012               	return		;indir
  4277  000078                     i2u240_49:
  4278                           
  4279                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  4280  000078  EF4E  F000         	goto	i2l544
  4281  00007C                     i2l539:
  4282  00007C  A69D               	btfss	157,3,c	;volatile
  4283  00007E  EF43  F000         	goto	i2u241_41
  4284  000082  EF45  F000         	goto	i2u241_40
  4285  000086                     i2u241_41:
  4286  000086  EF4E  F000         	goto	i2l540
  4287  00008A                     i2u241_40:
  4288  00008A  A69E               	btfss	158,3,c	;volatile
  4289  00008C  EF4A  F000         	goto	i2u242_41
  4290  000090  EF4C  F000         	goto	i2u242_40
  4291  000094                     i2u242_41:
  4292  000094  EF4E  F000         	goto	i2l540
  4293  000098                     i2u242_40:
  4294  000098  EF2E  F000         	goto	i2l2960
  4295  00009C                     i2l540:
  4296  00009C                     i2l544:
  4297  00009C  C06D  FFF5         	movff	??_INTERRUPT_InterruptManager+9,tablat
  4298  0000A0  C06C  FFF8         	movff	??_INTERRUPT_InterruptManager+8,tblptru
  4299  0000A4  C06B  FFF7         	movff	??_INTERRUPT_InterruptManager+7,tblptrh
  4300  0000A8  C06A  FFF6         	movff	??_INTERRUPT_InterruptManager+6,tblptrl
  4301  0000AC  C069  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
  4302  0000B0  C068  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
  4303  0000B4  C067  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
  4304  0000B8  C066  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
  4305  0000BC  C065  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4306  0000C0  C064  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4307  0000C4  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4308  0000C6  0011               	retfie		f
  4309  0000C8                     __end_of_INTERRUPT_InterruptManager:
  4310                           	opt callstack 0
  4311                           
  4312 ;; *************** function _I2C_Isr *****************
  4313 ;; Defined at:
  4314 ;;		line 156 in file "mcc_generated_files/i2c_slave.c"
  4315 ;; Parameters:    Size  Location     Type
  4316 ;;		None
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;		None
  4319 ;; Return value:  Size  Location     Type
  4320 ;;                  1    wreg      void 
  4321 ;; Registers used:
  4322 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4323 ;; Tracked objects:
  4324 ;;		On entry : 0/0
  4325 ;;		On exit  : 0/0
  4326 ;;		Unchanged: 0/0
  4327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4330 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4331 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4332 ;;Total ram usage:        2 bytes
  4333 ;; Hardware stack levels used:    1
  4334 ;; Hardware stack levels required when called:    3
  4335 ;; This function calls:
  4336 ;;		_I2C_SlaveAddrCallBack
  4337 ;;		_I2C_SlaveClearIrq
  4338 ;;		_I2C_SlaveGetRxData
  4339 ;;		_I2C_SlaveIsData
  4340 ;;		_I2C_SlaveIsRead
  4341 ;;		_I2C_SlaveIsRxBufFull
  4342 ;;		_I2C_SlaveIsWriteCollision
  4343 ;;		_I2C_SlaveRdCallBack
  4344 ;;		_I2C_SlaveReleaseClock
  4345 ;;		_I2C_SlaveRestart
  4346 ;;		_I2C_SlaveWrCallBack
  4347 ;;		_I2C_SlaveWrColCallBack
  4348 ;; This function is called by:
  4349 ;;		_I2C_Open
  4350 ;;		_INTERRUPT_InterruptManager
  4351 ;; This function uses a non-reentrant model
  4352 ;;
  4353                           
  4354                           	psect	text38
  4355  001EEC                     __ptext38:
  4356                           	opt callstack 0
  4357  001EEC                     _I2C_Isr:
  4358                           	opt callstack 17
  4359  001EEC                     
  4360                           ;mcc_generated_files/i2c_slave.c: 158:     I2C_SlaveClearIrq();
  4361  001EEC  EC4C  F014         	call	_I2C_SlaveClearIrq	;wreg free
  4362  001EF0                     
  4363                           ;mcc_generated_files/i2c_slave.c: 161:     i2cRdData = I2C_SlaveGetRxData();
  4364  001EF0  EC4A  F014         	call	_I2C_SlaveGetRxData	;wreg free
  4365  001EF4  0100               	movlb	0	; () banked
  4366  001EF6  6FE8               	movwf	_i2cRdData& (0+255),b	;volatile
  4367  001EF8                     
  4368                           ; BSR set to: 0
  4369                           ;mcc_generated_files/i2c_slave.c: 163:     if(I2C_SlaveIsRead())
  4370  001EF8  ECBD  F013         	call	_I2C_SlaveIsRead	;wreg free
  4371  001EFC  0900               	iorlw	0
  4372  001EFE  B4D8               	btfsc	status,2,c
  4373  001F00  EF84  F00F         	goto	i2u229_41
  4374  001F04  EF86  F00F         	goto	i2u229_40
  4375  001F08                     i2u229_41:
  4376  001F08  EF8A  F00F         	goto	i2l2886
  4377  001F0C                     i2u229_40:
  4378  001F0C                     
  4379                           ;mcc_generated_files/i2c_slave.c: 164:     {;mcc_generated_files/i2c_slave.c: 165:      
      +                             i2cState = I2C_TX;
  4380  001F0C  0E01               	movlw	1
  4381  001F0E  6E5E               	movwf	_i2cState^0,c	;volatile
  4382                           
  4383                           ;mcc_generated_files/i2c_slave.c: 166:     }
  4384  001F10  EFC0  F00F         	goto	i2l2910
  4385  001F14                     i2l2886:
  4386                           
  4387                           ;mcc_generated_files/i2c_slave.c: 168:     {;mcc_generated_files/i2c_slave.c: 169:      
      +                             i2cState = I2C_RX;
  4388  001F14  0E02               	movlw	2
  4389  001F16  6E5E               	movwf	_i2cState^0,c	;volatile
  4390  001F18  EFC0  F00F         	goto	i2l2910
  4391  001F1C                     i2l2888:
  4392                           
  4393                           ;mcc_generated_files/i2c_slave.c: 175:             if(!I2C_SlaveIsWriteCollision())
  4394  001F1C  ECA9  F013         	call	_I2C_SlaveIsWriteCollision	;wreg free
  4395  001F20  0900               	iorlw	0
  4396  001F22  A4D8               	btfss	status,2,c
  4397  001F24  EF96  F00F         	goto	i2u230_41
  4398  001F28  EF98  F00F         	goto	i2u230_40
  4399  001F2C                     i2u230_41:
  4400  001F2C  EF9C  F00F         	goto	i2l2892
  4401  001F30                     i2u230_40:
  4402  001F30                     
  4403                           ;mcc_generated_files/i2c_slave.c: 176:             {;mcc_generated_files/i2c_slave.c: 17
      +                          7:                 I2C_SlaveWrCallBack();
  4404  001F30  ECD1  F012         	call	_I2C_SlaveWrCallBack	;wreg free
  4405                           
  4406                           ;mcc_generated_files/i2c_slave.c: 178:             }
  4407  001F34  EFA0  F00F         	goto	i2l2896
  4408  001F38                     i2l2892:
  4409                           
  4410                           ;mcc_generated_files/i2c_slave.c: 180:             {;mcc_generated_files/i2c_slave.c: 18
      +                          1:                 I2C_SlaveWrColCallBack();
  4411  001F38  ECB9  F012         	call	_I2C_SlaveWrColCallBack	;wreg free
  4412  001F3C                     
  4413                           ;mcc_generated_files/i2c_slave.c: 182:                 I2C_SlaveRestart();
  4414  001F3C  EC46  F014         	call	_I2C_SlaveRestart	;wreg free
  4415  001F40                     i2l2896:
  4416                           
  4417                           ;mcc_generated_files/i2c_slave.c: 184:             i2cNextState = I2C_ADDR;
  4418  001F40  0E00               	movlw	0
  4419  001F42  6E5D               	movwf	_i2cNextState^0,c	;volatile
  4420                           
  4421                           ;mcc_generated_files/i2c_slave.c: 185:             break;
  4422  001F44  EFD5  F00F         	goto	i2l338
  4423  001F48                     i2l2898:
  4424                           
  4425                           ;mcc_generated_files/i2c_slave.c: 188:             if (I2C_SlaveIsData())
  4426  001F48  ECC7  F013         	call	_I2C_SlaveIsData	;wreg free
  4427  001F4C  0900               	iorlw	0
  4428  001F4E  B4D8               	btfsc	status,2,c
  4429  001F50  EFAC  F00F         	goto	i2u231_41
  4430  001F54  EFAE  F00F         	goto	i2u231_40
  4431  001F58                     i2u231_41:
  4432  001F58  EFBC  F00F         	goto	i2l2904
  4433  001F5C                     i2u231_40:
  4434  001F5C                     
  4435                           ;mcc_generated_files/i2c_slave.c: 189:             {;mcc_generated_files/i2c_slave.c: 19
      +                          0:                 if(I2C_SlaveIsRxBufFull())
  4436  001F5C  ECB3  F013         	call	_I2C_SlaveIsRxBufFull	;wreg free
  4437  001F60  0900               	iorlw	0
  4438  001F62  B4D8               	btfsc	status,2,c
  4439  001F64  EFB6  F00F         	goto	i2u232_41
  4440  001F68  EFB8  F00F         	goto	i2u232_40
  4441  001F6C                     i2u232_41:
  4442  001F6C  EFD5  F00F         	goto	i2l338
  4443  001F70                     i2u232_40:
  4444  001F70                     
  4445                           ;mcc_generated_files/i2c_slave.c: 191:                 {;mcc_generated_files/i2c_slave.c
      +                          : 192:                     I2C_SlaveRdCallBack();
  4446  001F70  ECE9  F012         	call	_I2C_SlaveRdCallBack	;wreg free
  4447  001F74  EFD5  F00F         	goto	i2l338
  4448  001F78                     i2l2904:
  4449                           
  4450                           ;mcc_generated_files/i2c_slave.c: 196:             {;mcc_generated_files/i2c_slave.c: 19
      +                          7:                 I2C_SlaveAddrCallBack();
  4451  001F78  EC01  F013         	call	_I2C_SlaveAddrCallBack	;wreg free
  4452  001F7C  EFA0  F00F         	goto	i2l2896
  4453  001F80                     i2l2910:
  4454  001F80  505E               	movf	_i2cState^0,w,c	;volatile
  4455  001F82  6E02               	movwf	??_I2C_Isr^0,c
  4456  001F84  6A03               	clrf	(??_I2C_Isr+1)^0,c
  4457                           
  4458                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4459                           ; Switch size 1, requested type "simple"
  4460                           ; Number of cases is 1, Range of values is 0 to 0
  4461                           ; switch strategies available:
  4462                           ; Name         Instructions Cycles
  4463                           ; simple_byte            4     3 (average)
  4464                           ;	Chosen strategy is simple_byte
  4465  001F86  5003               	movf	(??_I2C_Isr+1)^0,w,c
  4466  001F88  0A00               	xorlw	0	; case 0
  4467  001F8A  B4D8               	btfsc	status,2,c
  4468  001F8C  EFCA  F00F         	goto	i2l2986
  4469  001F90  EFD5  F00F         	goto	i2l338
  4470  001F94                     i2l2986:
  4471                           
  4472                           ; Switch size 1, requested type "simple"
  4473                           ; Number of cases is 2, Range of values is 1 to 2
  4474                           ; switch strategies available:
  4475                           ; Name         Instructions Cycles
  4476                           ; simple_byte            7     4 (average)
  4477                           ;	Chosen strategy is simple_byte
  4478  001F94  5002               	movf	??_I2C_Isr^0,w,c
  4479  001F96  0A01               	xorlw	1	; case 1
  4480  001F98  B4D8               	btfsc	status,2,c
  4481  001F9A  EF8E  F00F         	goto	i2l2888
  4482  001F9E  0A03               	xorlw	3	; case 2
  4483  001FA0  B4D8               	btfsc	status,2,c
  4484  001FA2  EFA4  F00F         	goto	i2l2898
  4485  001FA6  EFD5  F00F         	goto	i2l338
  4486  001FAA                     i2l338:
  4487                           
  4488                           ;mcc_generated_files/i2c_slave.c: 204:     i2cState = i2cNextState;
  4489  001FAA  C05D  F05E         	movff	_i2cNextState,_i2cState	;volatile
  4490  001FAE                     
  4491                           ;mcc_generated_files/i2c_slave.c: 205:     I2C_SlaveReleaseClock();
  4492  001FAE  EC48  F014         	call	_I2C_SlaveReleaseClock	;wreg free
  4493  001FB2  0012               	return		;funcret
  4494  001FB4                     __end_of_I2C_Isr:
  4495                           	opt callstack 0
  4496                           
  4497 ;; *************** function _myInt *****************
  4498 ;; Defined at:
  4499 ;;		line 78 in file "main.c"
  4500 ;; Parameters:    Size  Location     Type
  4501 ;;		None
  4502 ;; Auto vars:     Size  Location     Type
  4503 ;;		None
  4504 ;; Return value:  Size  Location     Type
  4505 ;;                  1    wreg      void 
  4506 ;; Registers used:
  4507 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4508 ;; Tracked objects:
  4509 ;;		On entry : 0/0
  4510 ;;		On exit  : 0/0
  4511 ;;		Unchanged: 0/0
  4512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4517 ;;Total ram usage:        0 bytes
  4518 ;; Hardware stack levels used:    1
  4519 ;; Hardware stack levels required when called:    9
  4520 ;; This function calls:
  4521 ;;		_I2C_Read
  4522 ;;		_I2C_Write
  4523 ;;		i2_printf
  4524 ;; This function is called by:
  4525 ;;		_main
  4526 ;;		_INTERRUPT_InterruptManager
  4527 ;; This function uses a non-reentrant model
  4528 ;;
  4529                           
  4530                           	psect	text39
  4531  002322                     __ptext39:
  4532                           	opt callstack 0
  4533  002322                     _myInt:
  4534                           	opt callstack 11
  4535  002322                     
  4536                           ;main.c: 80:     printf("datout = %d");
  4537  002322  0E01               	movlw	low STR_2
  4538  002324  6E5A               	movwf	i2printf@fmt^0,c
  4539  002326  0E0F               	movlw	high STR_2
  4540  002328  6E5B               	movwf	(i2printf@fmt+1)^0,c
  4541  00232A  EC57  F013         	call	i2_printf	;wreg free
  4542  00232E                     
  4543                           ;main.c: 81:         if (I2C_Read() == 0x00)
  4544  00232E  EC3F  F014         	call	_I2C_Read	;wreg free
  4545  002332  0900               	iorlw	0
  4546  002334  A4D8               	btfss	status,2,c
  4547  002336  EF9F  F011         	goto	i2u233_41
  4548  00233A  EFA1  F011         	goto	i2u233_40
  4549  00233E                     i2u233_41:
  4550  00233E  EFB6  F011         	goto	i2l506
  4551  002342                     i2u233_40:
  4552  002342                     
  4553                           ;main.c: 82:         {;main.c: 83:            if (I2C_Read() == 0x01)
  4554  002342  EC3F  F014         	call	_I2C_Read	;wreg free
  4555  002346  06E8               	decf	wreg,f,c
  4556  002348  A4D8               	btfss	status,2,c
  4557  00234A  EFA9  F011         	goto	i2u234_41
  4558  00234E  EFAB  F011         	goto	i2u234_40
  4559  002352                     i2u234_41:
  4560  002352  EFB6  F011         	goto	i2l506
  4561  002356                     i2u234_40:
  4562  002356                     
  4563                           ;main.c: 84:            {;main.c: 85:                 I2C_Write(0x05);
  4564  002356  0E05               	movlw	5
  4565  002358  EC25  F014         	call	_I2C_Write
  4566                           
  4567                           ;main.c: 86:                 I2C_Write(data);
  4568  00235C  0100               	movlb	0	; () banked
  4569  00235E  51CD               	movf	_data& (0+255),w,b
  4570  002360  EC25  F014         	call	_I2C_Write
  4571                           
  4572                           ;main.c: 87:                 I2C_Write(data);
  4573  002364  0100               	movlb	0	; () banked
  4574  002366  51CD               	movf	_data& (0+255),w,b
  4575  002368  EC25  F014         	call	_I2C_Write
  4576  00236C                     i2l506:
  4577  00236C  0012               	return		;funcret
  4578  00236E                     __end_of_myInt:
  4579                           	opt callstack 0
  4580                           
  4581 ;; *************** function i2_printf *****************
  4582 ;; Defined at:
  4583 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  4586 ;;		 -> STR_2(12), STR_1(3), 
  4587 ;; Auto vars:     Size  Location     Type
  4588 ;;  printf          2    2[BANK0 ] PTR void [1]
  4589 ;;		 -> ?i2_printf(2), ?_printf(2), 
  4590 ;;  printf          2    0        int 
  4591 ;; Return value:  Size  Location     Type
  4592 ;;                  2   89[COMRAM] int 
  4593 ;; Registers used:
  4594 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4595 ;; Tracked objects:
  4596 ;;		On entry : 0/0
  4597 ;;		On exit  : 0/0
  4598 ;;		Unchanged: 0/0
  4599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4600 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4601 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4603 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4604 ;;Total ram usage:        6 bytes
  4605 ;; Hardware stack levels used:    1
  4606 ;; Hardware stack levels required when called:    8
  4607 ;; This function calls:
  4608 ;;		i2_vfprintf
  4609 ;; This function is called by:
  4610 ;;		_myInt
  4611 ;; This function uses a non-reentrant model
  4612 ;;
  4613                           
  4614                           	psect	text40
  4615  0026AE                     __ptext40:
  4616                           	opt callstack 0
  4617  0026AE                     i2_printf:
  4618                           	opt callstack 11
  4619  0026AE  0E5C               	movlw	low (?i2_printf+2)
  4620  0026B0  0100               	movlb	0	; () banked
  4621  0026B2  6F62               	movwf	i2printf@ap& (0+255),b
  4622  0026B4  0E00               	movlw	high (?i2_printf+2)
  4623  0026B6  6F63               	movwf	(i2printf@ap+1)& (0+255),b
  4624  0026B8                     
  4625                           ; BSR set to: 0
  4626  0026B8  0E00               	movlw	0
  4627  0026BA  6E52               	movwf	i2vfprintf@fp^0,c
  4628  0026BC  0E00               	movlw	0
  4629  0026BE  6E53               	movwf	(i2vfprintf@fp+1)^0,c
  4630  0026C0  C05A  F054         	movff	i2printf@fmt,i2vfprintf@fmt
  4631  0026C4  C05B  F055         	movff	i2printf@fmt+1,i2vfprintf@fmt+1
  4632  0026C8  0E62               	movlw	low i2printf@ap
  4633  0026CA  6E56               	movwf	i2vfprintf@ap^0,c
  4634  0026CC  0E00               	movlw	high i2printf@ap
  4635  0026CE  6E57               	movwf	(i2vfprintf@ap+1)^0,c
  4636  0026D0  EC3A  F011         	call	i2_vfprintf	;wreg free
  4637  0026D4  0012               	return		;funcret
  4638  0026D6                     __end_ofi2_printf:
  4639                           	opt callstack 0
  4640                           
  4641 ;; *************** function i2_vfprintf *****************
  4642 ;; Defined at:
  4643 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4644 ;; Parameters:    Size  Location     Type
  4645 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
  4646 ;;		 -> NULL(0), 
  4647 ;;  fmt             2   83[COMRAM] PTR const unsigned char 
  4648 ;;		 -> STR_2(12), STR_1(3), 
  4649 ;;  ap              2   85[COMRAM] PTR PTR void 
  4650 ;;		 -> i2printf@ap(2), printf@ap(2), 
  4651 ;; Auto vars:     Size  Location     Type
  4652 ;;  vfprintf        2   87[COMRAM] PTR unsigned char 
  4653 ;;		 -> STR_2(12), STR_1(3), 
  4654 ;; Return value:  Size  Location     Type
  4655 ;;                  2   81[COMRAM] int 
  4656 ;; Registers used:
  4657 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4658 ;; Tracked objects:
  4659 ;;		On entry : 0/0
  4660 ;;		On exit  : 0/0
  4661 ;;		Unchanged: 0/0
  4662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4663 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4664 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4666 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4667 ;;Total ram usage:        8 bytes
  4668 ;; Hardware stack levels used:    1
  4669 ;; Hardware stack levels required when called:    7
  4670 ;; This function calls:
  4671 ;;		i2_vfpfcnvrt
  4672 ;; This function is called by:
  4673 ;;		i2_printf
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677                           	psect	text41
  4678  002274                     __ptext41:
  4679                           	opt callstack 0
  4680  002274                     i2_vfprintf:
  4681                           	opt callstack 11
  4682  002274                     
  4683                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4684  002274  C054  F058         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
  4685  002278  C055  F059         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
  4686  00227C                     
  4687                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  4688  00227C  0E00               	movlw	0
  4689  00227E  0100               	movlb	0	; () banked
  4690  002280  6FD2               	movwf	(_nout+1)& (0+255),b
  4691  002282  0E00               	movlw	0
  4692  002284  6FD1               	movwf	_nout& (0+255),b
  4693                           
  4694                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4695  002286  EF58  F011         	goto	i2l2714
  4696  00228A                     i2l2712:
  4697                           
  4698                           ; BSR set to: 0
  4699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  4700  00228A  C052  F042         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
  4701  00228E  C053  F043         	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
  4702  002292  0E58               	movlw	low i2vfprintf@cfmt
  4703  002294  6E44               	movwf	i2vfpfcnvrt@fmt^0,c
  4704  002296  0E00               	movlw	high i2vfprintf@cfmt
  4705  002298  6E45               	movwf	(i2vfpfcnvrt@fmt+1)^0,c
  4706  00229A  C056  F046         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
  4707  00229E  C057  F047         	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
  4708  0022A2  EC49  F00B         	call	i2_vfpfcnvrt	;wreg free
  4709  0022A6  5042               	movf	?i2_vfpfcnvrt^0,w,c
  4710  0022A8  0100               	movlb	0	; () banked
  4711  0022AA  27D1               	addwf	_nout& (0+255),f,b
  4712  0022AC  5043               	movf	(?i2_vfpfcnvrt+1)^0,w,c
  4713  0022AE  23D2               	addwfc	(_nout+1)& (0+255),f,b
  4714  0022B0                     i2l2714:
  4715                           
  4716                           ; BSR set to: 0
  4717                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4718  0022B0  C058  FFF6         	movff	i2vfprintf@cfmt,tblptrl
  4719  0022B4  C059  FFF7         	movff	i2vfprintf@cfmt+1,tblptrh
  4720  0022B8                     	if	0	;tblptru may be non-zero
  4721  0022B8                     	endif
  4722  0022B8                     	if	0	;tblptru may be non-zero
  4723  0022B8                     	endif
  4724  0022B8  0008               	tblrd		*
  4725  0022BA  50F5               	movf	tablat,w,c
  4726  0022BC  0900               	iorlw	0
  4727  0022BE  A4D8               	btfss	status,2,c
  4728  0022C0  EF64  F011         	goto	i2u211_41
  4729  0022C4  EF66  F011         	goto	i2u211_40
  4730  0022C8                     i2u211_41:
  4731  0022C8  EF45  F011         	goto	i2l2712
  4732  0022CC                     i2u211_40:
  4733  0022CC                     
  4734                           ; BSR set to: 0
  4735                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  4736  0022CC  C0D1  F052         	movff	_nout,?i2_vfprintf
  4737  0022D0  C0D2  F053         	movff	_nout+1,?i2_vfprintf+1
  4738  0022D4                     
  4739                           ; BSR set to: 0
  4740  0022D4  0012               	return		;funcret
  4741  0022D6                     __end_ofi2_vfprintf:
  4742                           	opt callstack 0
  4743                           
  4744 ;; *************** function i2_vfpfcnvrt *****************
  4745 ;; Defined at:
  4746 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4747 ;; Parameters:    Size  Location     Type
  4748 ;;  fp              2   65[COMRAM] PTR struct _IO_FILE
  4749 ;;		 -> NULL(0), 
  4750 ;;  fmt             2   67[COMRAM] PTR PTR unsigned char 
  4751 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
  4752 ;;  ap              2   69[COMRAM] PTR PTR void 
  4753 ;;		 -> i2printf@ap(2), printf@ap(2), 
  4754 ;; Auto vars:     Size  Location     Type
  4755 ;;  vfpfcnvrt       8   73[COMRAM] long long 
  4756 ;;  vfpfcnvrt       8    0        unsigned long long 
  4757 ;;  vfpfcnvrt       4    0        unsigned long long 
  4758 ;;  vfpfcnvrt       3    0        PTR void 
  4759 ;;  vfpfcnvrt       3    0        unsigned char [3]
  4760 ;;  vfpfcnvrt       3    0        PTR unsigned char 
  4761 ;;  vfpfcnvrt       2    0        int 
  4762 ;;  vfpfcnvrt       2    0        int 
  4763 ;;  vfpfcnvrt       1    0        unsigned char 
  4764 ;; Return value:  Size  Location     Type
  4765 ;;                  2   65[COMRAM] int 
  4766 ;; Registers used:
  4767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4768 ;; Tracked objects:
  4769 ;;		On entry : 0/0
  4770 ;;		On exit  : 0/0
  4771 ;;		Unchanged: 0/0
  4772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4773 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4774 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4775 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4776 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4777 ;;Total ram usage:       16 bytes
  4778 ;; Hardware stack levels used:    1
  4779 ;; Hardware stack levels required when called:    6
  4780 ;; This function calls:
  4781 ;;		i2_dtoa
  4782 ;;		i2_fputc
  4783 ;; This function is called by:
  4784 ;;		i2_vfprintf
  4785 ;; This function uses a non-reentrant model
  4786 ;;
  4787                           
  4788                           	psect	text42
  4789  001692                     __ptext42:
  4790                           	opt callstack 0
  4791  001692                     i2_vfpfcnvrt:
  4792                           	opt callstack 11
  4793  001692                     
  4794                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4795  001692  C044  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4796  001696  C045  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4797  00169A  CFDE FFF6          	movff	postinc2,tblptrl
  4798  00169E  CFDD FFF7          	movff	postdec2,tblptrh
  4799  0016A2                     	if	0	;tblptru may be non-zero
  4800  0016A2                     	endif
  4801  0016A2                     	if	0	;tblptru may be non-zero
  4802  0016A2                     	endif
  4803  0016A2  0008               	tblrd		*
  4804  0016A4  50F5               	movf	tablat,w,c
  4805  0016A6  0A25               	xorlw	37
  4806  0016A8  A4D8               	btfss	status,2,c
  4807  0016AA  EF59  F00B         	goto	i2u203_41
  4808  0016AE  EF5B  F00B         	goto	i2u203_40
  4809  0016B2                     i2u203_41:
  4810  0016B2  EF07  F00C         	goto	i2l2646
  4811  0016B6                     i2u203_40:
  4812  0016B6                     
  4813                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  4814  0016B6  C044  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4815  0016BA  C045  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4816  0016BE  2ADE               	incf	postinc2,f,c
  4817  0016C0  0E00               	movlw	0
  4818  0016C2  22DD               	addwfc	postdec2,f,c
  4819  0016C4                     
  4820                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  4821  0016C4  0E00               	movlw	0
  4822  0016C6  0100               	movlb	0	; () banked
  4823  0016C8  6FD4               	movwf	(_width+1)& (0+255),b
  4824  0016CA  0E00               	movlw	0
  4825  0016CC  6FD3               	movwf	_width& (0+255),b
  4826  0016CE  C0D3  F0D7         	movff	_width,_flags
  4827  0016D2  C0D4  F0D8         	movff	_width+1,_flags+1
  4828  0016D6                     
  4829                           ; BSR set to: 0
  4830                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  4831  0016D6  69D5               	setf	_prec& (0+255),b
  4832  0016D8  69D6               	setf	(_prec+1)& (0+255),b
  4833  0016DA                     
  4834                           ; BSR set to: 0
  4835                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4836  0016DA  C044  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4837  0016DE  C045  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4838  0016E2  CFDE FFF6          	movff	postinc2,tblptrl
  4839  0016E6  CFDD FFF7          	movff	postdec2,tblptrh
  4840  0016EA                     	if	0	;tblptru may be non-zero
  4841  0016EA                     	endif
  4842  0016EA                     	if	0	;tblptru may be non-zero
  4843  0016EA                     	endif
  4844  0016EA  0008               	tblrd		*
  4845  0016EC  50F5               	movf	tablat,w,c
  4846  0016EE  0A64               	xorlw	100
  4847  0016F0  B4D8               	btfsc	status,2,c
  4848  0016F2  EF7D  F00B         	goto	i2u204_41
  4849  0016F6  EF7F  F00B         	goto	i2u204_40
  4850  0016FA                     i2u204_41:
  4851  0016FA  EF91  F00B         	goto	i2l2624
  4852  0016FE                     i2u204_40:
  4853  0016FE                     
  4854                           ; BSR set to: 0
  4855  0016FE  C044  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4856  001702  C045  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4857  001706  CFDE FFF6          	movff	postinc2,tblptrl
  4858  00170A  CFDD FFF7          	movff	postdec2,tblptrh
  4859  00170E                     	if	0	;tblptru may be non-zero
  4860  00170E                     	endif
  4861  00170E                     	if	0	;tblptru may be non-zero
  4862  00170E                     	endif
  4863  00170E  0008               	tblrd		*
  4864  001710  50F5               	movf	tablat,w,c
  4865  001712  0A69               	xorlw	105
  4866  001714  A4D8               	btfss	status,2,c
  4867  001716  EF8F  F00B         	goto	i2u205_41
  4868  00171A  EF91  F00B         	goto	i2u205_40
  4869  00171E                     i2u205_41:
  4870  00171E  EFD1  F00B         	goto	i2l2630
  4871  001722                     i2u205_40:
  4872  001722                     i2l2624:
  4873                           
  4874                           ; BSR set to: 0
  4875                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  4876  001722  C044  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4877  001726  C045  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4878  00172A  2ADE               	incf	postinc2,f,c
  4879  00172C  0E00               	movlw	0
  4880  00172E  22DD               	addwfc	postdec2,f,c
  4881                           
  4882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4883  001730  C046  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  4884  001734  C047  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  4885  001738  CFDF F048          	movff	indf2,??i2_vfpfcnvrt
  4886  00173C  0E02               	movlw	2
  4887  00173E  26DE               	addwf	postinc2,f,c
  4888  001740  CFDF F049          	movff	indf2,??i2_vfpfcnvrt+1
  4889  001744  0E00               	movlw	0
  4890  001746  22DD               	addwfc	postdec2,f,c
  4891  001748  C048  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  4892  00174C  C049  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  4893  001750  CFDE F04A          	movff	postinc2,i2vfpfcnvrt@ll
  4894  001754  CFDD F04B          	movff	postdec2,i2vfpfcnvrt@ll+1
  4895  001758  0E00               	movlw	0
  4896  00175A  BE4B               	btfsc	(i2vfpfcnvrt@ll+1)^0,7,c
  4897  00175C  0EFF               	movlw	-1
  4898  00175E  6E4C               	movwf	(i2vfpfcnvrt@ll+2)^0,c
  4899  001760  6E4D               	movwf	(i2vfpfcnvrt@ll+3)^0,c
  4900  001762  6E4E               	movwf	(i2vfpfcnvrt@ll+4)^0,c
  4901  001764  6E4F               	movwf	(i2vfpfcnvrt@ll+5)^0,c
  4902  001766  6E50               	movwf	(i2vfpfcnvrt@ll+6)^0,c
  4903  001768  6E51               	movwf	(i2vfpfcnvrt@ll+7)^0,c
  4904  00176A                     
  4905                           ; BSR set to: 0
  4906                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  4907  00176A  C042  F01E         	movff	i2vfpfcnvrt@fp,i2dtoa@fp
  4908  00176E  C043  F01F         	movff	i2vfpfcnvrt@fp+1,i2dtoa@fp+1
  4909  001772  C04A  F020         	movff	i2vfpfcnvrt@ll,i2dtoa@d
  4910  001776  C04B  F021         	movff	i2vfpfcnvrt@ll+1,i2dtoa@d+1
  4911  00177A  C04C  F022         	movff	i2vfpfcnvrt@ll+2,i2dtoa@d+2
  4912  00177E  C04D  F023         	movff	i2vfpfcnvrt@ll+3,i2dtoa@d+3
  4913  001782  C04E  F024         	movff	i2vfpfcnvrt@ll+4,i2dtoa@d+4
  4914  001786  C04F  F025         	movff	i2vfpfcnvrt@ll+5,i2dtoa@d+5
  4915  00178A  C050  F026         	movff	i2vfpfcnvrt@ll+6,i2dtoa@d+6
  4916  00178E  C051  F027         	movff	i2vfpfcnvrt@ll+7,i2dtoa@d+7
  4917  001792  ECFB  F008         	call	i2_dtoa	;wreg free
  4918  001796  C01E  F042         	movff	?i2_dtoa,?i2_vfpfcnvrt
  4919  00179A  C01F  F043         	movff	?i2_dtoa+1,?i2_vfpfcnvrt+1
  4920  00179E  EF22  F00C         	goto	i2l609
  4921  0017A2                     i2l2630:
  4922                           
  4923                           ; BSR set to: 0
  4924                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  4925  0017A2  C044  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4926  0017A6  C045  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4927  0017AA  CFDE FFF6          	movff	postinc2,tblptrl
  4928  0017AE  CFDD FFF7          	movff	postdec2,tblptrh
  4929  0017B2                     	if	0	;tblptru may be non-zero
  4930  0017B2                     	endif
  4931  0017B2                     	if	0	;tblptru may be non-zero
  4932  0017B2                     	endif
  4933  0017B2  0008               	tblrd		*
  4934  0017B4  50F5               	movf	tablat,w,c
  4935  0017B6  0A25               	xorlw	37
  4936  0017B8  A4D8               	btfss	status,2,c
  4937  0017BA  EFE1  F00B         	goto	i2u206_41
  4938  0017BE  EFE3  F00B         	goto	i2u206_40
  4939  0017C2                     i2u206_41:
  4940  0017C2  EFFA  F00B         	goto	i2l2640
  4941  0017C6                     i2u206_40:
  4942  0017C6                     
  4943                           ; BSR set to: 0
  4944                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  4945  0017C6  C044  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4946  0017CA  C045  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4947  0017CE  2ADE               	incf	postinc2,f,c
  4948  0017D0  0E00               	movlw	0
  4949  0017D2  22DD               	addwfc	postdec2,f,c
  4950  0017D4                     
  4951                           ; BSR set to: 0
  4952                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  4953  0017D4  0E00               	movlw	0
  4954  0017D6  6E04               	movwf	(i2fputc@c+1)^0,c
  4955  0017D8  0E25               	movlw	37
  4956  0017DA  6E03               	movwf	i2fputc@c^0,c
  4957  0017DC  C042  F005         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  4958  0017E0  C043  F006         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  4959  0017E4  EC89  F010         	call	i2_fputc	;wreg free
  4960  0017E8                     i2l2636:
  4961                           
  4962                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  4963  0017E8  0E00               	movlw	0
  4964  0017EA  6E43               	movwf	(?i2_vfpfcnvrt+1)^0,c
  4965  0017EC  0E01               	movlw	1
  4966  0017EE  6E42               	movwf	?i2_vfpfcnvrt^0,c
  4967  0017F0  EF22  F00C         	goto	i2l609
  4968  0017F4                     i2l2640:
  4969                           
  4970                           ; BSR set to: 0
  4971                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  4972  0017F4  C044  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4973  0017F8  C045  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4974  0017FC  2ADE               	incf	postinc2,f,c
  4975  0017FE  0E00               	movlw	0
  4976  001800  22DD               	addwfc	postdec2,f,c
  4977  001802                     
  4978                           ; BSR set to: 0
  4979                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  4980  001802  0E00               	movlw	0
  4981  001804  6E43               	movwf	(?i2_vfpfcnvrt+1)^0,c
  4982  001806  0E00               	movlw	0
  4983  001808  6E42               	movwf	?i2_vfpfcnvrt^0,c
  4984  00180A  EF22  F00C         	goto	i2l609
  4985  00180E                     i2l2646:
  4986                           
  4987                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  4988  00180E  C044  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  4989  001812  C045  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  4990  001816  CFDE FFF6          	movff	postinc2,tblptrl
  4991  00181A  CFDD FFF7          	movff	postdec2,tblptrh
  4992  00181E                     	if	0	;tblptru may be non-zero
  4993  00181E                     	endif
  4994  00181E                     	if	0	;tblptru may be non-zero
  4995  00181E                     	endif
  4996  00181E  0008               	tblrd		*
  4997  001820  50F5               	movf	tablat,w,c
  4998  001822  6E03               	movwf	i2fputc@c^0,c
  4999  001824  6A04               	clrf	(i2fputc@c+1)^0,c
  5000  001826  C042  F005         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  5001  00182A  C043  F006         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  5002  00182E  EC89  F010         	call	i2_fputc	;wreg free
  5003  001832                     
  5004                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  5005  001832  C044  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5006  001836  C045  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5007  00183A  2ADE               	incf	postinc2,f,c
  5008  00183C  0E00               	movlw	0
  5009  00183E  22DD               	addwfc	postdec2,f,c
  5010  001840  EFF4  F00B         	goto	i2l2636
  5011  001844                     i2l609:
  5012  001844  0012               	return		;funcret
  5013  001846                     __end_ofi2_vfpfcnvrt:
  5014                           	opt callstack 0
  5015                           
  5016 ;; *************** function i2_dtoa *****************
  5017 ;; Defined at:
  5018 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5019 ;; Parameters:    Size  Location     Type
  5020 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  5021 ;;		 -> NULL(0), 
  5022 ;;  d               8   31[COMRAM] long long 
  5023 ;; Auto vars:     Size  Location     Type
  5024 ;;  dtoa            8   55[COMRAM] long long 
  5025 ;;  dtoa            2   63[COMRAM] int 
  5026 ;;  dtoa            2   53[COMRAM] int 
  5027 ;;  dtoa            2   51[COMRAM] int 
  5028 ;;  dtoa            2   49[COMRAM] int 
  5029 ;; Return value:  Size  Location     Type
  5030 ;;                  2   29[COMRAM] int 
  5031 ;; Registers used:
  5032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5033 ;; Tracked objects:
  5034 ;;		On entry : 0/0
  5035 ;;		On exit  : 0/0
  5036 ;;		Unchanged: 0/0
  5037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5038 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5039 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5040 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5041 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5042 ;;Total ram usage:       36 bytes
  5043 ;; Hardware stack levels used:    1
  5044 ;; Hardware stack levels required when called:    5
  5045 ;; This function calls:
  5046 ;;		i2___aodiv
  5047 ;;		i2___aomod
  5048 ;;		i2_abs
  5049 ;;		i2_pad
  5050 ;; This function is called by:
  5051 ;;		i2_vfpfcnvrt
  5052 ;; This function uses a non-reentrant model
  5053 ;;
  5054                           
  5055                           	psect	text43
  5056  0011F6                     __ptext43:
  5057                           	opt callstack 0
  5058  0011F6                     i2_dtoa:
  5059                           	opt callstack 11
  5060  0011F6                     
  5061                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  5062  0011F6  C020  F038         	movff	i2dtoa@d,i2dtoa@n
  5063  0011FA  C021  F039         	movff	i2dtoa@d+1,i2dtoa@n+1
  5064  0011FE  C022  F03A         	movff	i2dtoa@d+2,i2dtoa@n+2
  5065  001202  C023  F03B         	movff	i2dtoa@d+3,i2dtoa@n+3
  5066  001206  C024  F03C         	movff	i2dtoa@d+4,i2dtoa@n+4
  5067  00120A  C025  F03D         	movff	i2dtoa@d+5,i2dtoa@n+5
  5068  00120E  C026  F03E         	movff	i2dtoa@d+6,i2dtoa@n+6
  5069  001212  C027  F03F         	movff	i2dtoa@d+7,i2dtoa@n+7
  5070  001216                     
  5071                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  5072  001216  BE3F               	btfsc	(i2dtoa@n+7)^0,7,c
  5073  001218  EF10  F009         	goto	i2u173_41
  5074  00121C  EF13  F009         	goto	i2u173_40
  5075  001220                     i2u173_41:
  5076  001220  0E01               	movlw	1
  5077  001222  EF14  F009         	goto	i2u174_40
  5078  001226                     i2u173_40:
  5079  001226  0E00               	movlw	0
  5080  001228                     i2u174_40:
  5081  001228  6E36               	movwf	i2dtoa@s^0,c
  5082  00122A  6A37               	clrf	(i2dtoa@s+1)^0,c
  5083                           
  5084                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  5085  00122C  5036               	movf	i2dtoa@s^0,w,c
  5086  00122E  1037               	iorwf	(i2dtoa@s+1)^0,w,c
  5087  001230  B4D8               	btfsc	status,2,c
  5088  001232  EF1D  F009         	goto	i2u175_41
  5089  001236  EF1F  F009         	goto	i2u175_40
  5090  00123A                     i2u175_41:
  5091  00123A  EF2F  F009         	goto	i2l2484
  5092  00123E                     i2u175_40:
  5093  00123E                     
  5094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  5095  00123E  1E3F               	comf	(i2dtoa@n+7)^0,f,c
  5096  001240  1E3E               	comf	(i2dtoa@n+6)^0,f,c
  5097  001242  1E3D               	comf	(i2dtoa@n+5)^0,f,c
  5098  001244  1E3C               	comf	(i2dtoa@n+4)^0,f,c
  5099  001246  1E3B               	comf	(i2dtoa@n+3)^0,f,c
  5100  001248  1E3A               	comf	(i2dtoa@n+2)^0,f,c
  5101  00124A  1E39               	comf	(i2dtoa@n+1)^0,f,c
  5102  00124C  6C38               	negf	i2dtoa@n^0,c
  5103  00124E  0E00               	movlw	0
  5104  001250  2239               	addwfc	(i2dtoa@n+1)^0,f,c
  5105  001252  223A               	addwfc	(i2dtoa@n+2)^0,f,c
  5106  001254  223B               	addwfc	(i2dtoa@n+3)^0,f,c
  5107  001256  223C               	addwfc	(i2dtoa@n+4)^0,f,c
  5108  001258  223D               	addwfc	(i2dtoa@n+5)^0,f,c
  5109  00125A  223E               	addwfc	(i2dtoa@n+6)^0,f,c
  5110  00125C  223F               	addwfc	(i2dtoa@n+7)^0,f,c
  5111  00125E                     i2l2484:
  5112                           
  5113                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  5114  00125E  0100               	movlb	0	; () banked
  5115  001260  BFD6               	btfsc	(_prec+1)& (0+255),7,b
  5116  001262  EF35  F009         	goto	i2u176_41
  5117  001266  EF37  F009         	goto	i2u176_40
  5118  00126A                     i2u176_41:
  5119  00126A  EF38  F009         	goto	i2l2488
  5120  00126E                     i2u176_40:
  5121  00126E                     
  5122                           ; BSR set to: 0
  5123                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  5124  00126E  93D7               	bcf	_flags& (0+255),1,b
  5125  001270                     i2l2488:
  5126                           
  5127                           ; BSR set to: 0
  5128                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  5129  001270  BFD6               	btfsc	(_prec+1)& (0+255),7,b
  5130  001272  EF45  F009         	goto	i2u177_40
  5131  001276  51D6               	movf	(_prec+1)& (0+255),w,b
  5132  001278  E106               	bnz	i2u177_41
  5133  00127A  05D5               	decf	_prec& (0+255),w,b
  5134  00127C  B0D8               	btfsc	status,0,c
  5135  00127E  EF43  F009         	goto	i2u177_41
  5136  001282  EF45  F009         	goto	i2u177_40
  5137  001286                     i2u177_41:
  5138  001286  EF4B  F009         	goto	i2l582
  5139  00128A                     i2u177_40:
  5140  00128A                     
  5141                           ; BSR set to: 0
  5142  00128A  0E00               	movlw	0
  5143  00128C  6E33               	movwf	(i2dtoa@p+1)^0,c
  5144  00128E  0E01               	movlw	1
  5145  001290  6E32               	movwf	i2dtoa@p^0,c
  5146  001292  EF4F  F009         	goto	i2l584
  5147  001296                     i2l582:
  5148                           
  5149                           ; BSR set to: 0
  5150  001296  C0D5  F032         	movff	_prec,i2dtoa@p
  5151  00129A  C0D6  F033         	movff	_prec+1,i2dtoa@p+1
  5152  00129E                     i2l584:
  5153                           
  5154                           ; BSR set to: 0
  5155                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  5156  00129E  C0D3  F034         	movff	_width,i2dtoa@w
  5157  0012A2  C0D4  F035         	movff	_width+1,i2dtoa@w+1
  5158  0012A6                     
  5159                           ; BSR set to: 0
  5160                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  5161  0012A6  5036               	movf	i2dtoa@s^0,w,c
  5162  0012A8  1037               	iorwf	(i2dtoa@s+1)^0,w,c
  5163  0012AA  A4D8               	btfss	status,2,c
  5164  0012AC  EF5A  F009         	goto	i2u178_41
  5165  0012B0  EF5C  F009         	goto	i2u178_40
  5166  0012B4                     i2u178_41:
  5167  0012B4  EF63  F009         	goto	i2l2496
  5168  0012B8                     i2u178_40:
  5169  0012B8                     
  5170                           ; BSR set to: 0
  5171  0012B8  A5D7               	btfss	_flags& (0+255),2,b
  5172  0012BA  EF61  F009         	goto	i2u179_41
  5173  0012BE  EF63  F009         	goto	i2u179_40
  5174  0012C2                     i2u179_41:
  5175  0012C2  EF66  F009         	goto	i2l2498
  5176  0012C6                     i2u179_40:
  5177  0012C6                     i2l2496:
  5178                           
  5179                           ; BSR set to: 0
  5180                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  5181  0012C6  0634               	decf	i2dtoa@w^0,f,c
  5182  0012C8  A0D8               	btfss	status,0,c
  5183  0012CA  0635               	decf	(i2dtoa@w+1)^0,f,c
  5184  0012CC                     i2l2498:
  5185                           
  5186                           ; BSR set to: 0
  5187                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  5188  0012CC  0E00               	movlw	0
  5189  0012CE  6E41               	movwf	(i2dtoa@i+1)^0,c
  5190  0012D0  0E1F               	movlw	31
  5191  0012D2  6E40               	movwf	i2dtoa@i^0,c
  5192  0012D4                     
  5193                           ; BSR set to: 0
  5194                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  5195  0012D4  0E00               	movlw	0
  5196  0012D6  0101               	movlb	1	; () banked
  5197  0012D8  6F1F               	movwf	(_dbuf+31)& (0+255),b
  5198                           
  5199                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5200  0012DA  EFEB  F009         	goto	i2l2512
  5201  0012DE                     i2l2502:
  5202                           
  5203                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  5204  0012DE  0640               	decf	i2dtoa@i^0,f,c
  5205  0012E0  A0D8               	btfss	status,0,c
  5206  0012E2  0641               	decf	(i2dtoa@i+1)^0,f,c
  5207  0012E4                     
  5208                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  5209  0012E4  0E00               	movlw	low _dbuf
  5210  0012E6  2440               	addwf	i2dtoa@i^0,w,c
  5211  0012E8  6ED9               	movwf	fsr2l,c
  5212  0012EA  0E01               	movlw	high _dbuf
  5213  0012EC  2041               	addwfc	(i2dtoa@i+1)^0,w,c
  5214  0012EE  6EDA               	movwf	fsr2h,c
  5215  0012F0  C038  F001         	movff	i2dtoa@n,i2___aomod@dividend
  5216  0012F4  C039  F002         	movff	i2dtoa@n+1,i2___aomod@dividend+1
  5217  0012F8  C03A  F003         	movff	i2dtoa@n+2,i2___aomod@dividend+2
  5218  0012FC  C03B  F004         	movff	i2dtoa@n+3,i2___aomod@dividend+3
  5219  001300  C03C  F005         	movff	i2dtoa@n+4,i2___aomod@dividend+4
  5220  001304  C03D  F006         	movff	i2dtoa@n+5,i2___aomod@dividend+5
  5221  001308  C03E  F007         	movff	i2dtoa@n+6,i2___aomod@dividend+6
  5222  00130C  C03F  F008         	movff	i2dtoa@n+7,i2___aomod@dividend+7
  5223  001310  0E0A               	movlw	10
  5224  001312  6E09               	movwf	i2___aomod@divisor^0,c
  5225  001314  0E00               	movlw	0
  5226  001316  6E0A               	movwf	(i2___aomod@divisor+1)^0,c
  5227  001318  0E00               	movlw	0
  5228  00131A  6E0B               	movwf	(i2___aomod@divisor+2)^0,c
  5229  00131C  0E00               	movlw	0
  5230  00131E  6E0C               	movwf	(i2___aomod@divisor+3)^0,c
  5231  001320  0E00               	movlw	0
  5232  001322  6E0D               	movwf	(i2___aomod@divisor+4)^0,c
  5233  001324  0E00               	movlw	0
  5234  001326  6E0E               	movwf	(i2___aomod@divisor+5)^0,c
  5235  001328  0E00               	movlw	0
  5236  00132A  6E0F               	movwf	(i2___aomod@divisor+6)^0,c
  5237  00132C  0E00               	movlw	0
  5238  00132E  6E10               	movwf	(i2___aomod@divisor+7)^0,c
  5239  001330  EC5F  F00E         	call	i2___aomod	;wreg free
  5240  001334  C001  F028         	movff	?i2___aomod,??i2_dtoa
  5241  001338  C002  F029         	movff	?i2___aomod+1,??i2_dtoa+1
  5242  00133C  C003  F02A         	movff	?i2___aomod+2,??i2_dtoa+2
  5243  001340  C004  F02B         	movff	?i2___aomod+3,??i2_dtoa+3
  5244  001344  C005  F02C         	movff	?i2___aomod+4,??i2_dtoa+4
  5245  001348  C006  F02D         	movff	?i2___aomod+5,??i2_dtoa+5
  5246  00134C  C007  F02E         	movff	?i2___aomod+6,??i2_dtoa+6
  5247  001350  C008  F02F         	movff	?i2___aomod+7,??i2_dtoa+7
  5248  001354  C028  F013         	movff	??i2_dtoa,i2abs@a
  5249  001358  C02A  F014         	movff	??i2_dtoa+2,i2abs@a+1
  5250  00135C  EC61  F012         	call	i2_abs	;wreg free
  5251  001360  5013               	movf	?i2_abs^0,w,c
  5252  001362  0F30               	addlw	48
  5253  001364  6EDF               	movwf	indf2,c
  5254  001366                     
  5255                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  5256  001366  0632               	decf	i2dtoa@p^0,f,c
  5257  001368  A0D8               	btfss	status,0,c
  5258  00136A  0633               	decf	(i2dtoa@p+1)^0,f,c
  5259  00136C                     
  5260                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  5261  00136C  0634               	decf	i2dtoa@w^0,f,c
  5262  00136E  A0D8               	btfss	status,0,c
  5263  001370  0635               	decf	(i2dtoa@w+1)^0,f,c
  5264  001372                     
  5265                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  5266  001372  C038  F001         	movff	i2dtoa@n,i2___aodiv@dividend
  5267  001376  C039  F002         	movff	i2dtoa@n+1,i2___aodiv@dividend+1
  5268  00137A  C03A  F003         	movff	i2dtoa@n+2,i2___aodiv@dividend+2
  5269  00137E  C03B  F004         	movff	i2dtoa@n+3,i2___aodiv@dividend+3
  5270  001382  C03C  F005         	movff	i2dtoa@n+4,i2___aodiv@dividend+4
  5271  001386  C03D  F006         	movff	i2dtoa@n+5,i2___aodiv@dividend+5
  5272  00138A  C03E  F007         	movff	i2dtoa@n+6,i2___aodiv@dividend+6
  5273  00138E  C03F  F008         	movff	i2dtoa@n+7,i2___aodiv@dividend+7
  5274  001392  0E0A               	movlw	10
  5275  001394  6E09               	movwf	i2___aodiv@divisor^0,c
  5276  001396  0E00               	movlw	0
  5277  001398  6E0A               	movwf	(i2___aodiv@divisor+1)^0,c
  5278  00139A  0E00               	movlw	0
  5279  00139C  6E0B               	movwf	(i2___aodiv@divisor+2)^0,c
  5280  00139E  0E00               	movlw	0
  5281  0013A0  6E0C               	movwf	(i2___aodiv@divisor+3)^0,c
  5282  0013A2  0E00               	movlw	0
  5283  0013A4  6E0D               	movwf	(i2___aodiv@divisor+4)^0,c
  5284  0013A6  0E00               	movlw	0
  5285  0013A8  6E0E               	movwf	(i2___aodiv@divisor+5)^0,c
  5286  0013AA  0E00               	movlw	0
  5287  0013AC  6E0F               	movwf	(i2___aodiv@divisor+6)^0,c
  5288  0013AE  0E00               	movlw	0
  5289  0013B0  6E10               	movwf	(i2___aodiv@divisor+7)^0,c
  5290  0013B2  ECE8  F00C         	call	i2___aodiv	;wreg free
  5291  0013B6  C001  F038         	movff	?i2___aodiv,i2dtoa@n
  5292  0013BA  C002  F039         	movff	?i2___aodiv+1,i2dtoa@n+1
  5293  0013BE  C003  F03A         	movff	?i2___aodiv+2,i2dtoa@n+2
  5294  0013C2  C004  F03B         	movff	?i2___aodiv+3,i2dtoa@n+3
  5295  0013C6  C005  F03C         	movff	?i2___aodiv+4,i2dtoa@n+4
  5296  0013CA  C006  F03D         	movff	?i2___aodiv+5,i2dtoa@n+5
  5297  0013CE  C007  F03E         	movff	?i2___aodiv+6,i2dtoa@n+6
  5298  0013D2  C008  F03F         	movff	?i2___aodiv+7,i2dtoa@n+7
  5299  0013D6                     i2l2512:
  5300                           
  5301                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5302  0013D6  BE41               	btfsc	(i2dtoa@i+1)^0,7,c
  5303  0013D8  EFF6  F009         	goto	i2u180_41
  5304  0013DC  5041               	movf	(i2dtoa@i+1)^0,w,c
  5305  0013DE  E108               	bnz	i2u180_40
  5306  0013E0  0440               	decf	i2dtoa@i^0,w,c
  5307  0013E2  A0D8               	btfss	status,0,c
  5308  0013E4  EFF6  F009         	goto	i2u180_41
  5309  0013E8  EFF8  F009         	goto	i2u180_40
  5310  0013EC                     i2u180_41:
  5311  0013EC  EF29  F00A         	goto	i2l2522
  5312  0013F0                     i2u180_40:
  5313  0013F0  5038               	movf	i2dtoa@n^0,w,c
  5314  0013F2  1039               	iorwf	(i2dtoa@n+1)^0,w,c
  5315  0013F4  103A               	iorwf	(i2dtoa@n+2)^0,w,c
  5316  0013F6  103B               	iorwf	(i2dtoa@n+3)^0,w,c
  5317  0013F8  103C               	iorwf	(i2dtoa@n+4)^0,w,c
  5318  0013FA  103D               	iorwf	(i2dtoa@n+5)^0,w,c
  5319  0013FC  103E               	iorwf	(i2dtoa@n+6)^0,w,c
  5320  0013FE  103F               	iorwf	(i2dtoa@n+7)^0,w,c
  5321  001400  A4D8               	btfss	status,2,c
  5322  001402  EF05  F00A         	goto	i2u181_41
  5323  001406  EF07  F00A         	goto	i2u181_40
  5324  00140A                     i2u181_41:
  5325  00140A  EF6F  F009         	goto	i2l2502
  5326  00140E                     i2u181_40:
  5327  00140E  BE33               	btfsc	(i2dtoa@p+1)^0,7,c
  5328  001410  EF14  F00A         	goto	i2u182_40
  5329  001414  5033               	movf	(i2dtoa@p+1)^0,w,c
  5330  001416  E106               	bnz	i2u182_41
  5331  001418  0432               	decf	i2dtoa@p^0,w,c
  5332  00141A  B0D8               	btfsc	status,0,c
  5333  00141C  EF12  F00A         	goto	i2u182_41
  5334  001420  EF14  F00A         	goto	i2u182_40
  5335  001424                     i2u182_41:
  5336  001424  EF6F  F009         	goto	i2l2502
  5337  001428                     i2u182_40:
  5338  001428  BE35               	btfsc	(i2dtoa@w+1)^0,7,c
  5339  00142A  EF1F  F00A         	goto	i2u183_41
  5340  00142E  5035               	movf	(i2dtoa@w+1)^0,w,c
  5341  001430  E108               	bnz	i2u183_40
  5342  001432  0434               	decf	i2dtoa@w^0,w,c
  5343  001434  A0D8               	btfss	status,0,c
  5344  001436  EF1F  F00A         	goto	i2u183_41
  5345  00143A  EF21  F00A         	goto	i2u183_40
  5346  00143E                     i2u183_41:
  5347  00143E  EF29  F00A         	goto	i2l2522
  5348  001442                     i2u183_40:
  5349  001442  0100               	movlb	0	; () banked
  5350  001444  B3D7               	btfsc	_flags& (0+255),1,b
  5351  001446  EF27  F00A         	goto	i2u184_41
  5352  00144A  EF29  F00A         	goto	i2u184_40
  5353  00144E                     i2u184_41:
  5354  00144E  EF6F  F009         	goto	i2l2502
  5355  001452                     i2u184_40:
  5356  001452                     i2l2522:
  5357                           
  5358                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  5359  001452  5036               	movf	i2dtoa@s^0,w,c
  5360  001454  1037               	iorwf	(i2dtoa@s+1)^0,w,c
  5361  001456  A4D8               	btfss	status,2,c
  5362  001458  EF30  F00A         	goto	i2u185_41
  5363  00145C  EF32  F00A         	goto	i2u185_40
  5364  001460                     i2u185_41:
  5365  001460  EF3A  F00A         	goto	i2l2526
  5366  001464                     i2u185_40:
  5367  001464  0100               	movlb	0	; () banked
  5368  001466  A5D7               	btfss	_flags& (0+255),2,b
  5369  001468  EF38  F00A         	goto	i2u186_41
  5370  00146C  EF3A  F00A         	goto	i2u186_40
  5371  001470                     i2u186_41:
  5372  001470  EF58  F00A         	goto	i2l2536
  5373  001474                     i2u186_40:
  5374  001474                     i2l2526:
  5375                           
  5376                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  5377  001474  0640               	decf	i2dtoa@i^0,f,c
  5378  001476  A0D8               	btfss	status,0,c
  5379  001478  0641               	decf	(i2dtoa@i+1)^0,f,c
  5380  00147A                     
  5381                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  5382  00147A  5036               	movf	i2dtoa@s^0,w,c
  5383  00147C  1037               	iorwf	(i2dtoa@s+1)^0,w,c
  5384  00147E  A4D8               	btfss	status,2,c
  5385  001480  EF44  F00A         	goto	i2u187_41
  5386  001484  EF46  F00A         	goto	i2u187_40
  5387  001488                     i2u187_41:
  5388  001488  EF4C  F00A         	goto	i2l2532
  5389  00148C                     i2u187_40:
  5390  00148C  0E00               	movlw	0
  5391  00148E  6E31               	movwf	(i2_dtoa$1498+1)^0,c
  5392  001490  0E2B               	movlw	43
  5393  001492  6E30               	movwf	i2_dtoa$1498^0,c
  5394  001494  EF50  F00A         	goto	i2l2534
  5395  001498                     i2l2532:
  5396  001498  0E00               	movlw	0
  5397  00149A  6E31               	movwf	(i2_dtoa$1498+1)^0,c
  5398  00149C  0E2D               	movlw	45
  5399  00149E  6E30               	movwf	i2_dtoa$1498^0,c
  5400  0014A0                     i2l2534:
  5401  0014A0  0E00               	movlw	low _dbuf
  5402  0014A2  2440               	addwf	i2dtoa@i^0,w,c
  5403  0014A4  6ED9               	movwf	fsr2l,c
  5404  0014A6  0E01               	movlw	high _dbuf
  5405  0014A8  2041               	addwfc	(i2dtoa@i+1)^0,w,c
  5406  0014AA  6EDA               	movwf	fsr2h,c
  5407  0014AC  C030  FFDF         	movff	i2_dtoa$1498,indf2
  5408  0014B0                     i2l2536:
  5409                           
  5410                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  5411  0014B0  C01E  F013         	movff	i2dtoa@fp,i2pad@fp
  5412  0014B4  C01F  F014         	movff	i2dtoa@fp+1,i2pad@fp+1
  5413  0014B8  0E00               	movlw	low _dbuf
  5414  0014BA  2440               	addwf	i2dtoa@i^0,w,c
  5415  0014BC  6E15               	movwf	i2pad@buf^0,c
  5416  0014BE  0E01               	movlw	high _dbuf
  5417  0014C0  2041               	addwfc	(i2dtoa@i+1)^0,w,c
  5418  0014C2  6E16               	movwf	(i2pad@buf+1)^0,c
  5419  0014C4  C034  F017         	movff	i2dtoa@w,i2pad@p
  5420  0014C8  C035  F018         	movff	i2dtoa@w+1,i2pad@p+1
  5421  0014CC  ECDA  F00F         	call	i2_pad	;wreg free
  5422  0014D0  C013  F01E         	movff	?i2_pad,?i2_dtoa
  5423  0014D4  C014  F01F         	movff	?i2_pad+1,?i2_dtoa+1
  5424  0014D8  0012               	return		;funcret
  5425  0014DA                     __end_ofi2_dtoa:
  5426                           	opt callstack 0
  5427                           
  5428 ;; *************** function i2_pad *****************
  5429 ;; Defined at:
  5430 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5431 ;; Parameters:    Size  Location     Type
  5432 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  5433 ;;		 -> NULL(0), 
  5434 ;;  buf             2   20[COMRAM] PTR unsigned char 
  5435 ;;		 -> dbuf(32), 
  5436 ;;  p               2   22[COMRAM] int 
  5437 ;; Auto vars:     Size  Location     Type
  5438 ;;  pad             2   27[COMRAM] int 
  5439 ;;  pad             2   25[COMRAM] int 
  5440 ;; Return value:  Size  Location     Type
  5441 ;;                  2   18[COMRAM] int 
  5442 ;; Registers used:
  5443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5444 ;; Tracked objects:
  5445 ;;		On entry : 0/0
  5446 ;;		On exit  : 0/0
  5447 ;;		Unchanged: 0/0
  5448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5449 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5450 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5451 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5452 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5453 ;;Total ram usage:       11 bytes
  5454 ;; Hardware stack levels used:    1
  5455 ;; Hardware stack levels required when called:    4
  5456 ;; This function calls:
  5457 ;;		i2_fputc
  5458 ;;		i2_fputs
  5459 ;;		i2_strlen
  5460 ;; This function is called by:
  5461 ;;		i2_dtoa
  5462 ;; This function uses a non-reentrant model
  5463 ;;
  5464                           
  5465                           	psect	text44
  5466  001FB4                     __ptext44:
  5467                           	opt callstack 0
  5468  001FB4                     i2_pad:
  5469                           	opt callstack 11
  5470  001FB4                     
  5471                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  5472  001FB4  0100               	movlb	0	; () banked
  5473  001FB6  A1D7               	btfss	_flags& (0+255),0,b
  5474  001FB8  EFE0  F00F         	goto	i2u137_41
  5475  001FBC  EFE2  F00F         	goto	i2u137_40
  5476  001FC0                     i2u137_41:
  5477  001FC0  EFEC  F00F         	goto	i2l2270
  5478  001FC4                     i2u137_40:
  5479  001FC4                     
  5480                           ; BSR set to: 0
  5481                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  5482  001FC4  C015  F00C         	movff	i2pad@buf,i2fputs@s
  5483  001FC8  C016  F00D         	movff	i2pad@buf+1,i2fputs@s+1
  5484  001FCC  C013  F00E         	movff	i2pad@fp,i2fputs@fp
  5485  001FD0  C014  F00F         	movff	i2pad@fp+1,i2fputs@fp+1
  5486  001FD4  ECFE  F011         	call	i2_fputs	;wreg free
  5487  001FD8                     i2l2270:
  5488                           
  5489                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  5490  001FD8  BE18               	btfsc	(i2pad@p+1)^0,7,c
  5491  001FDA  EFF1  F00F         	goto	i2u138_41
  5492  001FDE  EFF3  F00F         	goto	i2u138_40
  5493  001FE2                     i2u138_41:
  5494  001FE2  EFF9  F00F         	goto	i2l2274
  5495  001FE6                     i2u138_40:
  5496  001FE6  C017  F01C         	movff	i2pad@p,i2pad@w
  5497  001FEA  C018  F01D         	movff	i2pad@p+1,i2pad@w+1
  5498  001FEE  EFFD  F00F         	goto	i2l571
  5499  001FF2                     i2l2274:
  5500  001FF2  0E00               	movlw	0
  5501  001FF4  6E1D               	movwf	(i2pad@w+1)^0,c
  5502  001FF6  0E00               	movlw	0
  5503  001FF8  6E1C               	movwf	i2pad@w^0,c
  5504  001FFA                     i2l571:
  5505                           
  5506                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  5507  001FFA  0E00               	movlw	0
  5508  001FFC  6E1B               	movwf	(i2pad@i+1)^0,c
  5509  001FFE  0E00               	movlw	0
  5510  002000  6E1A               	movwf	i2pad@i^0,c
  5511                           
  5512                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5513  002002  EF0F  F010         	goto	i2l2280
  5514  002006                     i2l2276:
  5515                           
  5516                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  5517  002006  0E00               	movlw	0
  5518  002008  6E04               	movwf	(i2fputc@c+1)^0,c
  5519  00200A  0E20               	movlw	32
  5520  00200C  6E03               	movwf	i2fputc@c^0,c
  5521  00200E  C013  F005         	movff	i2pad@fp,i2fputc@fp
  5522  002012  C014  F006         	movff	i2pad@fp+1,i2fputc@fp+1
  5523  002016  EC89  F010         	call	i2_fputc	;wreg free
  5524  00201A                     
  5525                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  5526  00201A  4A1A               	infsnz	i2pad@i^0,f,c
  5527  00201C  2A1B               	incf	(i2pad@i+1)^0,f,c
  5528  00201E                     i2l2280:
  5529                           
  5530                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5531  00201E  501C               	movf	i2pad@w^0,w,c
  5532  002020  5C1A               	subwf	i2pad@i^0,w,c
  5533  002022  501B               	movf	(i2pad@i+1)^0,w,c
  5534  002024  0A80               	xorlw	128
  5535  002026  6E19               	movwf	??i2_pad^0,c
  5536  002028  501D               	movf	(i2pad@w+1)^0,w,c
  5537  00202A  0A80               	xorlw	128
  5538  00202C  5819               	subwfb	??i2_pad^0,w,c
  5539  00202E  A0D8               	btfss	status,0,c
  5540  002030  EF1C  F010         	goto	i2u139_41
  5541  002034  EF1E  F010         	goto	i2u139_40
  5542  002038                     i2u139_41:
  5543  002038  EF03  F010         	goto	i2l2276
  5544  00203C                     i2u139_40:
  5545  00203C                     
  5546                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  5547  00203C  0100               	movlb	0	; () banked
  5548  00203E  B1D7               	btfsc	_flags& (0+255),0,b
  5549  002040  EF24  F010         	goto	i2u140_41
  5550  002044  EF26  F010         	goto	i2u140_40
  5551  002048                     i2u140_41:
  5552  002048  EF30  F010         	goto	i2l2284
  5553  00204C                     i2u140_40:
  5554  00204C                     
  5555                           ; BSR set to: 0
  5556                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  5557  00204C  C015  F00C         	movff	i2pad@buf,i2fputs@s
  5558  002050  C016  F00D         	movff	i2pad@buf+1,i2fputs@s+1
  5559  002054  C013  F00E         	movff	i2pad@fp,i2fputs@fp
  5560  002058  C014  F00F         	movff	i2pad@fp+1,i2fputs@fp+1
  5561  00205C  ECFE  F011         	call	i2_fputs	;wreg free
  5562  002060                     i2l2284:
  5563                           
  5564                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  5565  002060  C015  F001         	movff	i2pad@buf,i2strlen@s
  5566  002064  C016  F002         	movff	i2pad@buf+1,i2strlen@s+1
  5567  002068  EC9E  F012         	call	i2_strlen	;wreg free
  5568  00206C  501C               	movf	i2pad@w^0,w,c
  5569  00206E  2401               	addwf	?i2_strlen^0,w,c
  5570  002070  6E13               	movwf	?i2_pad^0,c
  5571  002072  501D               	movf	(i2pad@w+1)^0,w,c
  5572  002074  2002               	addwfc	(?i2_strlen+1)^0,w,c
  5573  002076  6E14               	movwf	(?i2_pad+1)^0,c
  5574  002078  0012               	return		;funcret
  5575  00207A                     __end_ofi2_pad:
  5576                           	opt callstack 0
  5577                           
  5578 ;; *************** function i2_strlen *****************
  5579 ;; Defined at:
  5580 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  5581 ;; Parameters:    Size  Location     Type
  5582 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5583 ;;		 -> dbuf(32), 
  5584 ;; Auto vars:     Size  Location     Type
  5585 ;;  strlen          2    2[COMRAM] PTR const unsigned char 
  5586 ;;		 -> dbuf(32), 
  5587 ;; Return value:  Size  Location     Type
  5588 ;;                  2    0[COMRAM] unsigned int 
  5589 ;; Registers used:
  5590 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5591 ;; Tracked objects:
  5592 ;;		On entry : 0/0
  5593 ;;		On exit  : 0/0
  5594 ;;		Unchanged: 0/0
  5595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5596 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5597 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5599 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5600 ;;Total ram usage:        4 bytes
  5601 ;; Hardware stack levels used:    1
  5602 ;; This function calls:
  5603 ;;		Nothing
  5604 ;; This function is called by:
  5605 ;;		i2_pad
  5606 ;; This function uses a non-reentrant model
  5607 ;;
  5608                           
  5609                           	psect	text45
  5610  00253C                     __ptext45:
  5611                           	opt callstack 0
  5612  00253C                     i2_strlen:
  5613                           	opt callstack 14
  5614  00253C  C001  F003         	movff	i2strlen@s,i2strlen@a
  5615  002540  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
  5616  002544  EFA6  F012         	goto	i2l2242
  5617  002548                     i2l2240:
  5618  002548  4A01               	infsnz	i2strlen@s^0,f,c
  5619  00254A  2A02               	incf	(i2strlen@s+1)^0,f,c
  5620  00254C                     i2l2242:
  5621  00254C  C001  FFD9         	movff	i2strlen@s,fsr2l
  5622  002550  C002  FFDA         	movff	i2strlen@s+1,fsr2h
  5623  002554  50DF               	movf	indf2,w,c
  5624  002556  A4D8               	btfss	status,2,c
  5625  002558  EFB0  F012         	goto	i2u134_41
  5626  00255C  EFB2  F012         	goto	i2u134_40
  5627  002560                     i2u134_41:
  5628  002560  EFA4  F012         	goto	i2l2240
  5629  002564                     i2u134_40:
  5630  002564  5003               	movf	i2strlen@a^0,w,c
  5631  002566  5C01               	subwf	i2strlen@s^0,w,c
  5632  002568  6E01               	movwf	?i2_strlen^0,c
  5633  00256A  5004               	movf	(i2strlen@a+1)^0,w,c
  5634  00256C  5802               	subwfb	(i2strlen@s+1)^0,w,c
  5635  00256E  6E02               	movwf	(?i2_strlen+1)^0,c
  5636  002570  0012               	return		;funcret
  5637  002572                     __end_ofi2_strlen:
  5638                           	opt callstack 0
  5639                           
  5640 ;; *************** function i2_fputs *****************
  5641 ;; Defined at:
  5642 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  5643 ;; Parameters:    Size  Location     Type
  5644 ;;  s               2   11[COMRAM] PTR const unsigned char 
  5645 ;;		 -> dbuf(32), 
  5646 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  5647 ;;		 -> NULL(0), 
  5648 ;; Auto vars:     Size  Location     Type
  5649 ;;  fputs           2   16[COMRAM] int 
  5650 ;;  fputs           1   15[COMRAM] unsigned char 
  5651 ;; Return value:  Size  Location     Type
  5652 ;;                  2   11[COMRAM] int 
  5653 ;; Registers used:
  5654 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5655 ;; Tracked objects:
  5656 ;;		On entry : 0/0
  5657 ;;		On exit  : 0/0
  5658 ;;		Unchanged: 0/0
  5659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5660 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5661 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5663 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5664 ;;Total ram usage:        7 bytes
  5665 ;; Hardware stack levels used:    1
  5666 ;; Hardware stack levels required when called:    3
  5667 ;; This function calls:
  5668 ;;		i2_fputc
  5669 ;; This function is called by:
  5670 ;;		i2_pad
  5671 ;; This function uses a non-reentrant model
  5672 ;;
  5673                           
  5674                           	psect	text46
  5675  0023FC                     __ptext46:
  5676                           	opt callstack 0
  5677  0023FC                     i2_fputs:
  5678                           	opt callstack 11
  5679  0023FC  0E00               	movlw	0
  5680  0023FE  6E12               	movwf	(i2fputs@i+1)^0,c
  5681  002400  0E00               	movlw	0
  5682  002402  6E11               	movwf	i2fputs@i^0,c
  5683  002404  EF0F  F012         	goto	i2l2236
  5684  002408                     i2l2232:
  5685  002408  C010  F003         	movff	i2fputs@c,i2fputc@c
  5686  00240C  6A04               	clrf	(i2fputc@c+1)^0,c
  5687  00240E  C00E  F005         	movff	i2fputs@fp,i2fputc@fp
  5688  002412  C00F  F006         	movff	i2fputs@fp+1,i2fputc@fp+1
  5689  002416  EC89  F010         	call	i2_fputc	;wreg free
  5690  00241A  4A11               	infsnz	i2fputs@i^0,f,c
  5691  00241C  2A12               	incf	(i2fputs@i+1)^0,f,c
  5692  00241E                     i2l2236:
  5693  00241E  5011               	movf	i2fputs@i^0,w,c
  5694  002420  240C               	addwf	i2fputs@s^0,w,c
  5695  002422  6ED9               	movwf	fsr2l,c
  5696  002424  5012               	movf	(i2fputs@i+1)^0,w,c
  5697  002426  200D               	addwfc	(i2fputs@s+1)^0,w,c
  5698  002428  6EDA               	movwf	fsr2h,c
  5699  00242A  50DF               	movf	indf2,w,c
  5700  00242C  6E10               	movwf	i2fputs@c^0,c
  5701  00242E  5010               	movf	i2fputs@c^0,w,c
  5702  002430  A4D8               	btfss	status,2,c
  5703  002432  EF1D  F012         	goto	i2u133_41
  5704  002436  EF1F  F012         	goto	i2u133_40
  5705  00243A                     i2u133_41:
  5706  00243A  EF04  F012         	goto	i2l2232
  5707  00243E                     i2u133_40:
  5708  00243E  0012               	return		;funcret
  5709  002440                     __end_ofi2_fputs:
  5710                           	opt callstack 0
  5711                           
  5712 ;; *************** function i2_fputc *****************
  5713 ;; Defined at:
  5714 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  5715 ;; Parameters:    Size  Location     Type
  5716 ;;  c               2    2[COMRAM] int 
  5717 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  5718 ;;		 -> NULL(0), 
  5719 ;; Auto vars:     Size  Location     Type
  5720 ;;		None
  5721 ;; Return value:  Size  Location     Type
  5722 ;;                  2    2[COMRAM] int 
  5723 ;; Registers used:
  5724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5725 ;; Tracked objects:
  5726 ;;		On entry : 0/0
  5727 ;;		On exit  : 0/0
  5728 ;;		Unchanged: 0/0
  5729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5730 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5732 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5733 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5734 ;;Total ram usage:        9 bytes
  5735 ;; Hardware stack levels used:    1
  5736 ;; Hardware stack levels required when called:    2
  5737 ;; This function calls:
  5738 ;;		i2_putch
  5739 ;; This function is called by:
  5740 ;;		i2_pad
  5741 ;;		i2_vfpfcnvrt
  5742 ;;		i2_fputs
  5743 ;; This function uses a non-reentrant model
  5744 ;;
  5745                           
  5746                           	psect	text47
  5747  002112                     __ptext47:
  5748                           	opt callstack 0
  5749  002112                     i2_fputc:
  5750                           	opt callstack 14
  5751  002112  5005               	movf	i2fputc@fp^0,w,c
  5752  002114  1006               	iorwf	(i2fputc@fp+1)^0,w,c
  5753  002116  B4D8               	btfsc	status,2,c
  5754  002118  EF90  F010         	goto	i2u125_41
  5755  00211C  EF92  F010         	goto	i2u125_40
  5756  002120                     i2u125_41:
  5757  002120  EF9B  F010         	goto	i2l2206
  5758  002124                     i2u125_40:
  5759  002124  5005               	movf	i2fputc@fp^0,w,c
  5760  002126  1006               	iorwf	(i2fputc@fp+1)^0,w,c
  5761  002128  A4D8               	btfss	status,2,c
  5762  00212A  EF99  F010         	goto	i2u126_41
  5763  00212E  EF9B  F010         	goto	i2u126_40
  5764  002132                     i2u126_41:
  5765  002132  EFA0  F010         	goto	i2l2208
  5766  002136                     i2u126_40:
  5767  002136                     i2l2206:
  5768  002136  5003               	movf	i2fputc@c^0,w,c
  5769  002138  EC20  F014         	call	i2_putch
  5770  00213C  EFD3  F010         	goto	i2l1309
  5771  002140                     i2l2208:
  5772  002140  EE20 F004          	lfsr	2,4
  5773  002144  5005               	movf	i2fputc@fp^0,w,c
  5774  002146  26D9               	addwf	fsr2l,f,c
  5775  002148  5006               	movf	(i2fputc@fp+1)^0,w,c
  5776  00214A  22DA               	addwfc	fsr2h,f,c
  5777  00214C  50DE               	movf	postinc2,w,c
  5778  00214E  10DE               	iorwf	postinc2,w,c
  5779  002150  B4D8               	btfsc	status,2,c
  5780  002152  EFAD  F010         	goto	i2u127_41
  5781  002156  EFAF  F010         	goto	i2u127_40
  5782  00215A                     i2u127_41:
  5783  00215A  EFCA  F010         	goto	i2l2212
  5784  00215E                     i2u127_40:
  5785  00215E  EE20 F004          	lfsr	2,4
  5786  002162  5005               	movf	i2fputc@fp^0,w,c
  5787  002164  26D9               	addwf	fsr2l,f,c
  5788  002166  5006               	movf	(i2fputc@fp+1)^0,w,c
  5789  002168  22DA               	addwfc	fsr2h,f,c
  5790  00216A  EE10 F002          	lfsr	1,2
  5791  00216E  5005               	movf	i2fputc@fp^0,w,c
  5792  002170  26E1               	addwf	fsr1l,f,c
  5793  002172  5006               	movf	(i2fputc@fp+1)^0,w,c
  5794  002174  22E2               	addwfc	fsr1h,f,c
  5795  002176  50DE               	movf	postinc2,w,c
  5796  002178  5CE6               	subwf	postinc1,w,c
  5797  00217A  50E6               	movf	postinc1,w,c
  5798  00217C  0A80               	xorlw	128
  5799  00217E  6E0B               	movwf	(??i2_fputc+4)^0,c
  5800  002180  50DE               	movf	postinc2,w,c
  5801  002182  0A80               	xorlw	128
  5802  002184  580B               	subwfb	(??i2_fputc+4)^0,w,c
  5803  002186  B0D8               	btfsc	status,0,c
  5804  002188  EFC8  F010         	goto	i2u128_41
  5805  00218C  EFCA  F010         	goto	i2u128_40
  5806  002190                     i2u128_41:
  5807  002190  EFD3  F010         	goto	i2l1309
  5808  002194                     i2u128_40:
  5809  002194                     i2l2212:
  5810  002194  EE20 F002          	lfsr	2,2
  5811  002198  5005               	movf	i2fputc@fp^0,w,c
  5812  00219A  26D9               	addwf	fsr2l,f,c
  5813  00219C  5006               	movf	(i2fputc@fp+1)^0,w,c
  5814  00219E  22DA               	addwfc	fsr2h,f,c
  5815  0021A0  2ADE               	incf	postinc2,f,c
  5816  0021A2  0E00               	movlw	0
  5817  0021A4  22DD               	addwfc	postdec2,f,c
  5818  0021A6                     i2l1309:
  5819  0021A6  0012               	return		;funcret
  5820  0021A8                     __end_ofi2_fputc:
  5821                           	opt callstack 0
  5822                           
  5823 ;; *************** function i2_putch *****************
  5824 ;; Defined at:
  5825 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  5826 ;; Parameters:    Size  Location     Type
  5827 ;;  txData          1    wreg     unsigned char 
  5828 ;; Auto vars:     Size  Location     Type
  5829 ;;  txData          1    1[COMRAM] unsigned char 
  5830 ;; Return value:  Size  Location     Type
  5831 ;;                  1    wreg      void 
  5832 ;; Registers used:
  5833 ;;		wreg, status,2, cstack
  5834 ;; Tracked objects:
  5835 ;;		On entry : 0/0
  5836 ;;		On exit  : 0/0
  5837 ;;		Unchanged: 0/0
  5838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5840 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5842 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5843 ;;Total ram usage:        1 bytes
  5844 ;; Hardware stack levels used:    1
  5845 ;; Hardware stack levels required when called:    1
  5846 ;; This function calls:
  5847 ;;		i2_EUSART1_Write
  5848 ;; This function is called by:
  5849 ;;		i2_fputc
  5850 ;; This function uses a non-reentrant model
  5851 ;;
  5852                           
  5853                           	psect	text48
  5854  002840                     __ptext48:
  5855                           	opt callstack 0
  5856  002840                     i2_putch:
  5857                           	opt callstack 14
  5858                           
  5859                           ;incstack = 0
  5860                           ;i2putch@txData stored from wreg
  5861  002840  6E02               	movwf	i2putch@txData^0,c
  5862  002842                     
  5863                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  5864  002842  5002               	movf	i2putch@txData^0,w,c
  5865  002844  EC9E  F013         	call	i2_EUSART1_Write
  5866  002848  0012               	return		;funcret
  5867  00284A                     __end_ofi2_putch:
  5868                           	opt callstack 0
  5869                           
  5870 ;; *************** function i2_EUSART1_Write *****************
  5871 ;; Defined at:
  5872 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  5873 ;; Parameters:    Size  Location     Type
  5874 ;;  txData          1    wreg     unsigned char 
  5875 ;; Auto vars:     Size  Location     Type
  5876 ;;  txData          1    0[COMRAM] unsigned char 
  5877 ;; Return value:  Size  Location     Type
  5878 ;;                  1    wreg      void 
  5879 ;; Registers used:
  5880 ;;		wreg
  5881 ;; Tracked objects:
  5882 ;;		On entry : 0/0
  5883 ;;		On exit  : 0/0
  5884 ;;		Unchanged: 0/0
  5885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5887 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5889 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5890 ;;Total ram usage:        1 bytes
  5891 ;; Hardware stack levels used:    1
  5892 ;; This function calls:
  5893 ;;		Nothing
  5894 ;; This function is called by:
  5895 ;;		i2_putch
  5896 ;; This function uses a non-reentrant model
  5897 ;;
  5898                           
  5899                           	psect	text49
  5900  00273C                     __ptext49:
  5901                           	opt callstack 0
  5902  00273C                     i2_EUSART1_Write:
  5903                           	opt callstack 14
  5904                           
  5905                           ;incstack = 0
  5906                           ;i2EUSART1_Write@txData stored from wreg
  5907  00273C  6E01               	movwf	i2EUSART1_Write@txData^0,c
  5908  00273E                     i2l104:
  5909                           
  5910                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  5911  00273E  A89E               	btfss	158,4,c	;volatile
  5912  002740  EFA4  F013         	goto	i2u123_41
  5913  002744  EFA6  F013         	goto	i2u123_40
  5914  002748                     i2u123_41:
  5915  002748  EF9F  F013         	goto	i2l104
  5916  00274C                     i2u123_40:
  5917  00274C                     
  5918                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  5919  00274C  C001  FFAD         	movff	i2EUSART1_Write@txData,4013	;volatile
  5920  002750  0012               	return		;funcret
  5921  002752                     __end_ofi2_EUSART1_Write:
  5922                           	opt callstack 0
  5923                           
  5924 ;; *************** function i2_abs *****************
  5925 ;; Defined at:
  5926 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  5927 ;; Parameters:    Size  Location     Type
  5928 ;;  a               2   18[COMRAM] int 
  5929 ;; Auto vars:     Size  Location     Type
  5930 ;;		None
  5931 ;; Return value:  Size  Location     Type
  5932 ;;                  2   18[COMRAM] int 
  5933 ;; Registers used:
  5934 ;;		wreg, status,2, status,0
  5935 ;; Tracked objects:
  5936 ;;		On entry : 0/0
  5937 ;;		On exit  : 0/0
  5938 ;;		Unchanged: 0/0
  5939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5940 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5942 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5943 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5944 ;;Total ram usage:        4 bytes
  5945 ;; Hardware stack levels used:    1
  5946 ;; This function calls:
  5947 ;;		Nothing
  5948 ;; This function is called by:
  5949 ;;		i2_dtoa
  5950 ;; This function uses a non-reentrant model
  5951 ;;
  5952                           
  5953                           	psect	text50
  5954  0024C2                     __ptext50:
  5955                           	opt callstack 0
  5956  0024C2                     i2_abs:
  5957                           	opt callstack 15
  5958  0024C2  BE14               	btfsc	(i2abs@a+1)^0,7,c
  5959  0024C4  EF6E  F012         	goto	i2u154_40
  5960  0024C8  5014               	movf	(i2abs@a+1)^0,w,c
  5961  0024CA  E106               	bnz	i2u154_41
  5962  0024CC  0413               	decf	i2abs@a^0,w,c
  5963  0024CE  B0D8               	btfsc	status,0,c
  5964  0024D0  EF6C  F012         	goto	i2u154_41
  5965  0024D4  EF6E  F012         	goto	i2u154_40
  5966  0024D8                     i2u154_41:
  5967  0024D8  EF7C  F012         	goto	i2l1294
  5968  0024DC                     i2u154_40:
  5969  0024DC  C013  F015         	movff	i2abs@a,??i2_abs
  5970  0024E0  C014  F016         	movff	i2abs@a+1,??i2_abs+1
  5971  0024E4  1E15               	comf	??i2_abs^0,f,c
  5972  0024E6  1E16               	comf	(??i2_abs+1)^0,f,c
  5973  0024E8  4A15               	infsnz	??i2_abs^0,f,c
  5974  0024EA  2A16               	incf	(??i2_abs+1)^0,f,c
  5975  0024EC  C015  F013         	movff	??i2_abs,?i2_abs
  5976  0024F0  C016  F014         	movff	??i2_abs+1,?i2_abs+1
  5977  0024F4  EF80  F012         	goto	i2l1297
  5978  0024F8                     i2l1294:
  5979  0024F8  C013  F013         	movff	i2abs@a,?i2_abs
  5980  0024FC  C014  F014         	movff	i2abs@a+1,?i2_abs+1
  5981  002500                     i2l1297:
  5982  002500  0012               	return		;funcret
  5983  002502                     __end_ofi2_abs:
  5984                           	opt callstack 0
  5985                           
  5986 ;; *************** function i2___aomod *****************
  5987 ;; Defined at:
  5988 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  5989 ;; Parameters:    Size  Location     Type
  5990 ;;  dividend        8    0[COMRAM] long long 
  5991 ;;  divisor         8    8[COMRAM] long long 
  5992 ;; Auto vars:     Size  Location     Type
  5993 ;;  __aomod         1   17[COMRAM] unsigned char 
  5994 ;;  __aomod         1   16[COMRAM] unsigned char 
  5995 ;; Return value:  Size  Location     Type
  5996 ;;                  8    0[COMRAM] long long 
  5997 ;; Registers used:
  5998 ;;		wreg, status,2, status,0
  5999 ;; Tracked objects:
  6000 ;;		On entry : 0/0
  6001 ;;		On exit  : 0/0
  6002 ;;		Unchanged: 0/0
  6003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6004 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6005 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6007 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6008 ;;Total ram usage:       18 bytes
  6009 ;; Hardware stack levels used:    1
  6010 ;; This function calls:
  6011 ;;		Nothing
  6012 ;; This function is called by:
  6013 ;;		i2_dtoa
  6014 ;; This function uses a non-reentrant model
  6015 ;;
  6016                           
  6017                           	psect	text51
  6018  001CBE                     __ptext51:
  6019                           	opt callstack 0
  6020  001CBE                     i2___aomod:
  6021                           	opt callstack 15
  6022  001CBE  0E00               	movlw	0
  6023  001CC0  6E12               	movwf	i2___aomod@sign^0,c
  6024  001CC2  BE08               	btfsc	(i2___aomod@dividend+7)^0,7,c
  6025  001CC4  EF68  F00E         	goto	i2u148_40
  6026  001CC8  EF66  F00E         	goto	i2u148_41
  6027  001CCC                     i2u148_41:
  6028  001CCC  EF7A  F00E         	goto	i2l2340
  6029  001CD0                     i2u148_40:
  6030  001CD0  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
  6031  001CD2  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
  6032  001CD4  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
  6033  001CD6  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
  6034  001CD8  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
  6035  001CDA  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
  6036  001CDC  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
  6037  001CDE  6C01               	negf	i2___aomod@dividend^0,c
  6038  001CE0  0E00               	movlw	0
  6039  001CE2  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
  6040  001CE4  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
  6041  001CE6  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
  6042  001CE8  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
  6043  001CEA  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
  6044  001CEC  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
  6045  001CEE  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
  6046  001CF0  0E01               	movlw	1
  6047  001CF2  6E12               	movwf	i2___aomod@sign^0,c
  6048  001CF4                     i2l2340:
  6049  001CF4  BE10               	btfsc	(i2___aomod@divisor+7)^0,7,c
  6050  001CF6  EF81  F00E         	goto	i2u149_40
  6051  001CFA  EF7F  F00E         	goto	i2u149_41
  6052  001CFE                     i2u149_41:
  6053  001CFE  EF91  F00E         	goto	i2l2344
  6054  001D02                     i2u149_40:
  6055  001D02  1E10               	comf	(i2___aomod@divisor+7)^0,f,c
  6056  001D04  1E0F               	comf	(i2___aomod@divisor+6)^0,f,c
  6057  001D06  1E0E               	comf	(i2___aomod@divisor+5)^0,f,c
  6058  001D08  1E0D               	comf	(i2___aomod@divisor+4)^0,f,c
  6059  001D0A  1E0C               	comf	(i2___aomod@divisor+3)^0,f,c
  6060  001D0C  1E0B               	comf	(i2___aomod@divisor+2)^0,f,c
  6061  001D0E  1E0A               	comf	(i2___aomod@divisor+1)^0,f,c
  6062  001D10  6C09               	negf	i2___aomod@divisor^0,c
  6063  001D12  0E00               	movlw	0
  6064  001D14  220A               	addwfc	(i2___aomod@divisor+1)^0,f,c
  6065  001D16  220B               	addwfc	(i2___aomod@divisor+2)^0,f,c
  6066  001D18  220C               	addwfc	(i2___aomod@divisor+3)^0,f,c
  6067  001D1A  220D               	addwfc	(i2___aomod@divisor+4)^0,f,c
  6068  001D1C  220E               	addwfc	(i2___aomod@divisor+5)^0,f,c
  6069  001D1E  220F               	addwfc	(i2___aomod@divisor+6)^0,f,c
  6070  001D20  2210               	addwfc	(i2___aomod@divisor+7)^0,f,c
  6071  001D22                     i2l2344:
  6072  001D22  5009               	movf	i2___aomod@divisor^0,w,c
  6073  001D24  100A               	iorwf	(i2___aomod@divisor+1)^0,w,c
  6074  001D26  100B               	iorwf	(i2___aomod@divisor+2)^0,w,c
  6075  001D28  100C               	iorwf	(i2___aomod@divisor+3)^0,w,c
  6076  001D2A  100D               	iorwf	(i2___aomod@divisor+4)^0,w,c
  6077  001D2C  100E               	iorwf	(i2___aomod@divisor+5)^0,w,c
  6078  001D2E  100F               	iorwf	(i2___aomod@divisor+6)^0,w,c
  6079  001D30  1010               	iorwf	(i2___aomod@divisor+7)^0,w,c
  6080  001D32  B4D8               	btfsc	status,2,c
  6081  001D34  EF9E  F00E         	goto	i2u150_41
  6082  001D38  EFA0  F00E         	goto	i2u150_40
  6083  001D3C                     i2u150_41:
  6084  001D3C  EFE8  F00E         	goto	i2l2360
  6085  001D40                     i2u150_40:
  6086  001D40  0E01               	movlw	1
  6087  001D42  6E11               	movwf	i2___aomod@counter^0,c
  6088  001D44  EFAE  F00E         	goto	i2l2350
  6089  001D48                     i2l2348:
  6090  001D48  90D8               	bcf	status,0,c
  6091  001D4A  3609               	rlcf	i2___aomod@divisor^0,f,c
  6092  001D4C  360A               	rlcf	(i2___aomod@divisor+1)^0,f,c
  6093  001D4E  360B               	rlcf	(i2___aomod@divisor+2)^0,f,c
  6094  001D50  360C               	rlcf	(i2___aomod@divisor+3)^0,f,c
  6095  001D52  360D               	rlcf	(i2___aomod@divisor+4)^0,f,c
  6096  001D54  360E               	rlcf	(i2___aomod@divisor+5)^0,f,c
  6097  001D56  360F               	rlcf	(i2___aomod@divisor+6)^0,f,c
  6098  001D58  3610               	rlcf	(i2___aomod@divisor+7)^0,f,c
  6099  001D5A  2A11               	incf	i2___aomod@counter^0,f,c
  6100  001D5C                     i2l2350:
  6101  001D5C  AE10               	btfss	(i2___aomod@divisor+7)^0,7,c
  6102  001D5E  EFB3  F00E         	goto	i2u151_41
  6103  001D62  EFB5  F00E         	goto	i2u151_40
  6104  001D66                     i2u151_41:
  6105  001D66  EFA4  F00E         	goto	i2l2348
  6106  001D6A                     i2u151_40:
  6107  001D6A                     i2l2352:
  6108  001D6A  5009               	movf	i2___aomod@divisor^0,w,c
  6109  001D6C  5C01               	subwf	i2___aomod@dividend^0,w,c
  6110  001D6E  500A               	movf	(i2___aomod@divisor+1)^0,w,c
  6111  001D70  5802               	subwfb	(i2___aomod@dividend+1)^0,w,c
  6112  001D72  500B               	movf	(i2___aomod@divisor+2)^0,w,c
  6113  001D74  5803               	subwfb	(i2___aomod@dividend+2)^0,w,c
  6114  001D76  500C               	movf	(i2___aomod@divisor+3)^0,w,c
  6115  001D78  5804               	subwfb	(i2___aomod@dividend+3)^0,w,c
  6116  001D7A  500D               	movf	(i2___aomod@divisor+4)^0,w,c
  6117  001D7C  5805               	subwfb	(i2___aomod@dividend+4)^0,w,c
  6118  001D7E  500E               	movf	(i2___aomod@divisor+5)^0,w,c
  6119  001D80  5806               	subwfb	(i2___aomod@dividend+5)^0,w,c
  6120  001D82  500F               	movf	(i2___aomod@divisor+6)^0,w,c
  6121  001D84  5807               	subwfb	(i2___aomod@dividend+6)^0,w,c
  6122  001D86  5010               	movf	(i2___aomod@divisor+7)^0,w,c
  6123  001D88  5808               	subwfb	(i2___aomod@dividend+7)^0,w,c
  6124  001D8A  A0D8               	btfss	status,0,c
  6125  001D8C  EFCA  F00E         	goto	i2u152_41
  6126  001D90  EFCC  F00E         	goto	i2u152_40
  6127  001D94                     i2u152_41:
  6128  001D94  EFDC  F00E         	goto	i2l2356
  6129  001D98                     i2u152_40:
  6130  001D98  5009               	movf	i2___aomod@divisor^0,w,c
  6131  001D9A  5E01               	subwf	i2___aomod@dividend^0,f,c
  6132  001D9C  500A               	movf	(i2___aomod@divisor+1)^0,w,c
  6133  001D9E  5A02               	subwfb	(i2___aomod@dividend+1)^0,f,c
  6134  001DA0  500B               	movf	(i2___aomod@divisor+2)^0,w,c
  6135  001DA2  5A03               	subwfb	(i2___aomod@dividend+2)^0,f,c
  6136  001DA4  500C               	movf	(i2___aomod@divisor+3)^0,w,c
  6137  001DA6  5A04               	subwfb	(i2___aomod@dividend+3)^0,f,c
  6138  001DA8  500D               	movf	(i2___aomod@divisor+4)^0,w,c
  6139  001DAA  5A05               	subwfb	(i2___aomod@dividend+4)^0,f,c
  6140  001DAC  500E               	movf	(i2___aomod@divisor+5)^0,w,c
  6141  001DAE  5A06               	subwfb	(i2___aomod@dividend+5)^0,f,c
  6142  001DB0  500F               	movf	(i2___aomod@divisor+6)^0,w,c
  6143  001DB2  5A07               	subwfb	(i2___aomod@dividend+6)^0,f,c
  6144  001DB4  5010               	movf	(i2___aomod@divisor+7)^0,w,c
  6145  001DB6  5A08               	subwfb	(i2___aomod@dividend+7)^0,f,c
  6146  001DB8                     i2l2356:
  6147  001DB8  90D8               	bcf	status,0,c
  6148  001DBA  3210               	rrcf	(i2___aomod@divisor+7)^0,f,c
  6149  001DBC  320F               	rrcf	(i2___aomod@divisor+6)^0,f,c
  6150  001DBE  320E               	rrcf	(i2___aomod@divisor+5)^0,f,c
  6151  001DC0  320D               	rrcf	(i2___aomod@divisor+4)^0,f,c
  6152  001DC2  320C               	rrcf	(i2___aomod@divisor+3)^0,f,c
  6153  001DC4  320B               	rrcf	(i2___aomod@divisor+2)^0,f,c
  6154  001DC6  320A               	rrcf	(i2___aomod@divisor+1)^0,f,c
  6155  001DC8  3209               	rrcf	i2___aomod@divisor^0,f,c
  6156  001DCA  2E11               	decfsz	i2___aomod@counter^0,f,c
  6157  001DCC  EFB5  F00E         	goto	i2l2352
  6158  001DD0                     i2l2360:
  6159  001DD0  5012               	movf	i2___aomod@sign^0,w,c
  6160  001DD2  B4D8               	btfsc	status,2,c
  6161  001DD4  EFEE  F00E         	goto	i2u153_41
  6162  001DD8  EFF0  F00E         	goto	i2u153_40
  6163  001DDC                     i2u153_41:
  6164  001DDC  EF00  F00F         	goto	i2l2364
  6165  001DE0                     i2u153_40:
  6166  001DE0  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
  6167  001DE2  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
  6168  001DE4  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
  6169  001DE6  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
  6170  001DE8  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
  6171  001DEA  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
  6172  001DEC  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
  6173  001DEE  6C01               	negf	i2___aomod@dividend^0,c
  6174  001DF0  0E00               	movlw	0
  6175  001DF2  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
  6176  001DF4  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
  6177  001DF6  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
  6178  001DF8  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
  6179  001DFA  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
  6180  001DFC  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
  6181  001DFE  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
  6182  001E00                     i2l2364:
  6183  001E00  C001  F001         	movff	i2___aomod@dividend,?i2___aomod
  6184  001E04  C002  F002         	movff	i2___aomod@dividend+1,?i2___aomod+1
  6185  001E08  C003  F003         	movff	i2___aomod@dividend+2,?i2___aomod+2
  6186  001E0C  C004  F004         	movff	i2___aomod@dividend+3,?i2___aomod+3
  6187  001E10  C005  F005         	movff	i2___aomod@dividend+4,?i2___aomod+4
  6188  001E14  C006  F006         	movff	i2___aomod@dividend+5,?i2___aomod+5
  6189  001E18  C007  F007         	movff	i2___aomod@dividend+6,?i2___aomod+6
  6190  001E1C  C008  F008         	movff	i2___aomod@dividend+7,?i2___aomod+7
  6191  001E20  0012               	return		;funcret
  6192  001E22                     __end_ofi2___aomod:
  6193                           	opt callstack 0
  6194                           
  6195 ;; *************** function i2___aodiv *****************
  6196 ;; Defined at:
  6197 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  6198 ;; Parameters:    Size  Location     Type
  6199 ;;  dividend        8    0[COMRAM] long long 
  6200 ;;  divisor         8    8[COMRAM] long long 
  6201 ;; Auto vars:     Size  Location     Type
  6202 ;;  __aodiv         8   18[COMRAM] long long 
  6203 ;;  __aodiv         1   17[COMRAM] unsigned char 
  6204 ;;  __aodiv         1   16[COMRAM] unsigned char 
  6205 ;; Return value:  Size  Location     Type
  6206 ;;                  8    0[COMRAM] long long 
  6207 ;; Registers used:
  6208 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6209 ;; Tracked objects:
  6210 ;;		On entry : 0/0
  6211 ;;		On exit  : 0/0
  6212 ;;		Unchanged: 0/0
  6213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6214 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6215 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6217 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6218 ;;Total ram usage:       26 bytes
  6219 ;; Hardware stack levels used:    1
  6220 ;; This function calls:
  6221 ;;		Nothing
  6222 ;; This function is called by:
  6223 ;;		i2_dtoa
  6224 ;; This function uses a non-reentrant model
  6225 ;;
  6226                           
  6227                           	psect	text52
  6228  0019D0                     __ptext52:
  6229                           	opt callstack 0
  6230  0019D0                     i2___aodiv:
  6231                           	opt callstack 15
  6232  0019D0  0E00               	movlw	0
  6233  0019D2  6E12               	movwf	i2___aodiv@sign^0,c
  6234  0019D4  BE10               	btfsc	(i2___aodiv@divisor+7)^0,7,c
  6235  0019D6  EFF1  F00C         	goto	i2u141_40
  6236  0019DA  EFEF  F00C         	goto	i2u141_41
  6237  0019DE                     i2u141_41:
  6238  0019DE  EF03  F00D         	goto	i2l2296
  6239  0019E2                     i2u141_40:
  6240  0019E2  1E10               	comf	(i2___aodiv@divisor+7)^0,f,c
  6241  0019E4  1E0F               	comf	(i2___aodiv@divisor+6)^0,f,c
  6242  0019E6  1E0E               	comf	(i2___aodiv@divisor+5)^0,f,c
  6243  0019E8  1E0D               	comf	(i2___aodiv@divisor+4)^0,f,c
  6244  0019EA  1E0C               	comf	(i2___aodiv@divisor+3)^0,f,c
  6245  0019EC  1E0B               	comf	(i2___aodiv@divisor+2)^0,f,c
  6246  0019EE  1E0A               	comf	(i2___aodiv@divisor+1)^0,f,c
  6247  0019F0  6C09               	negf	i2___aodiv@divisor^0,c
  6248  0019F2  0E00               	movlw	0
  6249  0019F4  220A               	addwfc	(i2___aodiv@divisor+1)^0,f,c
  6250  0019F6  220B               	addwfc	(i2___aodiv@divisor+2)^0,f,c
  6251  0019F8  220C               	addwfc	(i2___aodiv@divisor+3)^0,f,c
  6252  0019FA  220D               	addwfc	(i2___aodiv@divisor+4)^0,f,c
  6253  0019FC  220E               	addwfc	(i2___aodiv@divisor+5)^0,f,c
  6254  0019FE  220F               	addwfc	(i2___aodiv@divisor+6)^0,f,c
  6255  001A00  2210               	addwfc	(i2___aodiv@divisor+7)^0,f,c
  6256  001A02  0E01               	movlw	1
  6257  001A04  6E12               	movwf	i2___aodiv@sign^0,c
  6258  001A06                     i2l2296:
  6259  001A06  BE08               	btfsc	(i2___aodiv@dividend+7)^0,7,c
  6260  001A08  EF0A  F00D         	goto	i2u142_40
  6261  001A0C  EF08  F00D         	goto	i2u142_41
  6262  001A10                     i2u142_41:
  6263  001A10  EF1C  F00D         	goto	i2l2302
  6264  001A14                     i2u142_40:
  6265  001A14  1E08               	comf	(i2___aodiv@dividend+7)^0,f,c
  6266  001A16  1E07               	comf	(i2___aodiv@dividend+6)^0,f,c
  6267  001A18  1E06               	comf	(i2___aodiv@dividend+5)^0,f,c
  6268  001A1A  1E05               	comf	(i2___aodiv@dividend+4)^0,f,c
  6269  001A1C  1E04               	comf	(i2___aodiv@dividend+3)^0,f,c
  6270  001A1E  1E03               	comf	(i2___aodiv@dividend+2)^0,f,c
  6271  001A20  1E02               	comf	(i2___aodiv@dividend+1)^0,f,c
  6272  001A22  6C01               	negf	i2___aodiv@dividend^0,c
  6273  001A24  0E00               	movlw	0
  6274  001A26  2202               	addwfc	(i2___aodiv@dividend+1)^0,f,c
  6275  001A28  2203               	addwfc	(i2___aodiv@dividend+2)^0,f,c
  6276  001A2A  2204               	addwfc	(i2___aodiv@dividend+3)^0,f,c
  6277  001A2C  2205               	addwfc	(i2___aodiv@dividend+4)^0,f,c
  6278  001A2E  2206               	addwfc	(i2___aodiv@dividend+5)^0,f,c
  6279  001A30  2207               	addwfc	(i2___aodiv@dividend+6)^0,f,c
  6280  001A32  2208               	addwfc	(i2___aodiv@dividend+7)^0,f,c
  6281  001A34  0E01               	movlw	1
  6282  001A36  1A12               	xorwf	i2___aodiv@sign^0,f,c
  6283  001A38                     i2l2302:
  6284  001A38  EE20  F013         	lfsr	2,i2___aodiv@quotient
  6285  001A3C  0E07               	movlw	7
  6286  001A3E                     i2u143_41:
  6287  001A3E  6ADE               	clrf	postinc2,c
  6288  001A40  06E8               	decf	wreg,f,c
  6289  001A42  E2FD               	bc	i2u143_41
  6290  001A44  5009               	movf	i2___aodiv@divisor^0,w,c
  6291  001A46  100A               	iorwf	(i2___aodiv@divisor+1)^0,w,c
  6292  001A48  100B               	iorwf	(i2___aodiv@divisor+2)^0,w,c
  6293  001A4A  100C               	iorwf	(i2___aodiv@divisor+3)^0,w,c
  6294  001A4C  100D               	iorwf	(i2___aodiv@divisor+4)^0,w,c
  6295  001A4E  100E               	iorwf	(i2___aodiv@divisor+5)^0,w,c
  6296  001A50  100F               	iorwf	(i2___aodiv@divisor+6)^0,w,c
  6297  001A52  1010               	iorwf	(i2___aodiv@divisor+7)^0,w,c
  6298  001A54  B4D8               	btfsc	status,2,c
  6299  001A56  EF2F  F00D         	goto	i2u144_41
  6300  001A5A  EF31  F00D         	goto	i2u144_40
  6301  001A5E                     i2u144_41:
  6302  001A5E  EF83  F00D         	goto	i2l2324
  6303  001A62                     i2u144_40:
  6304  001A62  0E01               	movlw	1
  6305  001A64  6E11               	movwf	i2___aodiv@counter^0,c
  6306  001A66  EF3F  F00D         	goto	i2l2310
  6307  001A6A                     i2l2308:
  6308  001A6A  90D8               	bcf	status,0,c
  6309  001A6C  3609               	rlcf	i2___aodiv@divisor^0,f,c
  6310  001A6E  360A               	rlcf	(i2___aodiv@divisor+1)^0,f,c
  6311  001A70  360B               	rlcf	(i2___aodiv@divisor+2)^0,f,c
  6312  001A72  360C               	rlcf	(i2___aodiv@divisor+3)^0,f,c
  6313  001A74  360D               	rlcf	(i2___aodiv@divisor+4)^0,f,c
  6314  001A76  360E               	rlcf	(i2___aodiv@divisor+5)^0,f,c
  6315  001A78  360F               	rlcf	(i2___aodiv@divisor+6)^0,f,c
  6316  001A7A  3610               	rlcf	(i2___aodiv@divisor+7)^0,f,c
  6317  001A7C  2A11               	incf	i2___aodiv@counter^0,f,c
  6318  001A7E                     i2l2310:
  6319  001A7E  AE10               	btfss	(i2___aodiv@divisor+7)^0,7,c
  6320  001A80  EF44  F00D         	goto	i2u145_41
  6321  001A84  EF46  F00D         	goto	i2u145_40
  6322  001A88                     i2u145_41:
  6323  001A88  EF35  F00D         	goto	i2l2308
  6324  001A8C                     i2u145_40:
  6325  001A8C                     i2l2312:
  6326  001A8C  90D8               	bcf	status,0,c
  6327  001A8E  3613               	rlcf	i2___aodiv@quotient^0,f,c
  6328  001A90  3614               	rlcf	(i2___aodiv@quotient+1)^0,f,c
  6329  001A92  3615               	rlcf	(i2___aodiv@quotient+2)^0,f,c
  6330  001A94  3616               	rlcf	(i2___aodiv@quotient+3)^0,f,c
  6331  001A96  3617               	rlcf	(i2___aodiv@quotient+4)^0,f,c
  6332  001A98  3618               	rlcf	(i2___aodiv@quotient+5)^0,f,c
  6333  001A9A  3619               	rlcf	(i2___aodiv@quotient+6)^0,f,c
  6334  001A9C  361A               	rlcf	(i2___aodiv@quotient+7)^0,f,c
  6335  001A9E  5009               	movf	i2___aodiv@divisor^0,w,c
  6336  001AA0  5C01               	subwf	i2___aodiv@dividend^0,w,c
  6337  001AA2  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
  6338  001AA4  5802               	subwfb	(i2___aodiv@dividend+1)^0,w,c
  6339  001AA6  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
  6340  001AA8  5803               	subwfb	(i2___aodiv@dividend+2)^0,w,c
  6341  001AAA  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
  6342  001AAC  5804               	subwfb	(i2___aodiv@dividend+3)^0,w,c
  6343  001AAE  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
  6344  001AB0  5805               	subwfb	(i2___aodiv@dividend+4)^0,w,c
  6345  001AB2  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
  6346  001AB4  5806               	subwfb	(i2___aodiv@dividend+5)^0,w,c
  6347  001AB6  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
  6348  001AB8  5807               	subwfb	(i2___aodiv@dividend+6)^0,w,c
  6349  001ABA  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
  6350  001ABC  5808               	subwfb	(i2___aodiv@dividend+7)^0,w,c
  6351  001ABE  A0D8               	btfss	status,0,c
  6352  001AC0  EF64  F00D         	goto	i2u146_41
  6353  001AC4  EF66  F00D         	goto	i2u146_40
  6354  001AC8                     i2u146_41:
  6355  001AC8  EF77  F00D         	goto	i2l2320
  6356  001ACC                     i2u146_40:
  6357  001ACC  5009               	movf	i2___aodiv@divisor^0,w,c
  6358  001ACE  5E01               	subwf	i2___aodiv@dividend^0,f,c
  6359  001AD0  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
  6360  001AD2  5A02               	subwfb	(i2___aodiv@dividend+1)^0,f,c
  6361  001AD4  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
  6362  001AD6  5A03               	subwfb	(i2___aodiv@dividend+2)^0,f,c
  6363  001AD8  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
  6364  001ADA  5A04               	subwfb	(i2___aodiv@dividend+3)^0,f,c
  6365  001ADC  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
  6366  001ADE  5A05               	subwfb	(i2___aodiv@dividend+4)^0,f,c
  6367  001AE0  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
  6368  001AE2  5A06               	subwfb	(i2___aodiv@dividend+5)^0,f,c
  6369  001AE4  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
  6370  001AE6  5A07               	subwfb	(i2___aodiv@dividend+6)^0,f,c
  6371  001AE8  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
  6372  001AEA  5A08               	subwfb	(i2___aodiv@dividend+7)^0,f,c
  6373  001AEC  8013               	bsf	i2___aodiv@quotient^0,0,c
  6374  001AEE                     i2l2320:
  6375  001AEE  90D8               	bcf	status,0,c
  6376  001AF0  3210               	rrcf	(i2___aodiv@divisor+7)^0,f,c
  6377  001AF2  320F               	rrcf	(i2___aodiv@divisor+6)^0,f,c
  6378  001AF4  320E               	rrcf	(i2___aodiv@divisor+5)^0,f,c
  6379  001AF6  320D               	rrcf	(i2___aodiv@divisor+4)^0,f,c
  6380  001AF8  320C               	rrcf	(i2___aodiv@divisor+3)^0,f,c
  6381  001AFA  320B               	rrcf	(i2___aodiv@divisor+2)^0,f,c
  6382  001AFC  320A               	rrcf	(i2___aodiv@divisor+1)^0,f,c
  6383  001AFE  3209               	rrcf	i2___aodiv@divisor^0,f,c
  6384  001B00  2E11               	decfsz	i2___aodiv@counter^0,f,c
  6385  001B02  EF46  F00D         	goto	i2l2312
  6386  001B06                     i2l2324:
  6387  001B06  5012               	movf	i2___aodiv@sign^0,w,c
  6388  001B08  B4D8               	btfsc	status,2,c
  6389  001B0A  EF89  F00D         	goto	i2u147_41
  6390  001B0E  EF8B  F00D         	goto	i2u147_40
  6391  001B12                     i2u147_41:
  6392  001B12  EF9B  F00D         	goto	i2l2328
  6393  001B16                     i2u147_40:
  6394  001B16  1E1A               	comf	(i2___aodiv@quotient+7)^0,f,c
  6395  001B18  1E19               	comf	(i2___aodiv@quotient+6)^0,f,c
  6396  001B1A  1E18               	comf	(i2___aodiv@quotient+5)^0,f,c
  6397  001B1C  1E17               	comf	(i2___aodiv@quotient+4)^0,f,c
  6398  001B1E  1E16               	comf	(i2___aodiv@quotient+3)^0,f,c
  6399  001B20  1E15               	comf	(i2___aodiv@quotient+2)^0,f,c
  6400  001B22  1E14               	comf	(i2___aodiv@quotient+1)^0,f,c
  6401  001B24  6C13               	negf	i2___aodiv@quotient^0,c
  6402  001B26  0E00               	movlw	0
  6403  001B28  2214               	addwfc	(i2___aodiv@quotient+1)^0,f,c
  6404  001B2A  2215               	addwfc	(i2___aodiv@quotient+2)^0,f,c
  6405  001B2C  2216               	addwfc	(i2___aodiv@quotient+3)^0,f,c
  6406  001B2E  2217               	addwfc	(i2___aodiv@quotient+4)^0,f,c
  6407  001B30  2218               	addwfc	(i2___aodiv@quotient+5)^0,f,c
  6408  001B32  2219               	addwfc	(i2___aodiv@quotient+6)^0,f,c
  6409  001B34  221A               	addwfc	(i2___aodiv@quotient+7)^0,f,c
  6410  001B36                     i2l2328:
  6411  001B36  C013  F001         	movff	i2___aodiv@quotient,?i2___aodiv
  6412  001B3A  C014  F002         	movff	i2___aodiv@quotient+1,?i2___aodiv+1
  6413  001B3E  C015  F003         	movff	i2___aodiv@quotient+2,?i2___aodiv+2
  6414  001B42  C016  F004         	movff	i2___aodiv@quotient+3,?i2___aodiv+3
  6415  001B46  C017  F005         	movff	i2___aodiv@quotient+4,?i2___aodiv+4
  6416  001B4A  C018  F006         	movff	i2___aodiv@quotient+5,?i2___aodiv+5
  6417  001B4E  C019  F007         	movff	i2___aodiv@quotient+6,?i2___aodiv+6
  6418  001B52  C01A  F008         	movff	i2___aodiv@quotient+7,?i2___aodiv+7
  6419  001B56  0012               	return		;funcret
  6420  001B58                     __end_ofi2___aodiv:
  6421                           	opt callstack 0
  6422                           
  6423 ;; *************** function _I2C_Write *****************
  6424 ;; Defined at:
  6425 ;;		line 136 in file "mcc_generated_files/i2c_slave.c"
  6426 ;; Parameters:    Size  Location     Type
  6427 ;;  data            1    wreg     unsigned char 
  6428 ;; Auto vars:     Size  Location     Type
  6429 ;;  data            1    1[COMRAM] unsigned char 
  6430 ;; Return value:  Size  Location     Type
  6431 ;;                  1    wreg      void 
  6432 ;; Registers used:
  6433 ;;		wreg, status,2, cstack
  6434 ;; Tracked objects:
  6435 ;;		On entry : 0/0
  6436 ;;		On exit  : 0/0
  6437 ;;		Unchanged: 0/0
  6438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6440 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6442 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6443 ;;Total ram usage:        1 bytes
  6444 ;; Hardware stack levels used:    1
  6445 ;; Hardware stack levels required when called:    1
  6446 ;; This function calls:
  6447 ;;		_I2C_SlaveSendTxData
  6448 ;; This function is called by:
  6449 ;;		_myInt
  6450 ;; This function uses a non-reentrant model
  6451 ;;
  6452                           
  6453                           	psect	text53
  6454  00284A                     __ptext53:
  6455                           	opt callstack 0
  6456  00284A                     _I2C_Write:
  6457                           	opt callstack 18
  6458                           
  6459                           ;incstack = 0
  6460                           ;I2C_Write@data stored from wreg
  6461  00284A  6E02               	movwf	I2C_Write@data^0,c
  6462  00284C                     
  6463                           ;mcc_generated_files/i2c_slave.c: 136: void I2C_Write(uint8_t data);mcc_generated_files/
      +                          i2c_slave.c: 137: {;mcc_generated_files/i2c_slave.c: 138:     I2C_SlaveSendTxData(data);
  6464  00284C  5002               	movf	I2C_Write@data^0,w,c
  6465  00284E  EC38  F014         	call	_I2C_SlaveSendTxData
  6466  002852  0012               	return		;funcret
  6467  002854                     __end_of_I2C_Write:
  6468                           	opt callstack 0
  6469                           
  6470 ;; *************** function _I2C_Read *****************
  6471 ;; Defined at:
  6472 ;;		line 131 in file "mcc_generated_files/i2c_slave.c"
  6473 ;; Parameters:    Size  Location     Type
  6474 ;;		None
  6475 ;; Auto vars:     Size  Location     Type
  6476 ;;		None
  6477 ;; Return value:  Size  Location     Type
  6478 ;;                  1    wreg      unsigned char 
  6479 ;; Registers used:
  6480 ;;		wreg, status,2, cstack
  6481 ;; Tracked objects:
  6482 ;;		On entry : 0/0
  6483 ;;		On exit  : 0/0
  6484 ;;		Unchanged: 0/0
  6485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6490 ;;Total ram usage:        0 bytes
  6491 ;; Hardware stack levels used:    1
  6492 ;; Hardware stack levels required when called:    1
  6493 ;; This function calls:
  6494 ;;		_I2C_SlaveGetRxData
  6495 ;; This function is called by:
  6496 ;;		_myInt
  6497 ;; This function uses a non-reentrant model
  6498 ;;
  6499                           
  6500                           	psect	text54
  6501  00287E                     __ptext54:
  6502                           	opt callstack 0
  6503  00287E                     _I2C_Read:
  6504                           	opt callstack 18
  6505  00287E                     
  6506                           ;mcc_generated_files/i2c_slave.c: 133:    return I2C_SlaveGetRxData();
  6507  00287E  EC4A  F014         	call	_I2C_SlaveGetRxData	;wreg free
  6508  002882  0012               	return		;funcret
  6509  002884                     __end_of_I2C_Read:
  6510                           	opt callstack 0
  6511                           
  6512 ;; *************** function _I2C_SlaveWrColCallBack *****************
  6513 ;; Defined at:
  6514 ;;		line 269 in file "mcc_generated_files/i2c_slave.c"
  6515 ;; Parameters:    Size  Location     Type
  6516 ;;		None
  6517 ;; Auto vars:     Size  Location     Type
  6518 ;;		None
  6519 ;; Return value:  Size  Location     Type
  6520 ;;                  1    wreg      void 
  6521 ;; Registers used:
  6522 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6523 ;; Tracked objects:
  6524 ;;		On entry : 0/0
  6525 ;;		On exit  : 0/0
  6526 ;;		Unchanged: 0/0
  6527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6532 ;;Total ram usage:        0 bytes
  6533 ;; Hardware stack levels used:    1
  6534 ;; Hardware stack levels required when called:    1
  6535 ;; This function calls:
  6536 ;;		Absolute function
  6537 ;;		_I2C_SlaveDefWrColInterruptHandler
  6538 ;; This function is called by:
  6539 ;;		_I2C_Isr
  6540 ;; This function uses a non-reentrant model
  6541 ;;
  6542                           
  6543                           	psect	text55
  6544  002572                     __ptext55:
  6545                           	opt callstack 0
  6546  002572                     _I2C_SlaveWrColCallBack:
  6547                           	opt callstack 18
  6548  002572                     
  6549                           ;mcc_generated_files/i2c_slave.c: 271:     if ( I2C_SlaveWrColInterruptHandler)
  6550  002572  0100               	movlb	0	; () banked
  6551  002574  51D9               	movf	_I2C_SlaveWrColInterruptHandler& (0+255),w,b
  6552  002576  11DA               	iorwf	(_I2C_SlaveWrColInterruptHandler+1)& (0+255),w,b
  6553  002578  B4D8               	btfsc	status,2,c
  6554  00257A  EFC1  F012         	goto	i2u217_41
  6555  00257E  EFC3  F012         	goto	i2u217_40
  6556  002582                     i2u217_41:
  6557  002582  EFD0  F012         	goto	i2l384
  6558  002586                     i2u217_40:
  6559  002586                     
  6560                           ; BSR set to: 0
  6561                           ;mcc_generated_files/i2c_slave.c: 272:     {;mcc_generated_files/i2c_slave.c: 273:      
      +                              I2C_SlaveWrColInterruptHandler();
  6562  002586  D802               	call	i2u218_48
  6563  002588  EFD0  F012         	goto	i2u218_49
  6564  00258C                     i2u218_48:
  6565  00258C  0005               	push	
  6566  00258E  6EFA               	movwf	pclath,c
  6567  002590  51D9               	movf	_I2C_SlaveWrColInterruptHandler& (0+255),w,b
  6568  002592  6EFD               	movwf	tosl,c
  6569  002594  51DA               	movf	(_I2C_SlaveWrColInterruptHandler+1)& (0+255),w,b
  6570  002596  6EFE               	movwf	tosh,c
  6571  002598  50F8               	movf	tblptru,w,c
  6572  00259A  6EFF               	movwf	tosu,c
  6573  00259C  50FA               	movf	pclath,w,c
  6574  00259E  0012               	return		;indir
  6575  0025A0                     i2u218_49:
  6576  0025A0                     i2l384:
  6577  0025A0  0012               	return		;funcret
  6578  0025A2                     __end_of_I2C_SlaveWrColCallBack:
  6579                           	opt callstack 0
  6580                           
  6581 ;; *************** function _I2C_SlaveDefWrColInterruptHandler *****************
  6582 ;; Defined at:
  6583 ;;		line 277 in file "mcc_generated_files/i2c_slave.c"
  6584 ;; Parameters:    Size  Location     Type
  6585 ;;		None
  6586 ;; Auto vars:     Size  Location     Type
  6587 ;;		None
  6588 ;; Return value:  Size  Location     Type
  6589 ;;                  1    wreg      void 
  6590 ;; Registers used:
  6591 ;;		None
  6592 ;; Tracked objects:
  6593 ;;		On entry : 0/0
  6594 ;;		On exit  : 0/0
  6595 ;;		Unchanged: 0/0
  6596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6601 ;;Total ram usage:        0 bytes
  6602 ;; Hardware stack levels used:    1
  6603 ;; This function calls:
  6604 ;;		Nothing
  6605 ;; This function is called by:
  6606 ;;		_I2C_Open
  6607 ;;		_I2C_SlaveWrColCallBack
  6608 ;; This function uses a non-reentrant model
  6609 ;;
  6610                           
  6611                           	psect	text56
  6612  0028A0                     __ptext56:
  6613                           	opt callstack 0
  6614  0028A0                     _I2C_SlaveDefWrColInterruptHandler:
  6615                           	opt callstack 18
  6616  0028A0  0012               	return		;funcret
  6617  0028A2                     __end_of_I2C_SlaveDefWrColInterruptHandler:
  6618                           	opt callstack 0
  6619                           
  6620 ;; *************** function _I2C_SlaveWrCallBack *****************
  6621 ;; Defined at:
  6622 ;;		line 236 in file "mcc_generated_files/i2c_slave.c"
  6623 ;; Parameters:    Size  Location     Type
  6624 ;;		None
  6625 ;; Auto vars:     Size  Location     Type
  6626 ;;		None
  6627 ;; Return value:  Size  Location     Type
  6628 ;;                  1    wreg      void 
  6629 ;; Registers used:
  6630 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6631 ;; Tracked objects:
  6632 ;;		On entry : 0/0
  6633 ;;		On exit  : 0/0
  6634 ;;		Unchanged: 0/0
  6635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6640 ;;Total ram usage:        0 bytes
  6641 ;; Hardware stack levels used:    1
  6642 ;; Hardware stack levels required when called:    2
  6643 ;; This function calls:
  6644 ;;		Absolute function
  6645 ;;		_I2C_SlaveDefWrInterruptHandler
  6646 ;; This function is called by:
  6647 ;;		_I2C_Isr
  6648 ;; This function uses a non-reentrant model
  6649 ;;
  6650                           
  6651                           	psect	text57
  6652  0025A2                     __ptext57:
  6653                           	opt callstack 0
  6654  0025A2                     _I2C_SlaveWrCallBack:
  6655                           	opt callstack 17
  6656  0025A2                     
  6657                           ;mcc_generated_files/i2c_slave.c: 238:     if (I2C_SlaveWrInterruptHandler)
  6658  0025A2  0100               	movlb	0	; () banked
  6659  0025A4  51DF               	movf	_I2C_SlaveWrInterruptHandler& (0+255),w,b
  6660  0025A6  11E0               	iorwf	(_I2C_SlaveWrInterruptHandler+1)& (0+255),w,b
  6661  0025A8  B4D8               	btfsc	status,2,c
  6662  0025AA  EFD9  F012         	goto	i2u215_41
  6663  0025AE  EFDB  F012         	goto	i2u215_40
  6664  0025B2                     i2u215_41:
  6665  0025B2  EFE8  F012         	goto	i2l364
  6666  0025B6                     i2u215_40:
  6667  0025B6                     
  6668                           ; BSR set to: 0
  6669                           ;mcc_generated_files/i2c_slave.c: 239:     {;mcc_generated_files/i2c_slave.c: 240:      
      +                             I2C_SlaveWrInterruptHandler();
  6670  0025B6  D802               	call	i2u216_48
  6671  0025B8  EFE8  F012         	goto	i2u216_49
  6672  0025BC                     i2u216_48:
  6673  0025BC  0005               	push	
  6674  0025BE  6EFA               	movwf	pclath,c
  6675  0025C0  51DF               	movf	_I2C_SlaveWrInterruptHandler& (0+255),w,b
  6676  0025C2  6EFD               	movwf	tosl,c
  6677  0025C4  51E0               	movf	(_I2C_SlaveWrInterruptHandler+1)& (0+255),w,b
  6678  0025C6  6EFE               	movwf	tosh,c
  6679  0025C8  50F8               	movf	tblptru,w,c
  6680  0025CA  6EFF               	movwf	tosu,c
  6681  0025CC  50FA               	movf	pclath,w,c
  6682  0025CE  0012               	return		;indir
  6683  0025D0                     i2u216_49:
  6684  0025D0                     i2l364:
  6685  0025D0  0012               	return		;funcret
  6686  0025D2                     __end_of_I2C_SlaveWrCallBack:
  6687                           	opt callstack 0
  6688                           
  6689 ;; *************** function _I2C_SlaveDefWrInterruptHandler *****************
  6690 ;; Defined at:
  6691 ;;		line 244 in file "mcc_generated_files/i2c_slave.c"
  6692 ;; Parameters:    Size  Location     Type
  6693 ;;		None
  6694 ;; Auto vars:     Size  Location     Type
  6695 ;;		None
  6696 ;; Return value:  Size  Location     Type
  6697 ;;                  1    wreg      void 
  6698 ;; Registers used:
  6699 ;;		wreg, status,2, cstack
  6700 ;; Tracked objects:
  6701 ;;		On entry : 0/0
  6702 ;;		On exit  : 0/0
  6703 ;;		Unchanged: 0/0
  6704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6709 ;;Total ram usage:        0 bytes
  6710 ;; Hardware stack levels used:    1
  6711 ;; Hardware stack levels required when called:    1
  6712 ;; This function calls:
  6713 ;;		_I2C_SlaveSendTxData
  6714 ;; This function is called by:
  6715 ;;		_I2C_Open
  6716 ;;		_I2C_SlaveWrCallBack
  6717 ;; This function uses a non-reentrant model
  6718 ;;
  6719                           
  6720                           	psect	text58
  6721  002868                     __ptext58:
  6722                           	opt callstack 0
  6723  002868                     _I2C_SlaveDefWrInterruptHandler:
  6724                           	opt callstack 17
  6725  002868                     
  6726                           ;mcc_generated_files/i2c_slave.c: 245:     I2C_SlaveSendTxData(i2cWrData);
  6727  002868  505C               	movf	_i2cWrData^0,w,c	;volatile
  6728  00286A  EC38  F014         	call	_I2C_SlaveSendTxData
  6729  00286E  0012               	return		;funcret
  6730  002870                     __end_of_I2C_SlaveDefWrInterruptHandler:
  6731                           	opt callstack 0
  6732                           
  6733 ;; *************** function _I2C_SlaveSendTxData *****************
  6734 ;; Defined at:
  6735 ;;		line 377 in file "mcc_generated_files/i2c_slave.c"
  6736 ;; Parameters:    Size  Location     Type
  6737 ;;  data            1    wreg     unsigned char 
  6738 ;; Auto vars:     Size  Location     Type
  6739 ;;  data            1    0[COMRAM] unsigned char 
  6740 ;; Return value:  Size  Location     Type
  6741 ;;                  1    wreg      void 
  6742 ;; Registers used:
  6743 ;;		wreg
  6744 ;; Tracked objects:
  6745 ;;		On entry : 0/0
  6746 ;;		On exit  : 0/0
  6747 ;;		Unchanged: 0/0
  6748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6750 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6752 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6753 ;;Total ram usage:        1 bytes
  6754 ;; Hardware stack levels used:    1
  6755 ;; This function calls:
  6756 ;;		Nothing
  6757 ;; This function is called by:
  6758 ;;		_I2C_Write
  6759 ;;		_I2C_SlaveDefWrInterruptHandler
  6760 ;; This function uses a non-reentrant model
  6761 ;;
  6762                           
  6763                           	psect	text59
  6764  002870                     __ptext59:
  6765                           	opt callstack 0
  6766  002870                     _I2C_SlaveSendTxData:
  6767                           	opt callstack 18
  6768                           
  6769                           ;incstack = 0
  6770                           ;I2C_SlaveSendTxData@data stored from wreg
  6771  002870  6E01               	movwf	I2C_SlaveSendTxData@data^0,c
  6772  002872                     
  6773                           ;mcc_generated_files/i2c_slave.c: 377: static __attribute__((inline)) void I2C_SlaveSend
      +                          TxData(uint8_t data);mcc_generated_files/i2c_slave.c: 378: {;mcc_generated_files/i2c_sla
      +                          ve.c: 379:     SSPBUF = data;
  6774  002872  C001  FFC9         	movff	I2C_SlaveSendTxData@data,4041	;volatile
  6775  002876  0012               	return		;funcret
  6776  002878                     __end_of_I2C_SlaveSendTxData:
  6777                           	opt callstack 0
  6778                           
  6779 ;; *************** function _I2C_SlaveRestart *****************
  6780 ;; Defined at:
  6781 ;;		line 362 in file "mcc_generated_files/i2c_slave.c"
  6782 ;; Parameters:    Size  Location     Type
  6783 ;;		None
  6784 ;; Auto vars:     Size  Location     Type
  6785 ;;		None
  6786 ;; Return value:  Size  Location     Type
  6787 ;;                  1    wreg      void 
  6788 ;; Registers used:
  6789 ;;		None
  6790 ;; Tracked objects:
  6791 ;;		On entry : 0/0
  6792 ;;		On exit  : 0/0
  6793 ;;		Unchanged: 0/0
  6794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6799 ;;Total ram usage:        0 bytes
  6800 ;; Hardware stack levels used:    1
  6801 ;; This function calls:
  6802 ;;		Nothing
  6803 ;; This function is called by:
  6804 ;;		_I2C_Isr
  6805 ;; This function uses a non-reentrant model
  6806 ;;
  6807                           
  6808                           	psect	text60
  6809  00288C                     __ptext60:
  6810                           	opt callstack 0
  6811  00288C                     _I2C_SlaveRestart:
  6812                           	opt callstack 19
  6813  00288C                     
  6814                           ;mcc_generated_files/i2c_slave.c: 364:     SSPCON2bits.RSEN = 1;
  6815  00288C  82C5               	bsf	197,1,c	;volatile
  6816  00288E  0012               	return		;funcret
  6817  002890                     __end_of_I2C_SlaveRestart:
  6818                           	opt callstack 0
  6819                           
  6820 ;; *************** function _I2C_SlaveReleaseClock *****************
  6821 ;; Defined at:
  6822 ;;		line 347 in file "mcc_generated_files/i2c_slave.c"
  6823 ;; Parameters:    Size  Location     Type
  6824 ;;		None
  6825 ;; Auto vars:     Size  Location     Type
  6826 ;;		None
  6827 ;; Return value:  Size  Location     Type
  6828 ;;                  1    wreg      void 
  6829 ;; Registers used:
  6830 ;;		None
  6831 ;; Tracked objects:
  6832 ;;		On entry : 0/0
  6833 ;;		On exit  : 0/0
  6834 ;;		Unchanged: 0/0
  6835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6840 ;;Total ram usage:        0 bytes
  6841 ;; Hardware stack levels used:    1
  6842 ;; This function calls:
  6843 ;;		Nothing
  6844 ;; This function is called by:
  6845 ;;		_I2C_Isr
  6846 ;; This function uses a non-reentrant model
  6847 ;;
  6848                           
  6849                           	psect	text61
  6850  002890                     __ptext61:
  6851                           	opt callstack 0
  6852  002890                     _I2C_SlaveReleaseClock:
  6853                           	opt callstack 19
  6854  002890                     
  6855                           ;mcc_generated_files/i2c_slave.c: 349:     SSPCON1bits.CKP = 1;
  6856  002890  88C6               	bsf	198,4,c	;volatile
  6857  002892  0012               	return		;funcret
  6858  002894                     __end_of_I2C_SlaveReleaseClock:
  6859                           	opt callstack 0
  6860                           
  6861 ;; *************** function _I2C_SlaveRdCallBack *****************
  6862 ;; Defined at:
  6863 ;;		line 219 in file "mcc_generated_files/i2c_slave.c"
  6864 ;; Parameters:    Size  Location     Type
  6865 ;;		None
  6866 ;; Auto vars:     Size  Location     Type
  6867 ;;		None
  6868 ;; Return value:  Size  Location     Type
  6869 ;;                  1    wreg      void 
  6870 ;; Registers used:
  6871 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6872 ;; Tracked objects:
  6873 ;;		On entry : 0/0
  6874 ;;		On exit  : 0/0
  6875 ;;		Unchanged: 0/0
  6876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6881 ;;Total ram usage:        0 bytes
  6882 ;; Hardware stack levels used:    1
  6883 ;; Hardware stack levels required when called:    2
  6884 ;; This function calls:
  6885 ;;		Absolute function
  6886 ;;		_I2C_SlaveDefRdInterruptHandler
  6887 ;; This function is called by:
  6888 ;;		_I2C_Isr
  6889 ;; This function uses a non-reentrant model
  6890 ;;
  6891                           
  6892                           	psect	text62
  6893  0025D2                     __ptext62:
  6894                           	opt callstack 0
  6895  0025D2                     _I2C_SlaveRdCallBack:
  6896                           	opt callstack 17
  6897  0025D2                     
  6898                           ;mcc_generated_files/i2c_slave.c: 221:     if (I2C_SlaveRdInterruptHandler)
  6899  0025D2  0100               	movlb	0	; () banked
  6900  0025D4  51E1               	movf	_I2C_SlaveRdInterruptHandler& (0+255),w,b
  6901  0025D6  11E2               	iorwf	(_I2C_SlaveRdInterruptHandler+1)& (0+255),w,b
  6902  0025D8  B4D8               	btfsc	status,2,c
  6903  0025DA  EFF1  F012         	goto	i2u221_41
  6904  0025DE  EFF3  F012         	goto	i2u221_40
  6905  0025E2                     i2u221_41:
  6906  0025E2  EF00  F013         	goto	i2l354
  6907  0025E6                     i2u221_40:
  6908  0025E6                     
  6909                           ; BSR set to: 0
  6910                           ;mcc_generated_files/i2c_slave.c: 222:     {;mcc_generated_files/i2c_slave.c: 223:      
      +                             I2C_SlaveRdInterruptHandler();
  6911  0025E6  D802               	call	i2u222_48
  6912  0025E8  EF00  F013         	goto	i2u222_49
  6913  0025EC                     i2u222_48:
  6914  0025EC  0005               	push	
  6915  0025EE  6EFA               	movwf	pclath,c
  6916  0025F0  51E1               	movf	_I2C_SlaveRdInterruptHandler& (0+255),w,b
  6917  0025F2  6EFD               	movwf	tosl,c
  6918  0025F4  51E2               	movf	(_I2C_SlaveRdInterruptHandler+1)& (0+255),w,b
  6919  0025F6  6EFE               	movwf	tosh,c
  6920  0025F8  50F8               	movf	tblptru,w,c
  6921  0025FA  6EFF               	movwf	tosu,c
  6922  0025FC  50FA               	movf	pclath,w,c
  6923  0025FE  0012               	return		;indir
  6924  002600                     i2u222_49:
  6925  002600                     i2l354:
  6926  002600  0012               	return		;funcret
  6927  002602                     __end_of_I2C_SlaveRdCallBack:
  6928                           	opt callstack 0
  6929                           
  6930 ;; *************** function _I2C_SlaveDefRdInterruptHandler *****************
  6931 ;; Defined at:
  6932 ;;		line 227 in file "mcc_generated_files/i2c_slave.c"
  6933 ;; Parameters:    Size  Location     Type
  6934 ;;		None
  6935 ;; Auto vars:     Size  Location     Type
  6936 ;;		None
  6937 ;; Return value:  Size  Location     Type
  6938 ;;                  1    wreg      void 
  6939 ;; Registers used:
  6940 ;;		wreg, status,2, cstack
  6941 ;; Tracked objects:
  6942 ;;		On entry : 0/0
  6943 ;;		On exit  : 0/0
  6944 ;;		Unchanged: 0/0
  6945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6950 ;;Total ram usage:        0 bytes
  6951 ;; Hardware stack levels used:    1
  6952 ;; Hardware stack levels required when called:    1
  6953 ;; This function calls:
  6954 ;;		_I2C_SlaveGetRxData
  6955 ;; This function is called by:
  6956 ;;		_I2C_Open
  6957 ;;		_I2C_SlaveRdCallBack
  6958 ;; This function uses a non-reentrant model
  6959 ;;
  6960                           
  6961                           	psect	text63
  6962  002854                     __ptext63:
  6963                           	opt callstack 0
  6964  002854                     _I2C_SlaveDefRdInterruptHandler:
  6965                           	opt callstack 17
  6966  002854                     
  6967                           ;mcc_generated_files/i2c_slave.c: 228:     i2cRdData = I2C_SlaveGetRxData();
  6968  002854  EC4A  F014         	call	_I2C_SlaveGetRxData	;wreg free
  6969  002858  0100               	movlb	0	; () banked
  6970  00285A  6FE8               	movwf	_i2cRdData& (0+255),b	;volatile
  6971  00285C                     
  6972                           ; BSR set to: 0
  6973  00285C  0012               	return		;funcret
  6974  00285E                     __end_of_I2C_SlaveDefRdInterruptHandler:
  6975                           	opt callstack 0
  6976                           
  6977 ;; *************** function _I2C_SlaveGetRxData *****************
  6978 ;; Defined at:
  6979 ;;		line 382 in file "mcc_generated_files/i2c_slave.c"
  6980 ;; Parameters:    Size  Location     Type
  6981 ;;		None
  6982 ;; Auto vars:     Size  Location     Type
  6983 ;;		None
  6984 ;; Return value:  Size  Location     Type
  6985 ;;                  1    wreg      unsigned char 
  6986 ;; Registers used:
  6987 ;;		wreg, status,2
  6988 ;; Tracked objects:
  6989 ;;		On entry : 0/0
  6990 ;;		On exit  : 0/0
  6991 ;;		Unchanged: 0/0
  6992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6997 ;;Total ram usage:        0 bytes
  6998 ;; Hardware stack levels used:    1
  6999 ;; This function calls:
  7000 ;;		Nothing
  7001 ;; This function is called by:
  7002 ;;		_I2C_Read
  7003 ;;		_I2C_Isr
  7004 ;;		_I2C_SlaveDefRdInterruptHandler
  7005 ;; This function uses a non-reentrant model
  7006 ;;
  7007                           
  7008                           	psect	text64
  7009  002894                     __ptext64:
  7010                           	opt callstack 0
  7011  002894                     _I2C_SlaveGetRxData:
  7012                           	opt callstack 18
  7013  002894                     
  7014                           ;mcc_generated_files/i2c_slave.c: 384:     return SSPBUF;
  7015  002894  50C9               	movf	201,w,c	;volatile
  7016  002896  0012               	return		;funcret
  7017  002898                     __end_of_I2C_SlaveGetRxData:
  7018                           	opt callstack 0
  7019                           
  7020 ;; *************** function _I2C_SlaveIsWriteCollision *****************
  7021 ;; Defined at:
  7022 ;;		line 352 in file "mcc_generated_files/i2c_slave.c"
  7023 ;; Parameters:    Size  Location     Type
  7024 ;;		None
  7025 ;; Auto vars:     Size  Location     Type
  7026 ;;		None
  7027 ;; Return value:  Size  Location     Type
  7028 ;;                  1    wreg      _Bool 
  7029 ;; Registers used:
  7030 ;;		wreg
  7031 ;; Tracked objects:
  7032 ;;		On entry : 0/0
  7033 ;;		On exit  : 0/0
  7034 ;;		Unchanged: 0/0
  7035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7040 ;;Total ram usage:        0 bytes
  7041 ;; Hardware stack levels used:    1
  7042 ;; This function calls:
  7043 ;;		Nothing
  7044 ;; This function is called by:
  7045 ;;		_I2C_Isr
  7046 ;; This function uses a non-reentrant model
  7047 ;;
  7048                           
  7049                           	psect	text65
  7050  002752                     __ptext65:
  7051                           	opt callstack 0
  7052  002752                     _I2C_SlaveIsWriteCollision:
  7053                           	opt callstack 19
  7054  002752                     
  7055                           ;mcc_generated_files/i2c_slave.c: 354:     return SSPCON1bits.WCOL;
  7056  002752  BEC6               	btfsc	198,7,c	;volatile
  7057  002754  EFAE  F013         	goto	i2u214_41
  7058  002758  EFB1  F013         	goto	i2u214_40
  7059  00275C                     i2u214_41:
  7060  00275C  0E01               	movlw	1
  7061  00275E  EFB2  F013         	goto	i2u214_46
  7062  002762                     i2u214_40:
  7063  002762  0E00               	movlw	0
  7064  002764                     i2u214_46:
  7065  002764  0012               	return		;funcret
  7066  002766                     __end_of_I2C_SlaveIsWriteCollision:
  7067                           	opt callstack 0
  7068                           
  7069 ;; *************** function _I2C_SlaveIsRxBufFull *****************
  7070 ;; Defined at:
  7071 ;;		line 372 in file "mcc_generated_files/i2c_slave.c"
  7072 ;; Parameters:    Size  Location     Type
  7073 ;;		None
  7074 ;; Auto vars:     Size  Location     Type
  7075 ;;		None
  7076 ;; Return value:  Size  Location     Type
  7077 ;;                  1    wreg      _Bool 
  7078 ;; Registers used:
  7079 ;;		wreg
  7080 ;; Tracked objects:
  7081 ;;		On entry : 0/0
  7082 ;;		On exit  : 0/0
  7083 ;;		Unchanged: 0/0
  7084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7089 ;;Total ram usage:        0 bytes
  7090 ;; Hardware stack levels used:    1
  7091 ;; This function calls:
  7092 ;;		Nothing
  7093 ;; This function is called by:
  7094 ;;		_I2C_Isr
  7095 ;; This function uses a non-reentrant model
  7096 ;;
  7097                           
  7098                           	psect	text66
  7099  002766                     __ptext66:
  7100                           	opt callstack 0
  7101  002766                     _I2C_SlaveIsRxBufFull:
  7102                           	opt callstack 19
  7103  002766                     
  7104                           ;mcc_generated_files/i2c_slave.c: 374:     return SSPSTATbits.BF;
  7105  002766  B0C7               	btfsc	199,0,c	;volatile
  7106  002768  EFB8  F013         	goto	i2u220_41
  7107  00276C  EFBB  F013         	goto	i2u220_40
  7108  002770                     i2u220_41:
  7109  002770  0E01               	movlw	1
  7110  002772  EFBC  F013         	goto	i2u220_46
  7111  002776                     i2u220_40:
  7112  002776  0E00               	movlw	0
  7113  002778                     i2u220_46:
  7114  002778  0012               	return		;funcret
  7115  00277A                     __end_of_I2C_SlaveIsRxBufFull:
  7116                           	opt callstack 0
  7117                           
  7118 ;; *************** function _I2C_SlaveIsRead *****************
  7119 ;; Defined at:
  7120 ;;		line 337 in file "mcc_generated_files/i2c_slave.c"
  7121 ;; Parameters:    Size  Location     Type
  7122 ;;		None
  7123 ;; Auto vars:     Size  Location     Type
  7124 ;;		None
  7125 ;; Return value:  Size  Location     Type
  7126 ;;                  1    wreg      _Bool 
  7127 ;; Registers used:
  7128 ;;		wreg
  7129 ;; Tracked objects:
  7130 ;;		On entry : 0/0
  7131 ;;		On exit  : 0/0
  7132 ;;		Unchanged: 0/0
  7133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7138 ;;Total ram usage:        0 bytes
  7139 ;; Hardware stack levels used:    1
  7140 ;; This function calls:
  7141 ;;		Nothing
  7142 ;; This function is called by:
  7143 ;;		_I2C_Isr
  7144 ;; This function uses a non-reentrant model
  7145 ;;
  7146                           
  7147                           	psect	text67
  7148  00277A                     __ptext67:
  7149                           	opt callstack 0
  7150  00277A                     _I2C_SlaveIsRead:
  7151                           	opt callstack 19
  7152  00277A                     
  7153                           ;mcc_generated_files/i2c_slave.c: 339:     return (SSPSTATbits.R_nW);
  7154  00277A  B4C7               	btfsc	199,2,c	;volatile
  7155  00277C  EFC2  F013         	goto	i2u213_41
  7156  002780  EFC5  F013         	goto	i2u213_40
  7157  002784                     i2u213_41:
  7158  002784  0E01               	movlw	1
  7159  002786  EFC6  F013         	goto	i2u213_46
  7160  00278A                     i2u213_40:
  7161  00278A  0E00               	movlw	0
  7162  00278C                     i2u213_46:
  7163  00278C  0012               	return		;funcret
  7164  00278E                     __end_of_I2C_SlaveIsRead:
  7165                           	opt callstack 0
  7166                           
  7167 ;; *************** function _I2C_SlaveIsData *****************
  7168 ;; Defined at:
  7169 ;;		line 357 in file "mcc_generated_files/i2c_slave.c"
  7170 ;; Parameters:    Size  Location     Type
  7171 ;;		None
  7172 ;; Auto vars:     Size  Location     Type
  7173 ;;		None
  7174 ;; Return value:  Size  Location     Type
  7175 ;;                  1    wreg      _Bool 
  7176 ;; Registers used:
  7177 ;;		wreg
  7178 ;; Tracked objects:
  7179 ;;		On entry : 0/0
  7180 ;;		On exit  : 0/0
  7181 ;;		Unchanged: 0/0
  7182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7187 ;;Total ram usage:        0 bytes
  7188 ;; Hardware stack levels used:    1
  7189 ;; This function calls:
  7190 ;;		Nothing
  7191 ;; This function is called by:
  7192 ;;		_I2C_Isr
  7193 ;; This function uses a non-reentrant model
  7194 ;;
  7195                           
  7196                           	psect	text68
  7197  00278E                     __ptext68:
  7198                           	opt callstack 0
  7199  00278E                     _I2C_SlaveIsData:
  7200                           	opt callstack 19
  7201  00278E                     
  7202                           ;mcc_generated_files/i2c_slave.c: 359:     return SSPSTATbits.D_nA;
  7203  00278E  BAC7               	btfsc	199,5,c	;volatile
  7204  002790  EFCC  F013         	goto	i2u219_41
  7205  002794  EFCF  F013         	goto	i2u219_40
  7206  002798                     i2u219_41:
  7207  002798  0E01               	movlw	1
  7208  00279A  EFD0  F013         	goto	i2u219_46
  7209  00279E                     i2u219_40:
  7210  00279E  0E00               	movlw	0
  7211  0027A0                     i2u219_46:
  7212  0027A0  0012               	return		;funcret
  7213  0027A2                     __end_of_I2C_SlaveIsData:
  7214                           	opt callstack 0
  7215                           
  7216 ;; *************** function _I2C_SlaveClearIrq *****************
  7217 ;; Defined at:
  7218 ;;		line 342 in file "mcc_generated_files/i2c_slave.c"
  7219 ;; Parameters:    Size  Location     Type
  7220 ;;		None
  7221 ;; Auto vars:     Size  Location     Type
  7222 ;;		None
  7223 ;; Return value:  Size  Location     Type
  7224 ;;                  1    wreg      void 
  7225 ;; Registers used:
  7226 ;;		None
  7227 ;; Tracked objects:
  7228 ;;		On entry : 0/0
  7229 ;;		On exit  : 0/0
  7230 ;;		Unchanged: 0/0
  7231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7236 ;;Total ram usage:        0 bytes
  7237 ;; Hardware stack levels used:    1
  7238 ;; This function calls:
  7239 ;;		Nothing
  7240 ;; This function is called by:
  7241 ;;		_I2C_Isr
  7242 ;; This function uses a non-reentrant model
  7243 ;;
  7244                           
  7245                           	psect	text69
  7246  002898                     __ptext69:
  7247                           	opt callstack 0
  7248  002898                     _I2C_SlaveClearIrq:
  7249                           	opt callstack 19
  7250  002898                     
  7251                           ;mcc_generated_files/i2c_slave.c: 344:     PIR1bits.SSPIF = 0;
  7252  002898  969E               	bcf	158,3,c	;volatile
  7253  00289A  0012               	return		;funcret
  7254  00289C                     __end_of_I2C_SlaveClearIrq:
  7255                           	opt callstack 0
  7256                           
  7257 ;; *************** function _I2C_SlaveAddrCallBack *****************
  7258 ;; Defined at:
  7259 ;;		line 253 in file "mcc_generated_files/i2c_slave.c"
  7260 ;; Parameters:    Size  Location     Type
  7261 ;;		None
  7262 ;; Auto vars:     Size  Location     Type
  7263 ;;		None
  7264 ;; Return value:  Size  Location     Type
  7265 ;;                  1    wreg      void 
  7266 ;; Registers used:
  7267 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  7268 ;; Tracked objects:
  7269 ;;		On entry : 0/0
  7270 ;;		On exit  : 0/0
  7271 ;;		Unchanged: 0/0
  7272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7277 ;;Total ram usage:        0 bytes
  7278 ;; Hardware stack levels used:    1
  7279 ;; Hardware stack levels required when called:    2
  7280 ;; This function calls:
  7281 ;;		Absolute function
  7282 ;;		_I2C_SlaveDefAddrInterruptHandler
  7283 ;; This function is called by:
  7284 ;;		_I2C_Isr
  7285 ;; This function uses a non-reentrant model
  7286 ;;
  7287                           
  7288                           	psect	text70
  7289  002602                     __ptext70:
  7290                           	opt callstack 0
  7291  002602                     _I2C_SlaveAddrCallBack:
  7292                           	opt callstack 17
  7293  002602                     
  7294                           ;mcc_generated_files/i2c_slave.c: 255:     if (I2C_SlaveAddrInterruptHandler) {
  7295  002602  0100               	movlb	0	; () banked
  7296  002604  51DD               	movf	_I2C_SlaveAddrInterruptHandler& (0+255),w,b
  7297  002606  11DE               	iorwf	(_I2C_SlaveAddrInterruptHandler+1)& (0+255),w,b
  7298  002608  B4D8               	btfsc	status,2,c
  7299  00260A  EF09  F013         	goto	i2u223_41
  7300  00260E  EF0B  F013         	goto	i2u223_40
  7301  002612                     i2u223_41:
  7302  002612  EF18  F013         	goto	i2l374
  7303  002616                     i2u223_40:
  7304  002616                     
  7305                           ; BSR set to: 0
  7306                           ;mcc_generated_files/i2c_slave.c: 256:         I2C_SlaveAddrInterruptHandler();
  7307  002616  D802               	call	i2u224_48
  7308  002618  EF18  F013         	goto	i2u224_49
  7309  00261C                     i2u224_48:
  7310  00261C  0005               	push	
  7311  00261E  6EFA               	movwf	pclath,c
  7312  002620  51DD               	movf	_I2C_SlaveAddrInterruptHandler& (0+255),w,b
  7313  002622  6EFD               	movwf	tosl,c
  7314  002624  51DE               	movf	(_I2C_SlaveAddrInterruptHandler+1)& (0+255),w,b
  7315  002626  6EFE               	movwf	tosh,c
  7316  002628  50F8               	movf	tblptru,w,c
  7317  00262A  6EFF               	movwf	tosu,c
  7318  00262C  50FA               	movf	pclath,w,c
  7319  00262E  0012               	return		;indir
  7320  002630                     i2u224_49:
  7321  002630                     i2l374:
  7322  002630  0012               	return		;funcret
  7323  002632                     __end_of_I2C_SlaveAddrCallBack:
  7324                           	opt callstack 0
  7325                           
  7326 ;; *************** function _I2C_SlaveDefAddrInterruptHandler *****************
  7327 ;; Defined at:
  7328 ;;		line 260 in file "mcc_generated_files/i2c_slave.c"
  7329 ;; Parameters:    Size  Location     Type
  7330 ;;		None
  7331 ;; Auto vars:     Size  Location     Type
  7332 ;;		None
  7333 ;; Return value:  Size  Location     Type
  7334 ;;                  1    wreg      void 
  7335 ;; Registers used:
  7336 ;;		wreg, status,2, cstack
  7337 ;; Tracked objects:
  7338 ;;		On entry : 0/0
  7339 ;;		On exit  : 0/0
  7340 ;;		Unchanged: 0/0
  7341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7346 ;;Total ram usage:        0 bytes
  7347 ;; Hardware stack levels used:    1
  7348 ;; Hardware stack levels required when called:    1
  7349 ;; This function calls:
  7350 ;;		_I2C_SlaveGetAddr
  7351 ;; This function is called by:
  7352 ;;		_I2C_Open
  7353 ;;		_I2C_SlaveAddrCallBack
  7354 ;; This function uses a non-reentrant model
  7355 ;;
  7356                           
  7357                           	psect	text71
  7358  00285E                     __ptext71:
  7359                           	opt callstack 0
  7360  00285E                     _I2C_SlaveDefAddrInterruptHandler:
  7361                           	opt callstack 17
  7362  00285E                     
  7363                           ;mcc_generated_files/i2c_slave.c: 261:     i2cSlaveAddr = I2C_SlaveGetAddr();
  7364  00285E  EC4E  F014         	call	_I2C_SlaveGetAddr	;wreg free
  7365  002862  0100               	movlb	0	; () banked
  7366  002864  6FE7               	movwf	_i2cSlaveAddr& (0+255),b	;volatile
  7367  002866                     
  7368                           ; BSR set to: 0
  7369  002866  0012               	return		;funcret
  7370  002868                     __end_of_I2C_SlaveDefAddrInterruptHandler:
  7371                           	opt callstack 0
  7372                           
  7373 ;; *************** function _I2C_SlaveGetAddr *****************
  7374 ;; Defined at:
  7375 ;;		line 387 in file "mcc_generated_files/i2c_slave.c"
  7376 ;; Parameters:    Size  Location     Type
  7377 ;;		None
  7378 ;; Auto vars:     Size  Location     Type
  7379 ;;		None
  7380 ;; Return value:  Size  Location     Type
  7381 ;;                  1    wreg      unsigned char 
  7382 ;; Registers used:
  7383 ;;		wreg, status,2
  7384 ;; Tracked objects:
  7385 ;;		On entry : 0/0
  7386 ;;		On exit  : 0/0
  7387 ;;		Unchanged: 0/0
  7388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7393 ;;Total ram usage:        0 bytes
  7394 ;; Hardware stack levels used:    1
  7395 ;; This function calls:
  7396 ;;		Nothing
  7397 ;; This function is called by:
  7398 ;;		_I2C_SlaveDefAddrInterruptHandler
  7399 ;; This function uses a non-reentrant model
  7400 ;;
  7401                           
  7402                           	psect	text72
  7403  00289C                     __ptext72:
  7404                           	opt callstack 0
  7405  00289C                     _I2C_SlaveGetAddr:
  7406                           	opt callstack 17
  7407  00289C                     
  7408                           ;mcc_generated_files/i2c_slave.c: 389:     return SSPADD;
  7409  00289C  50C8               	movf	200,w,c	;volatile
  7410  00289E  0012               	return		;funcret
  7411  0028A0                     __end_of_I2C_SlaveGetAddr:
  7412                           	opt callstack 0
  7413                           
  7414                           	psect	text73
  7415  000000                     __ptext73:
  7416                           	opt callstack 0
  7417  000000                     
  7418                           	psect	rparam
  7419  0000                     
  7420                           	psect	temp
  7421  00005F                     btemp:
  7422                           	opt callstack 0
  7423  00005F                     	ds	1
  7424  0000                     int$flags	set	btemp
  7425  0000                     wtemp8	set	btemp+1
  7426  0000                     ttemp5	set	btemp+1
  7427  0000                     ttemp6	set	btemp+4
  7428  0000                     ttemp7	set	btemp+8
  7429                           tosu	equ	0xFFF
  7430                           tosh	equ	0xFFE
  7431                           tosl	equ	0xFFD
  7432                           stkptr	equ	0xFFC
  7433                           pclatu	equ	0xFFB
  7434                           pclath	equ	0xFFA
  7435                           pcl	equ	0xFF9
  7436                           tblptru	equ	0xFF8
  7437                           tblptrh	equ	0xFF7
  7438                           tblptrl	equ	0xFF6
  7439                           tablat	equ	0xFF5
  7440                           prodh	equ	0xFF4
  7441                           prodl	equ	0xFF3
  7442                           indf0	equ	0xFEF
  7443                           postinc0	equ	0xFEE
  7444                           postdec0	equ	0xFED
  7445                           preinc0	equ	0xFEC
  7446                           plusw0	equ	0xFEB
  7447                           fsr0h	equ	0xFEA
  7448                           fsr0l	equ	0xFE9
  7449                           wreg	equ	0xFE8
  7450                           indf1	equ	0xFE7
  7451                           postinc1	equ	0xFE6
  7452                           postdec1	equ	0xFE5
  7453                           preinc1	equ	0xFE4
  7454                           plusw1	equ	0xFE3
  7455                           fsr1h	equ	0xFE2
  7456                           fsr1l	equ	0xFE1
  7457                           bsr	equ	0xFE0
  7458                           indf2	equ	0xFDF
  7459                           postinc2	equ	0xFDE
  7460                           postdec2	equ	0xFDD
  7461                           preinc2	equ	0xFDC
  7462                           plusw2	equ	0xFDB
  7463                           fsr2h	equ	0xFDA
  7464                           fsr2l	equ	0xFD9
  7465                           status	equ	0xFD8


Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         64
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     91      94
    BANK0           160    109     144
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), STR_1(CODE[3]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1959_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    I2C_SlaveSetBusColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefBusColInterruptHandler(), 

    I2C_SlaveBusColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), I2C_SlaveDefBusColInterruptHandler(), 

    I2C_SlaveSetWrColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefWrColInterruptHandler(), 

    I2C_SlaveWrColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), I2C_SlaveDefWrColInterruptHandler(), 

    I2C_SlaveSetAddrIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefAddrInterruptHandler(), 

    I2C_SlaveAddrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), I2C_SlaveDefAddrInterruptHandler(), 

    I2C_SlaveSetWriteIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefWrInterruptHandler(), 

    I2C_SlaveWrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), I2C_SlaveDefWrInterruptHandler(), 

    I2C_SlaveSetReadIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefRdInterruptHandler(), 

    I2C_SlaveRdInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), I2C_SlaveDefRdInterruptHandler(), 

    I2C_SlaveSetIsrHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> myInt(), I2C_Isr(), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myInt(), Absolute function(), I2C_Isr(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _myInt->i2_printf
    i2_printf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_dtoa
    i2_dtoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_fputc->i2_putch
    i2_putch->i2_EUSART1_Write
    i2_abs->i2___aomod
    _I2C_Write->_I2C_SlaveSendTxData
    _I2C_SlaveDefWrInterruptHandler->_I2C_SlaveSendTxData

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _abs->___aomod
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _I2C_Open->_I2C_SlaveSetAddrIntHandler
    _I2C_Open->_I2C_SlaveSetBusColIntHandler
    _I2C_Open->_I2C_SlaveSetIsrHandler
    _I2C_Open->_I2C_SlaveSetReadIntHandler
    _I2C_Open->_I2C_SlaveSetWrColIntHandler
    _I2C_Open->_I2C_SlaveSetWriteIntHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _myInt->i2_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7434
                  _ADC_GetConversion
                         _I2C_Enable
                           _I2C_Open
             _I2C_SlaveSetIsrHandler
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               6     4      2    6236
                                            103 BANK0      6     4      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6054
                                             95 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5685
                                             79 BANK0     16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4314
                                             43 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2665
                                             32 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                             14 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1213
                                             25 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     812
                                             16 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      44
                                             15 BANK0      1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      22
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             32 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                             14 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                             14 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                     _ADC_Initialize
                 _EUSART1_Initialize
                     _I2C_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Open                                             0     0      0     708
                 _I2C_SlaveEnableIrq
                      _I2C_SlaveOpen
         _I2C_SlaveSetAddrIntHandler
       _I2C_SlaveSetBusColIntHandler
             _I2C_SlaveSetIsrHandler
         _I2C_SlaveSetReadIntHandler
              _I2C_SlaveSetSlaveAddr
              _I2C_SlaveSetSlaveMask
        _I2C_SlaveSetWrColIntHandler
        _I2C_SlaveSetWriteIntHandler
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetWriteIntHandler                          2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetWrColIntHandler                          2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetSlaveMask                                1     1      0      22
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetSlaveAddr                                1     1      0      22
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetReadIntHandler                           2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_SlaveSetIsrHandler                               2     0      2     174
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetBusColIntHandler                         2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetAddrIntHandler                           2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveOpen                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveEnableIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Enable                                           0     0      0       0
                     _I2C_Initialize
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      22
                                             14 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                         10    10      0    3935
                                              4 BANK0     10    10      0
                   Absolute function *
                            _I2C_Isr *
                              _myInt *
 ---------------------------------------------------------------------------------
 (11) _myInt                                               0     0      0    3913
                           _I2C_Read
                          _I2C_Write
                           i2_printf
 ---------------------------------------------------------------------------------
 (12) i2_printf                                            6     4      2    3869
                                             89 COMRAM     2     0      2
                                              0 BANK0      4     4      0
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (13) i2_vfprintf                                          8     2      6    3789
                                             81 COMRAM     8     2      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (14) i2_vfpfcnvrt                                        42    36      6    3585
                                             65 COMRAM    16    10      6
                             i2_dtoa
                            i2_fputc
 ---------------------------------------------------------------------------------
 (15) i2_dtoa                                             36    26     10    2764
                                             29 COMRAM    36    26     10
                          i2___aodiv
                          i2___aomod
                              i2_abs
                              i2_pad
 ---------------------------------------------------------------------------------
 (16) i2_pad                                              11     5      6    1465
                                             18 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
                           i2_strlen
 ---------------------------------------------------------------------------------
 (17) i2_strlen                                            4     2      2     116
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (17) i2_fputs                                             7     3      4     613
                                             11 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (15) i2_fputc                                             9     5      4     412
                                              2 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (16) i2_putch                                             1     1      0      44
                                              1 COMRAM     1     1      0
                    i2_EUSART1_Write
 ---------------------------------------------------------------------------------
 (17) i2_EUSART1_Write                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) i2_abs                                               4     2      2      92
                                             18 COMRAM     4     2      2
                          i2___aomod (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___aomod                                          18     2     16     348
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (16) i2___aodiv                                          26    10     16     352
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (12) _I2C_Write                                           1     1      0      44
                                              1 COMRAM     1     1      0
                _I2C_SlaveSendTxData
 ---------------------------------------------------------------------------------
 (12) _I2C_Read                                            0     0      0       0
                 _I2C_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (11) _I2C_Isr                                             2     2      0      22
                                              1 COMRAM     2     2      0
              _I2C_SlaveAddrCallBack
                  _I2C_SlaveClearIrq
                 _I2C_SlaveGetRxData
                    _I2C_SlaveIsData
                    _I2C_SlaveIsRead
               _I2C_SlaveIsRxBufFull
          _I2C_SlaveIsWriteCollision
                _I2C_SlaveRdCallBack
              _I2C_SlaveReleaseClock
                   _I2C_SlaveRestart
                _I2C_SlaveWrCallBack
             _I2C_SlaveWrColCallBack
 ---------------------------------------------------------------------------------
 (12) _I2C_SlaveWrColCallBack                              0     0      0       0
                   Absolute function *
  _I2C_SlaveDefWrColInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _I2C_SlaveDefWrColInterruptHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_SlaveWrCallBack                                 0     0      0      22
                   Absolute function *
     _I2C_SlaveDefWrInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _I2C_SlaveDefWrInterruptHandler                      0     0      0      22
                _I2C_SlaveSendTxData
 ---------------------------------------------------------------------------------
 (13) _I2C_SlaveSendTxData                                 1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _I2C_SlaveRestart                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_SlaveReleaseClock                               0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_SlaveRdCallBack                                 0     0      0       0
                   Absolute function *
     _I2C_SlaveDefRdInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _I2C_SlaveDefRdInterruptHandler                      0     0      0       0
                 _I2C_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (13) _I2C_SlaveGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_SlaveIsWriteCollision                           0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_SlaveIsRxBufFull                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_SlaveIsRead                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_SlaveIsData                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_SlaveClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_SlaveAddrCallBack                               0     0      0       0
                   Absolute function *
   _I2C_SlaveDefAddrInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _I2C_SlaveDefAddrInterruptHandler                    0     0      0       0
                   _I2C_SlaveGetAddr
 ---------------------------------------------------------------------------------
 (14) _I2C_SlaveGetAddr                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _I2C_Enable
     _I2C_Initialize
   _I2C_Open
     _I2C_SlaveEnableIrq
     _I2C_SlaveOpen
     _I2C_SlaveSetAddrIntHandler
     _I2C_SlaveSetBusColIntHandler
     _I2C_SlaveSetIsrHandler
     _I2C_SlaveSetReadIntHandler
     _I2C_SlaveSetSlaveAddr
     _I2C_SlaveSetSlaveMask
     _I2C_SlaveSetWrColIntHandler
     _I2C_SlaveSetWriteIntHandler
   _I2C_SlaveSetIsrHandler
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _I2C_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _I2C_Isr *
     _I2C_SlaveAddrCallBack
       Absolute function(Fake) *
       _I2C_SlaveDefAddrInterruptHandler *
         _I2C_SlaveGetAddr
     _I2C_SlaveClearIrq
     _I2C_SlaveGetRxData
     _I2C_SlaveIsData
     _I2C_SlaveIsRead
     _I2C_SlaveIsRxBufFull
     _I2C_SlaveIsWriteCollision
     _I2C_SlaveRdCallBack
       Absolute function(Fake) *
       _I2C_SlaveDefRdInterruptHandler *
         _I2C_SlaveGetRxData
     _I2C_SlaveReleaseClock
     _I2C_SlaveRestart
     _I2C_SlaveWrCallBack
       Absolute function(Fake) *
       _I2C_SlaveDefWrInterruptHandler *
         _I2C_SlaveSendTxData
     _I2C_SlaveWrColCallBack
       Absolute function(Fake) *
       _I2C_SlaveDefWrColInterruptHandler *
   _myInt *
     _I2C_Read
       _I2C_SlaveGetRxData
     _I2C_Write
       _I2C_SlaveSendTxData
     i2_printf
       i2_vfprintf
         i2_vfpfcnvrt
           i2_dtoa
             i2___aodiv
             i2___aomod
             i2_abs
               i2___aomod (ARG)
             i2_pad
               i2_fputc
                 i2_putch
                   i2_EUSART1_Write
               i2_fputs
                 i2_fputc
                   i2_putch
                     i2_EUSART1_Write
               i2_strlen
           i2_fputc
             i2_putch
               i2_EUSART1_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      20       8       12.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6D      90       5       90.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5B      5E       1      100.0%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10E       6        0.0%
DATA                 0      0     10E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Nov 18 16:21:36 2019

                           __size_of_I2C_Enable 0006                                     _SSPSTATbits 000FC7  
                            __size_of_I2C_Write 000A                                              l31 249E  
                                            l34 24C0                                              l19 273A  
                                            l80 23FA                                     __CFG_BORV$3 000000  
             __end_of_I2C_SlaveIsWriteCollision 2766                                    __CFG_CP0$OFF 000000  
                                  __CFG_CP1$OFF 000000                                    __CFG_CP2$OFF 000000  
                                  __CFG_CP3$OFF 000000                                             l104 2712  
                                           l113 27D0                                             l131 27EE  
                                           l107 2724                                             l125 27E4  
                                           l311 2210                                             l128 27DA  
                                           l401 26F2                                             l410 280C  
                                           l323 287C                                             l308 27C2  
                                           l413 288A                                             l350 2820  
                                           l166 270C                                             l407 2816  
                                           l360 27F8                                             l169 27B2  
                                           l370 283E                                             l194 26AC  
                                           l602 11F4                                             l347 282A  
                                           l380 2802                                             l533 2886  
                                           l390 2834                                             l615 226A  
                                           l616 2272                                             l609 1690  
                                           l571 1E6A                                             l733 19CE  
                                           l574 1EAE                                             l582 0FB2  
                                           l576 1EEA                                             l584 0FBA  
                                           l746 1CBC            __end_of_I2C_SlaveSetBusColIntHandler 2836  
         __size_of_I2C_SlaveSetBusColIntHandler 000A                    _I2C_SlaveSetBusColIntHandler 282C  
                                  __CFG_CPB$OFF 000000                                    __CFG_CPD$OFF 000000  
                            i2___aodiv@quotient 0013                           ??_I2C_SlaveRdCallBack 0001  
                                           _abs 2440                                             _pad 1E22  
                           _I2C_SlaveSendTxData 2870                   I2C_SlaveSetSlaveMask@maskAddr 006E  
                               __end_of_I2C_Isr 1FB4            __size_of_I2C_SlaveSetWrColIntHandler 000A  
                                           tosl 000FFD                                             wreg 000FE8  
                           _I2C_SlaveWrCallBack 25A2                                      _TXSTA1bits 000FAC  
                           __end_ofi2_vfpfcnvrt 1846                                            ?_abs 0080  
                                          l2200 27C8                                            l1330 253A  
                                          l2220 20A0                                            l1324 2684  
                                          l1309 2110                                            l1317 23B4  
                                          l2222 20AA                                            l2400 184C  
                                          l2224 20C8                                            l2216 207A  
                                          l2410 18AC                                            l2402 185A  
                                          l2226 20FE                                            l2218 208E  
                                          l2250 237C                                            l2420 18F6  
                                          l2412 18B0                                            l2404 187A  
                                          l2252 238E                                            l2260 2514  
                                          l2430 1966                                            l2422 1904  
                                          l2414 18BC                                            l2406 187E  
                                          l1294 2478                                            l2254 2394  
                                          l2262 252C                                            l2432 1978  
                                          l2424 1916                                            l2416 18DA  
                                          l2408 188C                                            l2248 236E  
                                          l2256 2502                                            l2600 1196  
                                          l1297 2480                                            l2426 1944  
                                          l2418 18E2                                            l2434 197E  
                                          l2450 1B90                                            l2442 1B58  
                                          l2194 2712                                            l2258 250E  
                                          l2602 11A8                                            l2436 198E  
                                          l2428 1964                                            l2460 1BF8  
                                          l2452 1B9E                                            l2444 1B5E  
                                          l2196 2720                                            l2380 1E62  
                                          l2372 1E22                                            l2604 11B4  
                                          l2700 1658                                            l2438 19AE  
                                          l2462 1C06                                            l2470 1C6C  
                                          l2454 1BBE                                            l2446 1B6C  
                                          l2390 1ED0                                            l2382 1E76  
                                          l2374 1E32                                            l2606 11BC  
                                          l2550 0F12                                            l2702 167E  
                                          l2720 23CA                                            l2472 1C7C  
                                          l2464 1C34                                            l2456 1BDC  
                                          l2448 1B8C                                            l2384 1E8A  
                                          l2376 1E46                                            l2608 11CC  
                                          l2560 0F8C                                            l2552 0F32  
                                          l2730 27B4                                            l2722 23D8  
                                          l2474 1C9C                                            l2466 1C54  
                                          l2458 1BE4                                            l2394 2440  
                                          l2386 1E90                                            l2378 1E56  
                                          l2570 0FE8                                            l2562 0FA6  
                                          l2554 0F5C                                            l2732 27B8  
                                          l2716 2726                                            l2724 23E6  
                                          l2740 2696                                            l2468 1C66  
                                          l2396 245C                                            l2388 1EBC  
                                          l2580 108A                                            l2572 0FF0  
                                          l2564 0FC2                                            l2556 0F7C  
                                          l2820 2212                                            l2734 27BC  
                                          l2750 26E8                                            l2654 27DC  
                                          l2726 23F4                                            l2718 23B6  
                                          l2742 26AA                                            l2398 1846  
                                          l2590 1148                                            l2582 1090  
                                          l2574 0FFA                                            l2566 0FD4  
                                          l2558 0F8A                                            l2670 150C  
                                          l2822 221A                                            l2840 24AC  
                                          l2736 27C0                                            l2752 26EC  
                                          l2760 2808                                            l2656 27D2  
                                          l2728 2884                                            l2744 27A2  
                                          l2592 1162                                            l2576 1000  
                                          l2584 10F4                                            l2568 0FE2  
                                          l2680 15B2                                            l2672 151E  
                                          l2824 2228                                            l2920 2668  
                                          l2834 2486                                            l2754 26F0  
                                          l2746 26D6                                            l2770 2836  
                                          l2762 2822                                            l2658 27E6  
                                          l2738 2686                                            l2586 1110  
                                          l2594 1170                                            l2578 1084  
                                          l2690 1630                                            l2674 1522  
                                          l2666 14DA                                            l2826 224E  
                                          l2836 249A                                            l2748 26E4  
                                          l2764 282C                                            l2772 27FA  
                                          l2860 26FC                                            l2596 1182  
                                          l2588 112E                                            l2684 15EA  
                                          l2676 1546                                            l2668 14FE  
                                          l2940 22D6                                            l2838 249C  
                                          l2774 2888                                            l2758 2812  
                                          l2766 27F0                                            l2870 21AC  
                                          l2862 2700                                            l2598 1190  
                                          l2686 160E                                            l2694 163E  
                                          l2678 156A                                            l2918 265E  
                                          l2950 2304                                            l2942 22DA  
                                          ?_pad 0080                                            l2768 2818  
                                          l2872 21B2                                            l2864 2704  
                                          l2856 26F4                                            l2696 164C  
                                          l2688 161C                                            l2952 2306  
                                          l2944 22DC                                            l2874 220C  
                                          l2866 2708                                            l2858 26F8  
                                          l2946 22F4                                            l2876 2878  
                                          l2868 21A8                                            l2948 2302  
                                          STR_1 0F0D                                            STR_2 0F01  
                                          u2000 1182                                            u2001 117E  
                                          u2010 1190                                            u2011 118C  
                                          u1300 20A0                                            u2020 11A8  
                                          u2100 160E                                            u1301 209C  
                                          u2021 11A4                                            u2101 160A  
                                          u1310 20C8                                            u1311 20C4  
                                          u2120 26E4                                            u1240 2720  
                                          u1320 20FE                                            u2121 26E0  
                                          u1241 271C                                            u1321 20FA  
                                          _LATA 000F89                                            u1350 23B4  
                                          u2070 14FE                                            _LATB 000F8A  
                                          u1351 23B0                                            u2071 14FA  
                                          _LATC 000F8B                                            u1600 185A  
                                          u1360 252C                                            u2080 1546  
                                          u1601 1856                                            u1361 2528  
                                          u2081 1542                                            u1610 188C  
                                          u1290 208E                                            u2090 156A  
                                          u2250 226A                                            u1611 1888  
                                          u1291 208A                                            u2091 1566  
                                          u2251 2266                                            u2260 24AC  
                                          u1700 1C06                                            u2261 24A8  
                                          u1621 18B6                                            u1701 1C02  
                                          u1630 18DA                                            u1710 1C34  
                                          u1550 1E32                                            u1631 18D6  
                                          u1711 1C30                                            u1551 1E2E  
                                          u1640 1904                                            u1720 1C7C  
                                          u1560 1E56                                            u1641 1900  
                                          u1721 1C78                                            u1561 1E52  
                                          u1650 1944                                            u1570 1EAE  
                                          u1651 1940                                            u1571 1EAA  
                                          u1660 198E                                            u1580 1EBC  
                                          u1900 0F5C                                            u1661 198A  
                                          u1581 1EB8                                            u1901 0F58  
                                          u1670 1B6C                                            u1590 245C  
                                          u1910 0F8A                                            u1671 1B68  
                                          u1591 2458                                            u1911 0F86  
                                          u1680 1B9E                                            u1920 0FA6  
                                          u1681 1B9A                                            u1921 0FA2  
                                          u1690 1BDC                                            u1930 0FD4  
                                          u1691 1BD8                                            u1931 0FD0  
                                          u1940 0FE2                                            u1941 0FDE  
                                          u1950 1110                                            u1951 110C  
                                          u1960 112E                                            u1880 0F44  
                                          u1961 112A                                            u1881 0F3E  
                                          u1970 1148                                            u1890 0F46  
                                          u1971 1144                                            u1980 1162  
                                          u1981 115E                                            u1990 1170  
                                          u1991 116C                                            _WPUB 000F5B  
                                 _EUSART1_Write 270E                         __end_of_I2C_SlaveIsData 27A2  
                       __end_of_I2C_SlaveIsRead 278E                                            abs@a 0080  
                                          _data 00CD                                            _dbuf 0100  
                                          _main 22D6                                            _dtoa 0F12  
             I2C_SlaveSetAddrIntHandler@handler 006E                                            _prec 00D5  
                              __end_of_I2C_Read 2884                                            _nout 00D1  
                                          pad@i 0087                                            pad@p 0084  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0089                                            fsr2l 000FD9  
                              __end_of_I2C_Open 2212                                            btemp 005F  
                          ?_I2C_SlaveSendTxData 0001                                            start 00C8  
                                 __CFG_IESO$OFF 000000                                   __CFG_FOSC$HS2 000000  
                               __end_ofi2_fputc 21A8                            ?_I2C_SlaveWrCallBack 0001  
                               __end_ofi2_fputs 2440                                 __end_ofi2_putch 284A  
                                 __CFG_MCLRE$ON 000000                                     i2_dtoa$1498 0030  
                                  ___param_bank 000000                  __size_of_I2C_SlaveAddrCallBack 0030  
             I2C_SlaveSetReadIntHandler@handler 006E                   __end_of_I2C_SlaveAddrCallBack 2632  
                      __size_ofi2_EUSART1_Write 0016                        ??_I2C_SlaveWrColCallBack 0001  
                                         ??_abs 0082                                           ??_pad 0086  
                                    i2_vfprintf 2274                  __size_of_OSCILLATOR_Initialize 0012  
                 __end_of_OSCILLATOR_Initialize 27B4             fp__I2C_SlaveDefAddrInterruptHandler 0000  
      __end_of_I2C_SlaveDefAddrInterruptHandler 2868       __size_of_I2C_SlaveDefAddrInterruptHandler 000A  
            ??_I2C_SlaveDefAddrInterruptHandler 0001               ?_I2C_SlaveDefAddrInterruptHandler 0001  
              _I2C_SlaveDefAddrInterruptHandler 285E                                 __end_of___aodiv 19D0  
                                         ?_main 0001                                           ?_dtoa 008B  
                               __end_of___aomod 1CBE                                           i2l104 273E  
                                         i2l113 2848                                           i2l107 2750  
                                         i2l320 2852                                           i2l317 2882  
                                         i2l422 289A                                           i2l431 27A0  
                                         i2l440 2778                                           i2l344 1FB2  
                                         i2l425 2892                                           i2l354 2600  
                                         i2l434 288E                                           i2l602 14D8  
                                         i2l506 236C                                           i2l338 1FAA  
                                         i2l419 278C                                           i2l443 2876  
                                         i2l428 2764                                           i2l364 25D0  
                                         i2l540 009C                                           i2l357 285C  
                                         i2l374 2630                                           i2l446 2896  
                                         i2l367 286E                                           i2l615 22CC  
                                         i2l384 25A0                                           i2l616 22D4  
                                         i2l544 009C                                           i2l449 289E  
                                         i2l377 2866                                           i2l609 1844  
                                         i2l387 28A0                                           i2l571 1FFA  
                                         i2l539 007C                                           i2l733 1B56  
                                         i2l574 203C                                           i2l582 1296  
                                         i2l576 2078                                           i2l584 129E  
                                         i2l746 1E20                           _I2C_SlaveReleaseClock 2890  
                                  vfpfcnvrt@fmt 00B1                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                                         i2_abs 24C2                                           i2_pad 1FB4  
                 ?_I2C_SlaveSetBusColIntHandler 006E                                   __CFG_WRT0$OFF 000000  
                                 __CFG_WRT1$OFF 000000                                   __CFG_WRT2$OFF 000000  
                                 __CFG_WRT3$OFF 000000                        __end_of_I2C_SlaveGetAddr 28A0  
                                __CFG_EBTR0$OFF 000000                                  __CFG_FCMEN$OFF 000000  
                                __CFG_EBTR1$OFF 000000                                  __CFG_EBTR2$OFF 000000  
                                __CFG_EBTR3$OFF 000000                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                        ??_I2C_SlaveIsRxBufFull 0001                                  __CFG_EBTRB$OFF 000000  
                                         _flags 00D7                                           _fputc 207A  
                                         _myInt 2322                                           _fputs 236E  
                                         pad@fp 0080                                           _width 00D3  
                                         _putch 27C4                                           dtoa@d 008D  
                                         dtoa@i 00AD                                           dtoa@n 00A5  
                                         dtoa@p 009F                                           dtoa@s 00A3  
                                         dtoa@w 00A1                 __size_of_I2C_SlaveSetIsrHandler 000A  
                                ?_EUSART1_Write 0001                               __end_of_I2C_Write 2854  
                                         pclath 000FFA                                           tablat 000FF5  
                      __end_of_I2C_SlaveRestart 2890                                           ttemp5 0060  
                                         ttemp6 0063                                           ttemp7 0067  
                                         status 000FD8                                           wtemp8 0060  
                         ??_I2C_SlaveSendTxData 0001              _EUSART1_DefaultFramingErrorHandler 000000  
                            __size_ofi2___aodiv 0188                              __size_ofi2___aomod 0164  
                         ??_I2C_SlaveWrCallBack 0002                                __end_ofi2_printf 26D6  
                              __end_ofi2_strlen 2572                           _I2C_SlaveSetSlaveAddr 280E  
                               __initialization 2632                           _I2C_SlaveSetSlaveMask 2804  
                        __size_of_I2C_SlaveOpen 001E                      __end_of_EUSART1_Initialize 23FC  
                                  __end_of_main 2322                                    __end_of_dtoa 11F6  
                                    i2printf@ap 0062                     ?_INTERRUPT_InterruptManager 0001  
                                     ??_I2C_Isr 0002                                     i2_vfpfcnvrt 1692  
                                 i2vfpfcnvrt@ap 0046                                   i2vfpfcnvrt@fp 0042  
                                 i2vfpfcnvrt@ll 004A                                          ??_main 00CD  
                                        ??_dtoa 0095                                   __activetblptr 000002  
                                        ?i2_abs 0013                                  __CFG_RETEN$OFF 000000  
                                        ?i2_pad 0013                     _I2C_SlaveRdInterruptHandler 00E1  
                   _I2C_SlaveWrInterruptHandler 00DF                      __end_of_I2C_SlaveEnableIrq 288C  
                                  ??_I2C_Enable 006E                      __end_of_I2C_SlaveGetRxData 2898  
                                        _ADCON0 000FC2                                          _ADCON1 000FC1  
                                        _ADCON2 000FC0                                          ?_fputc 0070  
                                        ?_myInt 0001                                          ?_fputs 0079  
                                        _ADRESH 000FC4                                          _ADRESL 000FC3  
                                        _ANCON0 000F5D                                          _ANCON1 000F5C  
                                        ?_putch 0001                                 __CFG_BBSIZ$BB2K 000000  
                                        i2l2210 215E                                          i2l2202 2112  
                                        i2l1330 2570                                          i2l2300 1A34  
                                        i2l2212 2194                                          i2l2204 2124  
                                        i2l1324 26D4                                          i2l1309 21A6  
                                        i2l1317 243E                                          i2l2310 1A7E  
                                        i2l2302 1A38                                          i2l2206 2136  
                                        i2l2230 23FC                                          i2l2320 1AEE  
                                        i2l2312 1A8C                                          i2l2304 1A44  
                                        i2l2208 2140                                          i2l2232 2408  
                                        i2l2240 2548                                          i2l2322 1B00  
                                        i2l2314 1A9E                                          i2l2306 1A62  
                                        i2l2234 241A                                          i2l2242 254C  
                                        i2l2316 1ACC                                          i2l2308 1A6A  
                                        i2l2324 1B06                                          i2l2340 1CF4  
                                        i2l2332 1CBE                                          i2l2236 241E  
                                        i2l2244 2564                                          i2l2500 12D4  
                                        i2l2326 1B16                                          i2l2318 1AEC  
                                        i2l2350 1D5C                                          i2l2342 1D02  
                                        i2l2334 1CC2                                          i2l1294 24F8  
                                        i2l2190 273E                                          i2l2238 253C  
                                        i2l2270 1FD8                                          i2l2510 1372  
                                        i2l2502 12DE                                          i2l2328 1B36  
                                        i2l2352 1D6A                                          i2l2360 1DD0  
                                        i2l2344 1D22                                          i2l2336 1CD0  
                                        i2l2192 274C                                          i2l2280 201E  
                                        i2l2272 1FE6                                          i2l2520 1442  
                                        i2l2504 12E4                                          i2l2512 13D6  
                                        i2l1297 2500                                          i2l2290 19D4  
                                        i2l2362 1DE0                                          i2l2354 1D98  
                                        i2l2346 1D40                                          i2l2338 1CF0  
                                        i2l2370 24DC                                          i2l2282 204C  
                                        i2l2274 1FF2                                          i2l2266 1FB4  
                                        i2l2530 148C                                          i2l2514 13F0  
                                        i2l2522 1452                                          i2l2506 1366  
                                        i2l2540 2894                                          i2l2292 19E2  
                                        i2l2364 1E00                                          i2l2356 1DB8  
                                        i2l2348 1D48                                          i2l2284 2060  
                                        i2l2276 2006                                          i2l2268 1FC4  
                                        i2l2532 1498                                          i2l2524 1464  
                                        i2l2516 140E                                          i2l2508 136C  
                                        i2l2620 16DA                                          i2l2612 1692  
                                        i2l2294 1A02                                          i2l2358 1DCA  
                                        i2l2198 2842                                          i2l2278 201A  
                                        i2l2534 14A0                                          i2l2526 1474  
                                        i2l2518 1428                                          i2l2630 17A2  
                                        i2l2622 16FE                                          i2l2614 16B6  
                                        i2l2710 227C                                  __CFG_WDTEN$OFF 000000  
                                        i2l2800 288C                                          i2l2544 2872  
                                        i2l2296 1A06                                          i2l2288 19D0  
                                        i2l2368 24C2                                          i2l2528 147A  
                                        i2l2536 14B0                                          i2l2480 1216  
                                        i2l2632 17C6                                          i2l2640 17F4  
                                        i2l2624 1722                                          i2l2616 16C4  
                                        i2l2712 228A                                          i2l2546 289C  
                                        i2l2802 278E                                          i2l2810 25D2  
                                        i2l2298 1A14                                          i2l2490 128A  
                                        i2l2482 123E                                          i2l2642 1802  
                                        i2l2634 17D4                                          i2l2626 176A  
                                        i2l2618 16D6                                          i2l2714 22B0  
                                        i2l2660 2854                                          i2l2812 25E6  
                                        i2l2492 12A6                                          i2l2484 125E  
                                        i2l2636 17E8                                          i2l2708 2274  
                                        i2l2900 1F5C                                          i2l2814 2602  
                                        i2l2806 2766                                          i2l2662 2868  
                                        i2l2494 12B8                                          i2l2486 126E  
                                        i2l2478 11F6                                          i2l2646 180E  
                                        i2l2830 26B8                                          i2l2902 1F70  
                                        i2l2910 1F80                                          i2l2664 285E  
                                        i2l2816 2616                                          i2l2496 12C6  
                                        i2l2488 1270                                          i2l2648 1832  
                                        i2l2912 1FAE                                          i2l2904 1F78  
                                        i2l2818 2890                                          i2l2498 12CC  
                                        i2l2930 2356                                          i2l2780 284C  
                                        i2l2828 26AE                                          i2l2924 2322  
                                        i2l2782 2898                                          i2l2926 232E  
                                        i2l2784 277A                                          i2l2792 25A2  
                                        i2l2776 287E                                          i2l2928 2342  
                                        i2l2880 1EF0                                          i2l2960 005C  
                                        i2l2794 25B6                                          i2l2890 1F30  
                                        i2l2882 1EF8                                          i2l2962 008A  
                                        i2l2954 0032                                          i2l2788 2752  
                                        i2l2796 2572                                          i2l2892 1F38  
                                        i2l2884 1F0C                                          i2l2956 0040  
                                        i2l2798 2586                                          i2l2894 1F3C  
                                        i2l2886 1F14                                          i2l2878 1EEC  
                                        i2l2958 004E                                          i2l2896 1F40  
                                        i2l2888 1F1C                                          i2l2986 1F94  
                                        i2l2898 1F48                                   i2putch@txData 0002  
                                     ??i2_fputc 0007                                          _RCREG1 000FAE  
                                     ??i2_fputs 0010                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _SPBRG1 000FAF  
                                     ??i2_putch 0002                                ?_I2C_SlaveIsData 0001  
                                        _SSPADD 000FC8                                ?_I2C_SlaveIsRead 0001  
                                        _SSPBUF 000FC9                                  i2___aodiv@sign 0012  
                                        _TXREG1 000FAD                                          i2abs@a 0013  
                                        _TXSTA1 000FAC                                          i2_dtoa 11F6  
                                        i2pad@i 001A                                          i2pad@p 0017  
                                        i2pad@w 001C                                  __CFG_XINST$OFF 000000  
                                  vfprintf@cfmt 00C5                                  i2___aomod@sign 0012  
                                     ??___aodiv 007E                                   i2vfprintf@fmt 0054  
                                     ??___aomod 007E                                  __CFG_STVREN$ON 000000  
                        _I2C_SlaveSetIsrHandler 2822                                     ?i2_vfprintf 0052  
                      ?_EUSART1_SetErrorHandler 006E                 __size_of_I2C_SlaveWrColCallBack 0030  
                            __end_of_I2C_Enable 287E                     ??_I2C_SlaveIsWriteCollision 0001  
                                        clear_0 2638                                          clear_1 2644  
                       __size_of_I2C_Initialize 0010                                          _printf 265E  
                                        pad@buf 0082                ??_EUSART1_SetOverrunErrorHandler 0070  
               ?_EUSART1_SetOverrunErrorHandler 006E                          ?_I2C_SlaveReleaseClock 0001  
                                        dtoa@fp 008B                                          _strlen 2502  
                             ??i2_EUSART1_Write 0001                                          fputc@c 0070  
                                        fputs@c 007D                                          fputs@i 007E  
                             __end_ofi2___aodiv 1B58                                          fputs@s 0079  
                             __end_ofi2___aomod 1E22                                       ?_I2C_Read 0001  
                                     ?_I2C_Open 0001             I2C_SlaveSetBusColIntHandler@handler 006E  
                                  __mediumconst 0000                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                                 _I2C_SlaveOpen 26D6                        ADC_GetConversion@channel 0072  
                            i2___aomod@dividend 0001                                __end_of_vfprintf 2274  
                               ??_EUSART1_Write 006E                   __size_of_INTERRUPT_Initialize 0004  
                             _SYSTEM_Initialize 26F4                                      __accesstop 0060  
                       __end_of__initialization 2650              I2C_SlaveSetWrColIntHandler@handler 006E  
                  ??_I2C_SlaveSetAddrIntHandler 0070                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                          ?_I2C_SlaveSetSlaveAddr 0001  
                        ?_I2C_SlaveSetSlaveMask 0001                                   __end_ofi2_abs 2502  
                                 __end_ofi2_pad 207A                                  __pcstackCOMRAM 0001  
                           ??_SYSTEM_Initialize 0070                                   __end_of_fputc 2112  
                                 __end_of_myInt 236E                                   __end_of_fputs 23B6  
                                 __end_of_putch 27D2                                     i2printf@fmt 005A  
                I2C_SlaveSetSlaveAddr@slaveAddr 006E                    ??_I2C_SlaveSetReadIntHandler 0070  
                                    ??_I2C_Read 0001                                      ??_I2C_Open 0070  
                                       ??i2_abs 0015                                         ??i2_pad 0019  
                                ?_I2C_SlaveOpen 0001                                  i2vfpfcnvrt@fmt 0044  
                                     ?i2_printf 005A             __size_of_I2C_SlaveSetAddrIntHandler 000A  
                                     ?i2_strlen 0001                           i2EUSART1_Write@txData 0001  
                                       ??_fputc 0074                       __end_of_SYSTEM_Initialize 270E  
                                       ??_myInt 005C                                         ??_fputs 007D  
                        _I2C_SlaveWrColCallBack 2572                                         ??_putch 006F  
                     _I2C_SlaveIsWriteCollision 2752                                      __pbssBANK0 00CD  
                                    __pbssBANK1 0100                             __size_ofi2_vfprintf 0062  
                               __CFG_PLLCFG$OFF 000000             __end_of_I2C_SlaveSetWrColIntHandler 2804  
                   _I2C_SlaveSetWrColIntHandler 27FA                                         ?i2_dtoa 001E  
               __end_of_EUSART1_SetErrorHandler 27F0             __size_of_I2C_SlaveSetReadIntHandler 000A  
                   __end_of_I2C_SlaveRdCallBack 2602                   ??_I2C_SlaveSetWrColIntHandler 0070  
                                       _I2C_Isr 1EEC                                         ?_printf 00C7  
                       __size_of_ADC_Initialize 0016                                         ?_strlen 006E  
        __end_of_EUSART1_SetFramingErrorHandler 27E6         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 27DC                                __CFG_CANMX$PORTB 000000  
                                       _REFOCON 000F9A                                         _OSCCON2 000FD2  
                            __size_of_vfpfcnvrt 01B8                               ?_I2C_SlaveGetAddr 0001  
                                    ??i2_printf 005C                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000F7D                                      ??i2_strlen 0003  
                                       _SSPCON1 000FC6                                         _SSPCON2 000FC5  
                                       _SSPSTAT 000FC7                              ??_I2C_SlaveGetAddr 0001  
                                       i2_fputc 2112                                         i2_fputs 23FC  
                                       i2pad@fp 0013                                         i2_putch 2840  
                                       i2dtoa@d 0020                                         i2dtoa@i 0040  
                                       i2dtoa@n 0038                                         i2dtoa@p 0032  
                                       i2dtoa@s 0036                                         i2dtoa@w 0034  
                             ?_I2C_SlaveRestart 0001                                       _I2C_Write 284A  
                               __size_ofi2_dtoa 02E4                              ??_I2C_SlaveRestart 0001  
                               __CFG_PWRTEN$OFF 000000                            _ADC_InterruptHandler 00E5  
                                       __Hparam 0000                                         __Lparam 0000  
                                       ___aodiv 1846                                         ___aomod 1B58  
                       I2C_SlaveSendTxData@data 0001                                       ?_vfprintf 00BF  
                                i2vfprintf@cfmt 0058                                    __psmallconst 0F00  
                         _I2C_SlaveAddrCallBack 2602                                    ?i2_vfpfcnvrt 0042  
                                       __pcinit 2632                                  _I2C_Initialize 27B4  
                                       __ramtop 0F00                                         __ptext0 22D6  
                                       __ptext1 265E                                         __ptext2 2212  
                                       __ptext3 14DA                                         __ptext4 0F12  
                                       __ptext5 1E22                                         __ptext6 2502  
                                       __ptext7 236E                                         __ptext8 207A  
                                       __ptext9 27C4                                 __size_of_printf 0028  
                               __size_of_strlen 003A                                      fp__I2C_Isr 0000  
                               ??_I2C_SlaveOpen 006E                           _OSCILLATOR_Initialize 27A2  
                                  __size_of_abs 0042                                    __size_of_pad 00CA  
                            _EUSART1_Initialize 23B6                        ??_PIN_MANAGER_Initialize 006E  
                             __CFG_MSSPMSK$MSK7 000000                   I2C_SlaveSetIsrHandler@handler 006E  
                    __size_of_SYSTEM_Initialize 001A                     __end_of_I2C_SlaveSendTxData 2878  
                          end_of_initialization 2650                     __end_of_I2C_SlaveWrCallBack 25D2  
                 __size_of_I2C_SlaveIsRxBufFull 0014                             ?_EUSART1_Initialize 0001  
            __end_of_I2C_SlaveSetAddrIntHandler 2840                      _I2C_SlaveSetAddrIntHandler 2836  
                                       fputc@fp 0072                                   __Lmediumconst 0000  
                   _EUSART1_OverrunErrorHandler 00EC                                         fputs@fp 007B  
                                  _i2cNextState 005D                                      ?_I2C_Write 0001  
                            _I2C_SlaveEnableIrq 2888                              _I2C_SlaveGetRxData 2894  
                       ?_I2C_SlaveSetIsrHandler 006E                                    _i2cSlaveAddr 00E7  
                               i2_EUSART1_Write 273C                               __end_of_vfpfcnvrt 1692  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                        __end_of_I2C_Initialize 27C4                         ??_I2C_SlaveReleaseClock 0001  
                                  ??i2_vfprintf 0058                                      ??_vfprintf 00C5  
                          ??_EUSART1_Initialize 0070                             ?_I2C_SlaveEnableIrq 0001  
                           ?_I2C_SlaveGetRxData 0001                                         strlen@a 0070  
            __end_of_I2C_SlaveSetReadIntHandler 2822                      _I2C_SlaveSetReadIntHandler 2818  
                                       strlen@s 006E                    ?_I2C_SlaveSetWriteIntHandler 006E  
                             i2___aodiv@divisor 0009                               i2___aodiv@counter 0011  
                             __size_of_I2C_Read 0006                               __size_of_I2C_Open 006A  
                                     i2___aodiv 19D0                __size_of_EUSART1_SetErrorHandler 000A  
                                     i2___aomod 1CBE                             EUSART1_Write@txData 006E  
                          ??_I2C_SlaveEnableIrq 006E                            ??_I2C_SlaveGetRxData 0001  
                       ??_I2C_SlaveSetSlaveAddr 006E                         ??_I2C_SlaveSetSlaveMask 006E  
                            __end_ofi2_vfprintf 22D6                  __end_of_I2C_SlaveSetIsrHandler 282C  
                                __end_ofi2_dtoa 14DA                        __size_of_I2C_SlaveIsData 0014  
                      __size_of_I2C_SlaveIsRead 0014                          ?_I2C_SlaveAddrCallBack 0001  
                  __end_of_INTERRUPT_Initialize 2888                                 ?_I2C_Initialize 0001  
                                   vfpfcnvrt@ap 00B3                                     vfpfcnvrt@fp 00AF  
                                   vfpfcnvrt@ll 00B7                                  _ADC_Initialize 2726  
                                     _i2cRdData 00E8                                       i2fputc@fp 0005  
                        ?_OSCILLATOR_Initialize 0001                                       i2fputs@fp 000E  
                                     _i2cWrData 005C                                  __end_of_printf 2686  
                                __end_of_strlen 253C                             start_initialization 2632  
                       ?_I2C_SlaveWrColCallBack 0001                 __size_of_PIN_MANAGER_Initialize 0028  
                                   __end_of_abs 2482                                     __end_of_pad 1EEC  
                                    ?i2___aodiv 0001                                      ?i2___aomod 0001  
                                   putch@txData 006F                               __size_ofi2_printf 0028  
                         __end_of_EUSART1_Write 2726                               __size_ofi2_strlen 0036  
                                     i2strlen@a 0003                                       i2strlen@s 0001  
                       __end_ofi2_EUSART1_Write 2752                                        ??i2_dtoa 0028  
                                   ??_I2C_Write 0002                                     vfprintf@fmt 00C1  
                                  i2vfprintf@ap 0056                                    i2vfprintf@fp 0052  
                        __end_of_ADC_Initialize 273C                                        ?_I2C_Isr 0001  
                                      ??_printf 00C9                               i2___aomod@divisor 0009  
                                      ??_strlen 0070                               i2___aomod@counter 0011  
                          __size_ofi2_vfpfcnvrt 01B4                  __end_of_I2C_SlaveWrColCallBack 25A2  
                                   __pbssCOMRAM 005C                                   __pcstackBANK0 0060  
                              ___aodiv@dividend 006E                                        ?i2_fputc 0003  
                                      ?i2_fputs 000C                ??_EUSART1_SetFramingErrorHandler 0070  
               ?_EUSART1_SetFramingErrorHandler 006E                                        ?i2_putch 0001  
          __size_of_I2C_SlaveSetWriteIntHandler 000A                  ??_I2C_SlaveSetBusColIntHandler 0070  
                                     __pnvBANK0 00EA                       __size_of_I2C_SlaveGetAddr 0004  
                        _PIN_MANAGER_Initialize 2686                                       _dtoa$1498 009D  
                                     __pintcode 0008                                        ?___aodiv 006E  
                                      ?___aomod 006E                                ___aodiv@quotient 0080  
                               ?_ADC_Initialize 0001                       __size_of_I2C_SlaveRestart 0004  
                  ??_INTERRUPT_InterruptManager 0064                               __size_of_vfprintf 0062  
                             ??_I2C_SlaveIsData 0001                               ??_I2C_SlaveIsRead 0001  
             fp__I2C_SlaveDefRdInterruptHandler 0000                ??_I2C_SlaveDefRdInterruptHandler 0001  
               ?_I2C_SlaveDefRdInterruptHandler 0001               fp__I2C_SlaveDefWrInterruptHandler 0000  
              ??_I2C_SlaveDefWrInterruptHandler 0002                 ?_I2C_SlaveDefWrInterruptHandler 0001  
                                   __smallconst 0F00                                        _BAUDCON1 000FA7  
            _EUSART1_DefaultOverrunErrorHandler 000000                                        _I2C_Read 287E  
                                      _I2C_Open 21A8                    __size_of_I2C_SlaveRdCallBack 0030  
                                __size_ofi2_abs 0040                            _EUSART1_ErrorHandler 00EA  
                                __size_ofi2_pad 00C6                         _EUSART1_SetErrorHandler 27E6  
                                   ??i2___aodiv 0011                                     ??i2___aomod 0011  
                                __size_of_fputc 0098                                  __size_of_myInt 004C  
                                __size_of_fputs 0048                                  __size_of_putch 000E  
                          _INTERRUPT_Initialize 2884                     ?_I2C_SlaveSetAddrIntHandler 006E  
                              ?i2_EUSART1_Write 0001         EUSART1_SetErrorHandler@interruptHandler 006E  
                                      _PIE1bits 000F9D                                        _PIE2bits 000FA0  
                             _I2C_SlaveClearIrq 2898                                        i2u123_40 274C  
                                      i2u203_40 16B6                                        i2u211_40 22CC  
                                      i2u123_41 2748                                        i2u203_41 16B2  
                                      i2u211_41 22C8                                        i2u220_40 2776  
                                      i2u140_40 204C                                        i2u204_40 16FE  
                                      i2u220_41 2770                                        i2u140_41 2048  
                                      i2u204_41 16FA                                        i2u220_46 2778  
                                      i2u213_40 278A                                        i2u221_40 25E6  
                                      i2u141_40 19E2                                        i2u125_40 2124  
                                      i2u133_40 243E                                        i2u205_40 1722  
                                      i2u213_41 2784                                        i2u221_41 25E2  
                                      i2u141_41 19DE                                        i2u125_41 2120  
                                      i2u133_41 243A                                        i2u205_41 171E  
                                      i2u213_46 278C                                        i2u214_40 2762  
                                      i2u142_40 1A14                                        i2u150_40 1D40  
                                      i2u126_40 2136                                        i2u134_40 2564  
                                      i2u206_40 17C6                                        i2u230_40 1F30  
                                      i2u214_41 275C                                        i2u142_41 1A10  
                                      i2u150_41 1D3C                                        i2u126_41 2132  
                                      i2u134_41 2560                                        i2u206_41 17C2  
                                      i2u230_41 1F2C                                        i2u214_46 2764  
                                      i2u223_40 2616                                        i2u222_48 25EC  
                                      i2u215_40 25B6                                        i2u151_40 1D6A  
                                      i2u127_40 215E                                        i2u231_40 1F5C  
                                      i2u223_41 2612                                        i2u222_49 2600  
                                      i2u215_41 25B2                                        i2u143_41 1A3E  
                                      i2u151_41 1D66                                        i2u127_41 215A  
                                      i2u231_41 1F58             __size_of_INTERRUPT_InterruptManager 00C0  
                                      i2u144_40 1A62                                        i2u152_40 1D98  
                                      i2u128_40 2194                                        i2u232_40 1F70  
                                      i2u144_41 1A5E                                        i2u152_41 1D94  
                                      i2u128_41 2190                                        i2u232_41 1F6C  
                                      i2u224_48 261C                                        i2u216_48 25BC  
                                      i2u217_40 2586                                        i2u145_40 1A8C  
                                      i2u153_40 1DE0                                        i2u137_40 1FC4  
                                      i2u233_40 2342                                        i2u241_40 008A  
                                      i2u240_48 0062                                        i2u224_49 2630  
                                      i2u216_49 25D0                                        i2u217_41 2582  
                                      i2u145_41 1A88                                        i2u153_41 1DDC  
                                      i2u137_41 1FC0                                        i2u233_41 233E  
                                      i2u241_41 0086                                        i2u240_49 0078  
                                      i2u146_40 1ACC                                        i2u154_40 24DC  
                                      i2u138_40 1FE6                                        i2u234_40 2356  
                                      i2u242_40 0098                                        i2u146_41 1AC8  
                                      i2u154_41 24D8                                        i2u138_41 1FE2  
                                      i2u234_41 2352                                        i2u242_41 0094  
                                      i2u219_40 279E                                        i2u218_48 258C  
                                      i2u147_40 1B16                                        i2u139_40 203C  
                                      i2u219_41 2798                                        i2u218_49 25A0  
                                      i2u147_41 1B12                                        i2u139_41 2038  
                                      i2u219_46 27A0                                        i2u148_40 1CD0  
                                      i2u180_40 13F0                                        i2u148_41 1CCC  
                                      i2u180_41 13EC                                        i2u149_40 1D02  
                                      i2u181_40 140E                                        i2u173_40 1226  
                                      i2u229_40 1F0C                                        i2u237_40 0040  
                                      i2u149_41 1CFE                                        i2u181_41 140A  
                                      i2u173_41 1220                                        i2u229_41 1F08  
                                      i2u237_41 003C                                        i2u182_40 1428  
                                      i2u174_40 1228                                        i2u238_40 004E  
                                      i2u182_41 1424                                        i2u238_41 004A  
                                      i2u183_40 1442                                        i2u175_40 123E  
                                      i2u239_40 005C                                        i2u183_41 143E  
                                      i2u175_41 123A                                        i2u239_41 0058  
                                      i2u184_40 1452                                        i2u176_40 126E  
                                      i2u184_41 144E                                        i2u176_41 126A  
                                      i2u185_40 1464                                        i2u177_40 128A  
                                      i2u185_41 1460                                        i2u177_41 1286  
                                      _PIR1bits 000F9E                                        i2u186_40 1474  
                                      i2u178_40 12B8                                        i2u186_41 1470  
                                      i2u178_41 12B4                                        i2u187_40 148C  
                                      i2u179_40 12C6                                        i2u187_41 1488  
                                      i2u179_41 12C2                                        _PIR2bits 000FA1  
                            ?_I2C_SlaveClearIrq 0001                                        _RCONbits 000FD0  
                  __end_of_I2C_SlaveIsRxBufFull 277A                                       _vfpfcnvrt 14DA  
                __size_of_I2C_SlaveReleaseClock 0004                     ?_I2C_SlaveSetReadIntHandler 006E  
                 __end_of_I2C_SlaveReleaseClock 2894                             ??_I2C_SlaveClearIrq 0001  
                              __size_of_I2C_Isr 00C8                                      _ADCON0bits 000FC2  
                              __CFG_SOSCSEL$DIG 000000                           __end_of_I2C_SlaveOpen 26F4  
                                      i2_printf 26AE                                        i2pad@buf 0015  
                                      i2dtoa@fp 001E                                        i2_strlen 253C  
                                    _I2C_Enable 2878                                     _INTCON2bits 000FF1  
                                      i2fputc@c 0003                           ?_INTERRUPT_Initialize 0001  
                                      i2fputs@c 0010                                        i2fputs@i 0011  
                                      i2fputs@s 000C                                        _i2cState 005E  
          fp__I2C_SlaveDefWrColInterruptHandler 0000       __end_of_I2C_SlaveDefWrColInterruptHandler 28A2  
    __size_of_I2C_SlaveDefWrColInterruptHandler 0002             ??_I2C_SlaveDefWrColInterruptHandler 0001  
            ?_I2C_SlaveDefWrColInterruptHandler 0001               _I2C_SlaveDefWrColInterruptHandler 28A0  
                     __end_of_I2C_SlaveClearIrq 289C                                __size_ofi2_fputc 0096  
                              __size_ofi2_fputs 0044                  __size_of_I2C_SlaveSetSlaveAddr 000A  
                              __size_ofi2_putch 000A                   __end_of_I2C_SlaveSetSlaveAddr 2818  
                __size_of_I2C_SlaveSetSlaveMask 000A                   __end_of_I2C_SlaveSetSlaveMask 280E  
                  __size_of_I2C_SlaveSendTxData 0008                                ??_I2C_Initialize 006E  
                       ??_I2C_SlaveAddrCallBack 0001                                        __Hrparam 0000  
                  __size_of_I2C_SlaveWrCallBack 0030                                      vfprintf@ap 00C3  
                                      __Lrparam 0000                                      vfprintf@fp 00BF  
                             _ADC_GetConversion 2482                              __CFG_BOREN$SBORDIS 000000  
                                 I2C_Write@data 0002                         ??_OSCILLATOR_Initialize 006E  
                            ?_ADC_GetConversion 006E                                __size_of___aodiv 018A  
                              __size_of___aomod 0166                   _I2C_SlaveAddrInterruptHandler 00DD  
                   __size_of_EUSART1_Initialize 0046                                      ?_vfpfcnvrt 00AF  
                               ___aodiv@divisor 0076                                 ___aodiv@counter 007E  
            _I2C_SlaveDefBusColInterruptHandler 000000                       ??_EUSART1_SetErrorHandler 0070  
                   _EUSART1_DefaultErrorHandler 000000                             ??_ADC_GetConversion 0070  
                _I2C_SlaveWrColInterruptHandler 00D9                                        __ptext10 270E  
                                      __ptext11 2440                                        __ptext20 27DC  
                                      __ptext12 1B58                                        __ptext21 27E6  
                                      __ptext13 1846                                        __ptext30 282C  
                                      __ptext22 2726                                        __ptext14 26F4  
                                      __ptext31 2836                                        __ptext23 21A8  
                                      __ptext15 2686                                        __ptext40 26AE  
                                      __ptext32 26D6                                        __ptext24 27F0  
                                      __ptext16 27A2                                        __ptext41 2274  
                                      __ptext33 2888                                        __ptext25 27FA  
                                      __ptext17 2884                                        __ptext50 24C2  
                                      __ptext42 1692                                        __ptext34 2878  
                                      __ptext26 2804                                        __ptext18 23B6  
                                      __ptext51 1CBE                                        __ptext43 11F6  
                                      __ptext35 27B4                                        __ptext27 280E  
                                      __ptext19 27D2                                        __ptext60 288C  
                                      __ptext52 19D0                                        __ptext44 1FB4  
                                      __ptext36 2482                                        __ptext28 2818  
                                      __ptext61 2890                                        __ptext53 284A  
                                      __ptext45 253C                                        __ptext29 2822  
                                      __ptext70 2602                                        __ptext62 25D2  
                                      __ptext54 287E                                        __ptext46 23FC  
                                      __ptext38 1EEC                                        __ptext71 285E  
                                      __ptext63 2854                                        __ptext55 2572  
                                      __ptext47 2112                                        __ptext39 2322  
                                      __ptext72 289C                                        __ptext64 2894  
                                      __ptext56 28A0                                        __ptext48 2840  
                                      __ptext73 0000                                        __ptext65 2752  
                                      __ptext57 25A2                                        __ptext49 273C  
                                      __ptext66 2766                                        __ptext58 2868  
                                      __ptext67 277A                                        __ptext59 2870  
                                      __ptext68 278E                                        __ptext69 2898  
                   __size_of_I2C_SlaveEnableIrq 0004                     __size_of_I2C_SlaveGetRxData 0004  
                                 __size_of_main 004C                                   __size_of_dtoa 02E4  
                     __end_of_ADC_GetConversion 24C2                    ?_I2C_SlaveSetWrColIntHandler 006E  
                              _I2C_SlaveGetAddr 289C  EUSART1_SetOverrunErrorHandler@interruptHandler 006E  
                                      int$flags 005F                                        fp__myInt 0000  
                                      _vfprintf 2212              __end_of_INTERRUPT_InterruptManager 00C8  
                    _INTERRUPT_InterruptManager 0008                                       printf@fmt 00C7  
                              _I2C_SlaveRestart 288C                     _EUSART1_FramingErrorHandler 00EE  
                           __CFG_INTOSCSEL$HIGH 000000                                ___aomod@dividend 006E  
                                    _INTCONbits 000FF2                          ??_INTERRUPT_Initialize 006E  
                                   ?_I2C_Enable 0001                            _I2C_SlaveIsRxBufFull 2766  
                                      intlevel2 0000                 _I2C_SlaveBusColInterruptHandler 00DB  
                    __size_of_I2C_SlaveClearIrq 0004                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 27DC         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 27D2                                      _RCSTA1bits 000FAB  
                           _I2C_SlaveRdCallBack 25D2                                ??_ADC_Initialize 006E  
                               _I2C_SlaveIsData 278E                                 _I2C_SlaveIsRead 277A  
                                      printf@ap 00CB              I2C_SlaveSetWriteIntHandler@handler 006E  
                            __CFG_WDTPS$1048576 000000  EUSART1_SetFramingErrorHandler@interruptHandler 006E  
            __size_of_I2C_SlaveIsWriteCollision 0014                                 ___aomod@divisor 0076  
                    ?_I2C_SlaveIsWriteCollision 0001                                   ??i2_vfpfcnvrt 0048  
                                   ??_vfpfcnvrt 00B5                                 ___aomod@counter 007E  
           __end_of_I2C_SlaveSetWriteIntHandler 27FA                     _I2C_SlaveSetWriteIntHandler 27F0  
                        __size_of_EUSART1_Write 0018                              _eusart1RxLastError 00E9  
                          ?_I2C_SlaveRdCallBack 0001                   ??_I2C_SlaveSetWriteIntHandler 0070  
                                   _SSPCON1bits 000FC6                                     _SSPCON2bits 000FC5  
                      ??_I2C_SlaveSetIsrHandler 0070                           ?_I2C_SlaveIsRxBufFull 0001  
                                  ___aodiv@sign 007F                  __end_of_PIN_MANAGER_Initialize 26AE  
                            i2___aodiv@dividend 0001                             __CFG_BORPWR$ZPBORMV 000000  
        __end_of_I2C_SlaveDefRdInterruptHandler 285E         __size_of_I2C_SlaveDefRdInterruptHandler 000A  
                _I2C_SlaveDefRdInterruptHandler 2854          __end_of_I2C_SlaveDefWrInterruptHandler 2870  
       __size_of_I2C_SlaveDefWrInterruptHandler 0008                  _I2C_SlaveDefWrInterruptHandler 2868  
                         _MSSP_InterruptHandler 00E3                      __size_of_ADC_GetConversion 0040  
                                  ___aomod@sign 007F  
